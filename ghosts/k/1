oo/flows/ooj: |
   flow 1
   Y 2
   C 4
   JJ 3
   
ooj/flow: |
   my $A = {J=>$J,C=>$C};
   die "y";
   # 3
   
   # 7
   
   # 9
   C.sc.J
ooj/Y:
    -
     - cts_Y #
     - 2
     - |
       for my $ct (@{wJ.cts.Y}) {
           next unless ct.any or exists $C->{ct.t_k} && exists $C->{ct.t_k}->{ct.t};
           my $v = $C->{ct.t_k}->{ct.t} unless ct.any;
           my $at = {};
           my $T = {};
           my $d = $C; # bendy stick throw
           my $c = C.c; # <v contation
           my $g = wJ.ctx.Y;
           
           wJ.ctx.Y->{ct.x}->($A,$C,$g,$T,$J,$d,$v,$at);
           
           return die @{T.return} if T.return;
           die "atgot ". ki $at if %$at;
           die "Tgot ct.x ". ki $T if %$T;
       }
       
ooj/C:
    -
     - cts_C #
     - 5
     - |
       A.note = {};
       A.note.not = sub {
           my ($ct,$k) = @_;
           A.note.>$ct.>$k = 1;
       };
       
       my $g = wJ.ctx.C;
       for my $ct (@{wJ.cts.C}) {
           next unless ct.any or exists $C->{ct.t_k}->{ct.t};
           my $v = $C->{ct.t_k}->{ct.t} unless ct.any;
           
           A.note.not&c,ct.t if ct.t_k eq "c";
               
           my $at = {};
           my $T = {};
           my $at = {};
           my $d = $C; # bendy stick throw
           my $c = C.c; # <v contation
           wJ.ctx.C->{ct.x}->($A,$C,$g,$T,$J,$d,$v,$at);
           
           
           for my $k (keys %$at) {
               C.sc->{$k} = $at->{$k};
           }
           if (T.return) {
           die "returning from ct.x   C.sc.J.name";
               return @{T.return};
           }
           last if T.last;
           #die "Tgot ". ki $T if %$T;
       }
       
anno/opi:
   - MZ: moz:C
   - [s, 2, 'd.s = $v;']
   - [pi, 2, 'd.s = "ou?$v";']
   - MZ: isway:1
   - [oJ, 1.12, 'Rw oJ1;']
   - [J, 1.2, 'Rw oJ2;']
   - [W, 2,  'Rw oW2;']
   - [pi, 2, 'Rw opi2;']
   - [J, 3, 'Rw oJ3;']
   - [J, 6, 'Rw oJ6;']
   - [J, 7, 'Rw oJ7;']
ooj/JJ: 
   - MZ: Cc:C
   -
    - sc
    - 1
    - |
     C.sc = delete C.c.sc;
   - MZ: isway:1
   -
    - J
    - 1.12
    - |
     C.c.W = C.c.J;
   -
    - W
    - 1.13
    - |
     Rw oW2;
   -
    - ok
    - 2.2
    - |
     Rw ok5;
     
   - MZ: Csc:C
   -
    - J
    - 3
    - |
      die if !C.t;
      die if !C.y.cv;
      Rw oJ3;
      die if !ref C.sc.J;

   - MZ: Csc:Cany
   -
    - Joing 
    - 6
    - |
      Rw oJ6;

