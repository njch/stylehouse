
C:
 - K: J #c fit in Ds later, which are Js too.
   Gw: 1
   
   
 - K: yep #c impulsive little geometers
   D:
     jCendo: |
       # 
Ray: 
 - K: J
   findway: R_J 
hooks:
  J: # JJJJJJ <-> W@M etc
    print: |
      " JHayaja Shiva Shakary"
    flows_D: |
      w G.theJ setup[$S]; # J level
    S: 
      ishtml: 1
      content_D: | 
        my $flonk = w G.theJ hiss[$S]; # sixer
        "Wup ".$flonk
      Z:
        height: 8em
    E:
      _D: |
        sayyl "To ".$S->pi;
        #w G.theR E[$S, $e];
  percolate_R: | # capow! R
    G.theJ = $G->R('J');
    waylay wup;
  wup: |
    w G.theR Jaction/J;
  peev: | # look
    my @a = K J;
    push @a, K R:J;
    w pv(i=>\@a, n=>1);

R_surz:
    - K: Jaction #c
      key:
        J: J
        SJ: SJ
      n_D:
        SJ: |
          w G.R del(u=>$_) for K J;
          w peev;
        J: |
          my $j = w G.theJ hijack;
          w peev;
          waylay 1 pv(i=>$j, t=>'{bb', n=>2);
R_Jz:
  - K: hijack #c hit J
    D: |
      my $J = w G.theJ makeJ;
      J.hol = "H.style/H.name/H.id";
      J.tiNZ = 'NZ!';
      J.hitime = $H->hitime;
      
      w G.theD i(i=>$J); # chuck J unit over there
      
      w mux(u=>$J);
      $J
  - K: makeJ #c
    D: |
      my $name = ar.name || "J".G.Jnumb++; # additively
      my $u = {K=>'J',name=>$name}; 
      my $J = w G.R fuu[$u]; 
      sayyl "made ++ ".$J->pi;
      $J
  - K: bacup #c SCHEMA
    D: |
        my $ss_Ds = R.S.ss_Ds = Load(<<'');
                  n: |
                     n.HASH = {};
                  Ai: |
                     Ai.A = {};
                  Gi: |
                     my $likes = {map{$_=>1}qw{G ways}};
                     Gi.HASH = {
                      it => sub {
                        my $h = shift;
                        my @r = map { { K=>$_, k=>"{".$_, v=>$h->{$_} } } sort keys %$h
                      },
                     };
        
        for my $k (sort keys %$ss_Ds) { # or K array who knows
            my $u = R.S.ss->{$k} = w $R dus;
            my $D = $ss_Ds->{$k};
            $G->D({bab=>$D, ar=>{$k=>$u}});
        }
        

