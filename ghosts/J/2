R_Jz:
 - K: hiss #c esque pingas
   D: |
      my $html = w $R jitterbug[$J];
      return $html
 - K: jitterbug #c depasoi
   D: |
     w $R inness; # finds on, near in, ups # traction gets to 1
     
     w $R up;
      
     w $R howge;
      
     # set up archeology site, anything you want
     w $R geolo;
     
     w $R geoves;
     
     # map what you got onto geoloJn, perhaps unwholy, resolving around poles
     w $R phairo;
     
     my $html = w G.theR maka; # stuff of 7 with 8 -> 1
     
     $html
 - K: inness #c soy packets everywhere # THINGNESS
   D: |
      J.on = w $R makeJ(name=>J.name.'-on'); # babble
      
      # travwel...
      my $u = {
          id => "not",
          name => "ches",
          G => $G,
          more => "more",
          Bee => "stuff",
      };
      
      # the throat
      # the = is the mod of T, wavedd
      # TODO babble like u.stuff$_ so \w+#\w+
      # bits of this world's language compress away to geometry
      $u->{'stuff'.$_} = "$_~~~~~~$_" for 1..100;
      $u->{'stuff4'.$_} = "$_ ~~~ $_" for 2,4..6,8;
      
      
      
      J.on.bz->("u\t".0.1 => $u);
      
 - K: geoves #c dpaw
   D: |
     # make .......................
     my $thin = 233;
     J.bz->(
        "dot$_"."\t"."0.".sprintf('%03d',$_) =>
        '.',
         '%css' => 'color:blue')
        for
        map { int($_ * (999/$thin)) }
        1..$thin;
     J.bz->(
         "0000_$_/s"."\t"."0.$_" =>
         $_."-------",
         '%css' => 'color:red')
         for 1..9;
      
     # GP PHATNESS
     my @be = grep { _.style eq 've' } w $R tvo(J=>J.geo); # poli
     for my $j (@be) {
         J.fro->("being".j.cv."\t".j.cv =>
             j.s,
             {cv=>0.2, makaz=>{ # hooky
                "/%css#jit\t"."0.1" => 'margin-left:14em;',
             }},
            '%css', 'white-space:pre;'
            );
     }

