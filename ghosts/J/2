R_Jz:
 - K: hiss #c esque pingas
   D: |
      # 1
      Rwyl spit +;
      ;
      # 3
      
      #return Rw spit;
      # prep W magnatron (M)
      my $not = "<J id=\"".encode_entities(J.id)."\"></J>";
      return "69696 J.name 96969";
 - K: spit #c asp
   D: |
      Rw entropia;
      # 3
      # may wanna multiple muxway messaging
      # make emissions to J.id and kinda merge under/into the W
      # so the J flavours is
      #  is W top levels, 
      #  muxish JS sends,
      #  random JS sends,
      #  unmuxey yet emitty J makara
      J.muxuid = u.id;
      Rw jitterbug;
      # 9 andso
 - K: entropia #c the mess, hashe
   D: |
     # the entropics, a fruit
     # smell them afar, break it down
     J.ent.ti = $H->hitime;
     my $ent = 1; 
     J.ent.ti =~ /(\d)\.?(\d)\.?(\d)\.?(\d)\.?(\d)\.?/;
     J.ent->{$ent++} = $_ for reverse ($1,$2,$3,$4,$5);
     
 - K: jitterbug #c depasoi  
   D: |
     
     Rw conroll if J.waltzd;
     
     sayyl  ''.`figlet J.name`;
     
     Rw suck */up;
      
     Rw tent geo;
     Rw the curves $J $oJ:J.geo;
       # V
       Rw geolo;
     
     Rw the mods $J;
     
     # map what you got onto geoloJn,
     # perhaps unwholy, resolving around poles
     Rw phairo;
     
     Rw outhere;
     
     return if ar.cv && ar.cv < 0.8;
     # maka is really 8 cos its making external
     # v pha
     my $html = Rw maka;
     
     die if !J.muxuid;
     $H->send(" \$('#J.muxuid').html(".ejson($html).");");
     # stuff of 7 with 8 -> 1
     
     saygr "JITTERBUGJITTERBUG waltzd J.name ".F_delta, "";
     J.waltzd = $H->hitime;
     
     $html
 - K: conroll #c rolling con tents, the C Js, away into shadow TIME
   D: |
     my @con = map{_.i} @{J.A.n_tent||[]};
     
     unshift @con, $J;
      
     @con = grep { !_.yy.conroll.dont } @con;
     
     @con = grep { keys %{_.bb} } @con;
     
     return if !@con;
     
     say "conrolling ".$J->pi."   tents:";
     sayyl map{" - $_"}
         map { _.name =~ /^(J.name\-)?(.+)$/; "$2 * ".
         do {
             my @log = sort keys %{_.bb};
            @log > 5 ? scalar(@log)
            : join "'", @log;
         };
         } @con;
     
     # dont mention mods? sum mods?
     #sayre "Jmost bb goners: ".join " ", grep { s/\t(.+?)$// || 1 } 
     #    sort grep {!/\%/} keys %{J.bb};

     for my $tent (@con) {
         #say "Scraping out the ".$tent->pi;
         Rw suJ $J:tent;
     }

