R_Jz:
 - K: up #c scan
   D: |
     Rw suck */up;
 - K: mod #c make pool, synth space, want arches
   D: |
     if (ref $d eq 'ARRAY') {
         my $m = $d;
         $d = {};
         (d.t, d.thi, d.s, d.c, d.css, my @etc) = @$m;
         %$d = (%$d, @etc) if @etc;
     }
     if (!ref d.c) {
         d.css = d.c; # m
         delete d.c;
     }
     d.css ||= [];
     d.css = ['%css', d.css] if !ref d.css;
     
     d.in ||= 1;
     d.out ||= d.thi;
     
     if (d.c) {
         my $c = d.c;
         $c = {} if !ref $c;
         d.c = sub {
             my ($i)  = @_;
             my $v = $i / (999 - d.in);
             # 3.2
             my @gl;
             # 3.3
             # 3.4
             # 3.5
             # add style tio 
             # 3.6
             @gl = d.s if !@gl;
             d.s = join'', @gl;
         };
     }
     
     my @is = map { int($_ * (999/d.thi)) } d.in..d.out;
     
     my $dcss = d.css;
     for my $i (@is){ # THE TIR
         d.css = [@{$dcss}];
         d.s = d.c ? d.c->($i, $d) : d.s;
         
         my $r = d.t."$i\t0.".sprintf('%03d',$i);
         
         J.bz->(
         # 7.2
         $r => d.s,
         # 7.25
         @{d.css},
         # 7.9
         );
     }

