R_Jz:
 - K: up #c scan
   D: |
     Rw suck */up;

 - K: cv #c mod cove
   n_D:
     oe: |
       my $v = ar.v || ar.thi || 9;
       my $wi = length($v);
       my $thi = join '', ('9') x $wi;
       my $n = 1;
       
       my $squidge;
       if (ar.off) { # offs both ends? plot shit
           $squidge = int(ar.off * ($thi / ($v))); # TODO not quite
           $n += $squidge;
           $v += $squidge; 
       }
       
       my @is = map { sprintf '%0'.$wi.'d', $_  }
           map { $_ - $squidge }
           map { int($_ * ($thi / $v)) } $n..$v;
       
       #sayyl "thehehehhe $squidge $n $v thi $thi". wdump[@is]; 
       die "numbe rdist ".wdump(2,[$v,$wi,$thi,@is]) if uniq(@is) != @is;
       @is;
       
 - K: howge #c
   D: |
     Rw tent geo;
     J.geo.bz->(@$_) for
     Rw suck */curves,
     ;
     
 - K: geoves #c dpaw
   D: |
     J.yy.gemod = [
     Rw suck */mods,
     ];
     # 6
     for my $d (@{J.yy.gemod}) {
          $d || next;
          # coul be entropated all the way to per geomodiff...
          # 7
          w $R mod/u[$J, $d];
     }
 - K: mod #c modi
   n_D:
     any_init: | #c
       my $m = G.jumb.modi = {};
       %$m = (
         Rw suck - */modi,
       );
     modi: | #c
       my $tw = Rw huck - */MZ;
       my $di = {};
       for my $k (sort keys %$tw) {
           my $v = $tw->{$k};
            
           die wdump(2,$ar);
       }
       return %$di
     u: | #c make pool, synth space, want arches
       if (ref $d eq 'ARRAY') {
           my $m = $d;
           $d = {};
           (d.t, d.thi, d.s, d.c, d.css, my @etc) = @$m;
           %$d = (%$d, @etc) if @etc;
       }
       if (!ref d.c) {
           d.css = d.c; # m
           delete d.c;
       }
       # lop^
       d.css ||= [];
       d.css = ['%css', d.css] if !ref d.css;

       d.in ||= 1;
       d.out ||= d.thi;

       d.cs ||= {};
       d.c ||= {};
       my $c = d.c; # <v contation
       $c = {} if !ref $c;

       d.c = sub {
           my ($i)  = @_;
           my $v = $i / (999 - d.in);
           my @gl;
           # 6 add style tio 
           @gl = d.s if !@gl;
           d.s = join'', @gl; # hmmmmmmmmm
       };

       my @is = map { int($_ * (999/d.thi)) } d.in..d.out;

       my $dcss = d.css;
       for my $i (@is){ # THE TIR
           d.css = [@{$dcss}];
           d.s = d.c ? d.c->($i, $d) : d.s;

           my $r = d.t."$i\t0.".sprintf('%03d',$i);

           push @{d.css}, '%css#'.$_ => d.cs->{$_}
               for sort keys %{d.cs};

           J.bz->(
           # 7.2
           $r => d.s,
           # 7.25
           @{d.css},
           # 7.9
           );
       }

 - K: nuym #c MOD MATSHUP
   babz:
     'mod/u#nuym 3.12345': |
             my $num = $i * $v + 5;
             $num = sprintf '%.3d',$num;
 - K: olours # MOD MOD
   babz:
     'mod/u#olour 3.32345': |
       $i =~ /(\d)?(\d)?(\d)?$/;
       my $col = join'',
       map { /^.*(\d+).*$/; $1 }
       map { J.ent.3 > 6 && $_ > 5 && -4 + J.ent.3 || $_ }
       map{J.ent.1 > 6 ? $1 * (J.ent.3 / 4) :$_}

       $1,$2,$3;
       d.cs.olo = 'color:#'.$col.';white-space:pre;';
 - K: unico # UNICO MOD MOD MOD
   babz:
     'mod/u#wt 3.32344': |
             if (my $un = c.unico) { # some J to mod from 9
                 $un = {} if !ref $un;
                 my $ent = d.s =~ /^(d+)$/ ? $1 : J.ent.2;
                 #push @gl, $ent;
                 # TODO abundance
                 for my $i (1..(un.thi||24)) {
                     my $entoi = $1 if ($ent * $i) =~ /(\d)$/;
                     
                     my ($b, $d) = unico($num+$i* 100 * $entoi, 1);
                     #die wdump($d) TODO
                     my $pa = $entoi > 7 ? "  " : $entoi > 3 ? " " : "";
                     push @gl, $pa.$b;
                 } 1..34;
             }
 - K: fs # MOD MOD MOD
   babz:
     'mod/u#fs 3.532332': |
             if (c.fs) {
                 my $mod = $1 if c.fs =~ s/_(\d+)$//;
                 c.fs =~ s/^0(\d+)/0.$1/; # leading zeroes, etc ssquihs
                 my $siz = c.fs * 9;
                 $siz -= $num / $mod if $mod;
                 push @{d.css}, '%css#egy' => 'font-size:'.$siz.'%;';
             }
 - K: shtackedo #
   babz:
     'mod/u#shtakc 7.5263': |
       '%css#awl', 'text-shadow:2px 2px 7px rgb(0,255,205)'
 - K: jam #
   babz:
     'mod/u#jam 3.43232': |
             if (c.jamit) {
                 push @{d.css}, '%tt#ee' => "JAMTHATFUELTANK"
             }

