R_Jz:
 - K: hull #c whole screen iraga
   n_D:
     conty: | # tyhe other
       sayyl "HULL";
       w mux(u=>$J);
     styJup: |
       qw| hull |
       # geophat
     hijack: |
       my $surf = Rw Jolt ollox sur;
       my $i = surf.bb || die 'nop';
       Rw Jolt + wogox sur $i;
       Rw Jolt oot foot;
     curves: |
         ["spun 0" => 0],
         ["y 0" => 0],
         ["x 0" => 0],
         ["zoom 0" => 0.5],
         ["curve 0.1" => -0.4],
         
         ["zoom 0.4" => -0.12],
         ["curve 0.4" => -0.7],
         
         ["curve 0.8" => -1.4],
     mods: |
       [sqw   => 25,  '~', {}, 'font-size:200%;'],
       [sq   => 10,  '@', {}],
     stylesheet: |
       "
       ux  {pointer-events: none;}
       ux * {pointer-events: all;}
       "
            
 - K: Jolt #c JjJj how to J -> j, sproutlinger
   D: |
     # balance follicles
     die if J.joitne > 9;
     my $n = J.joitne;
     J.joitne++ for 1..2;
     
     my $J2 = Rw hiJ $m;

     Rw fitin $J $n $J2;

     J2.jointed = $J;
     $J2;
 - K: fitin #c like push onto the %Joints centipede, which cons # mmm
   D: |
     $n ||= 0;
     J.bz->(J2.name."\t"."0.".$n => '>:D', '%Joint' => $J2);
     my $cv = 0.7;
     Rw jitterbug $J $cv;
     Rw Joints $J;
 - K: Joints #c
   D: |
     my @things = Rw tvy $J;
     for my $ths (@things) {
         my ($th, @sjs) = @$ths;
         say "y hello ".wdump(1,$ths) if th.l ne th.t;
         
         if (my ($Joi) = grep{_.style eq 'Joint'} @sjs) {
             my @jcss = grep{_.style eq 'css' && _.com =~ /^pha/} @sjs;
             my $J2 = $Joi->{s};
             
             Rw oven $J $J2;
             # J2 now disposed to a part of J, all within L
             
             
             my ($Z, $N);
             for my $N (map { _.s } @jcss) {
                 $Z->{$_} = $N->{$_} for keys %$N;
             }
             sayyl " hoping ".$J2->pi." istyle:".wdump($Z);
             
             if ($Z->{'-webkit-transform'} =~ /rotate\((.+?)rad\)/) {
                 $Z->{'-webkit-transform'} = 'rotate('.($1 + 0).'rad)',
             }
             
             
             my $beef = J2.S.Z;
             my $off = 77;
             Z.width = $off.'%';
             Z.height = $off.'%';
             #Z.border = '2px solid rgba(0,0,0,0.3)';
             J2.S.Z = $Z;
             #say "YESSSSS". wdump 2,[tj.r, $beef, map { "   _.r" } @jcss];
         }
     }

