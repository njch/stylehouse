
name: o
C:
  - K: Hi
hooks:
  fresh_init: | # sub hostinfos before w in does our hostinfo
    $G->su('Hi' => sub {
        my $a = shift;
        w Hi[$a];
    });
    0->su('Hostinfo' => sub {
        my $a = shift;
        my ($hol, $inf) = split ' ', a.m, 2;
        $H->pub("S/$hol", "hostinfo/ack a.m", 'ig');
        saygr "from $hol -> $inf";
        G.hostinfo->{$hol} = {
            info => $inf,
            when => $H->hitime,
        };
    });
    $G->recur(3, sub { saygr " Yep" });
    $G->recur(10, sub {
        my $fi = `find ghosts -type f`;
        $fi =~ s/\n/ /g;
        saygr "lies: ".((`wc -l $fi`)[-1]  =~ /(\d+) total/)[0];
    });
    
    w hostinfo;
    
  in: |
    $G->timer(9, sub{w Hiwtidy;});
  Hi: |
      saygr "a.top to a.m";
      my ($hol, $m) = split ' ', a.m, 2;
      (my $sn = $hol) =~ s/\/\w+$//;
      my @olds = H.r->keys("H/$sn/*");
      for my $oth (@olds) {
          $oth =~ s/^H\///;
          my ($Hid) = reverse split '/', $oth;
          sayre "o $oth";
          if ($oth eq $hol) {
              sayyl " haf self";
                next;
          }
          my $js;
          for my $vh (H.r->keys("V/$Hid*")) {
              my (@v) = split '/', $vh;
              my $ww = $v[2];
              $js .= " \$('#ux > #$ww').remove();";
              H.r->del($vh);
              H.r->del("W/$ww");
          }
          $H->send($js) if $js;
          H.r->del("H/$oth");
      }
  Hiwtidy: |
    my $js = 
    " var e = []; \$('#ux > ww[class*=".'"z"'
    ."]').each(function(){"
        ."e\.push(\$(this).attr('id'));" # could take more clues
    ."});"
    ."return e\.join(' ');";
    my $cb = sub { my $m = shift; w Hiwtidy_ja[$m]; };
    H.G w jaw[$js, $cb];
  Hiwtidy_ja: |
    my $wild = {map { $_ => 1 } split ' ', $m};
    my @Ws = H.r->keys("W/*");
    delete $wild->{$_} for map { /W\/(.+)/ } @Ws;
    my $js;
    for (keys %$wild) {
        $js .= " \$('#ux > #$_').remove();";
    }
    $H->send($js) if $js;
    say "Done Hiwtidy";
    
  reextet: |
    my @also = uniq map { /^H\/(.+)\/.+?$/ } H.r->keys("H/*");
    @also = grep {$_ ne "H.style/H.name"} @also;
    H.r->del($_) for H.r->keys("*");
    $H->pub('S/hut/O', "reextet ".join",",@also);
    H.G w reexec;
    

