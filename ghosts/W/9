R_Jz:
 - K: cl #c
   n_D:
     reC: |
       # MZ sc={co:b238}
       $G->pub('S/hut/C', 'reexec');
     tidy: |
       # MZ sc={co:34b3}
       $G->pub('S/hut/o', 'Hiwtidy');
     reextet: |
       # MZ sc={co:b227}
       $G->tas("S/hut/o" => "reextet");
 - K: ps #c fo9od
   n_D:
     yJup: |
       qw'ps oci ';
     curves: |
       y 0  0.9
       x 0  0.12
       spun 0  0.75
       curve 0.1 -0.024
       zoom 0 0.3
       #["curve 0.4" => 0.3],
     up: | #c
       Rw ii/Jhead $J $cv=0.2;
       Rw ii/psfaus;
 - K: ii/psfaus #c ii = indigo, pi = carving, wt = maneuvrable type 
   D: |
       my @l = `ps faux | grep perl`;
       my $wtf = [];
       for my $l (@l) {
           chomp $l;
           next if $l =~ /grep perl/;
           my @r = split /\s+/, $l, 11;
           my $cs = [@r[0..3,9,10]];
           my $o = Rw pul $cs user pid cpu mem time cmd;
           
           push @$wtf, $o;
       }
       my $M = [];
       for my $f (@$wtf) {
           my $c;
           c.pi = 'psfacts';
           c.gp.cv = 0.8;
           c.s = $f;
           c.i = 1; # numbers
           my $sc;
           sc.co = '4fc';
           sc.zi = 10;
           sc.ws = 'p';
           push @$M, ['SOI', '', $c, $sc];
       }
       my $in = 0.1;
       my $out = 0.9;
       my $k = 'psfaus';
       
       my $oM = [];
       Rw MyN $M:oM $N:M pwth;
       Rw om/bal $J $oM $in $out $k;
 - K: pi/psfacts #c
   D: |
        $_ =  u.cmd;
        my ($style,$name) =
            /l\/S\.pm (.+)$/ ? ('hut', $1)
            :
            /stylehouse\.pl$/ ? ('h00s', $_)
            :
            /\.\/ps/ ? ('ps', $_)
            :
            ("weird", $_);
        
        if ($style ne 'hut') {
            $name =~ s/^[| ]+//;
        }
        if ($style eq 'ps') {
            $name =~ s/\/usr\/bin\/perl //;
        }
        
        my $M = []; # HMMMMM may wannsa J?
        
        Rw wt/stylename $M $style $name; 
        
        Rw wt/cpu $M $cpu:u.cpu;
        Rw wt/mem $M $mem:u.mem;
        
        warn "heaps of mem on $style $name  (u.mem)" if u.mem > 20;
        my $V = 1;
        
        #say "psfact -: ".ki 2, $_ for @$M; 
        #die wdump [$d, $ar];
        Rw iM $J $M;
        
        # J.fo->($u,0.3); # fo HASH complicato
 - K: wt/stylename #c  TODO return _M_ brigy dep text jostle
   D: |
       my $sc = {}; # carbon flux $style
       my $nsc = {}; # carbon flux $name
       
       if ($style eq 'hut') {
           sc.co = 'fc7';
           sc.fs = 14;
       }
       if ($style eq 'h00s') {
           sc.co = '007';
           sc.sha = '3 1 2 cff6';
       }
       if ($style eq 'ps') {
           sc.co = '804';
           sc.sha = '3 1 2 fc77';
       }
       # ^ sheety
       
       nsc.co ||= '4fc';
       if ($style eq 'hut') {
           nsc.co = 'ff0';
           nsc.fs = 29;
       }
       if ($name eq '\_ perl stylehouse.pl') {
           $name = 'stylehouse.pl';
           nsc.fs = 8;
       }
       sc.sha = '1 2 6 000';
       nsc.sha = '1 2 6 000';
       my $nc;
       nc.weigh = 'activity';
       
       Rw wtf $M style 1 $s:style $sc;
       Rw wtf $M name 2 $s:name $c:nc $sc:nsc;
 - K: wt/cpu #c  # TODO make fs smooth, atomical curve compu
   D: |
       my $sc;
       sc.co = 'eb0';
       sc.fs = $cpu<0.5?4:$cpu<2?7:$cpu<4?10:14;
       sc.sha = '1 2 6 000';
       my $c;
       c.weighed = 'activity';
       Rw wtf $M cpu 3 $s:cpu $c $sc;
 - K: wt/mem #c
   D: |
       my $sc;
       sc.co = '8e0';
       sc.co = 'f30' if $mem > 20;
       sc.fs = $mem<2?4:$mem<5?7:$mem<12?14:28;
       my $c;
       c.weighed = 'activity';
       Rw wtf $M mem 4 $s:mem $c $sc;

