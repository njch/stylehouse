
hooks:
  wongawonga: |
    die
  rr: |
    my @AA;
    for my $A ($O->tractors) {
        if (w $A arr_if) {
            push @AA, $A->spawn();
        }
    }
    
    if (!@AA) {
        die "No traction for! ".ki($ar);
    }
    
    die "CROWD OF TRACTORS" if @AA > 1;
    for my $A (@AA) {
        $A->{B} = { %$ar };
        if (my $B_ = w $A B_) {
            $A->{B}->{_} = $B_;
        }
    }
    
    for my $A (@AA) {
        my $r;
        if (my $Already = w retract[$A]) {
            $Already->{B} = $A->{B};
            $A = $Already;
            $G->Flab("A retracted     \t".ki($ar), $ar);
            w $A nonfirst_times;
        }
        else {
            $A = $A->spawn;
            $G->Flab("A               \t".ki($ar), $ar);
            w $A first_time;
            $A->{waystack} = $G->stackway;
        }
        
        waylay populi;
            
        my $p = w $A print;
        $p ||= "nowame";
        $A->{name} ||= $p;
        $G->Flab("A    $p", $A);
        $O->{t} = $A;
    }
    
    return @AA    ;
  retract: |
    return unless exists $A->{B}->{_};
    my @keep;
    my @found;
    $O || die "NO tractor O! $G->{name}";
    for my $line (@{ $O->W->{script} }) {
        #$H->info("Line: $line", $O->{name}, $line);
        next if ref $line eq "ARRAY" && @$line == 0; # wtf case
        if ($line->{t}->{B}->{_} eq $A->{B}->{_}) { # ar this to W->{G}?
             push @found, $line;
        }
        else {
            push @keep, $line;
        }
    }
    $O->W->{script} = \@keep;
    if (!@found) {
        return;
    }
    return $found[0]->{t};
  populi: |
    my ($A) = $O->tractors;
    my $s = $O->W->{script};
    if (my $max = $A->find('populi/max')) {
        shift @$s until @$s <= $max; # off by one for the line about to happen..?
    }
    if (my $h = $A->find('populi/_hooks')) {
        for my $he (@$h) {
            $he->();
        }
    }
  random: |
    my $tot = @{ $O->W->{script} }-1;
    my $i = int rand $tot;
    return $O->W->{script}->[$i]->{t};
  find: |
    my @wheres;
    while (my ($k, $v) = each %$ar) {
        push @wheres, [ $k, $v ];
    }
    for my $line (@{ $O->W->{script} }) {
        #$H->info("Line: $line", $O->{name}, $line);
        next if ref $line eq "ARRAY" && @$line == 0; # wtf case
        my $A = $line->{t};
        return $A if @wheres == grep {
            !exists $A->{B}->{$_->[0]} ||
                $A->{B}->{$_->[0]} eq $_->[1]          } @wheres
    }

