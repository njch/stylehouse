
hooks:
  LIES: |
    but nearly
    something on the side of a Tw
      which is a Travel that kinda knows where it wants to go
      using the way in (to say arr_way
      to resolve the T to W thing casually along with whatever the T hit
  
  wongawonga: |
    die
  rr: |
    G.W = O.W;
    my @AA;
    for my $A ($O->tractors) {
        if (w $A arr_if) {
            push @AA, $A->spawn();
        }
    }
    
    if (!@AA) {
        die "No traction for! ".ki($ar);
    }
    
    die "CROWD OF TRACTORS" if @AA > 1;
    for my $A (@AA) {
        $A->{B} = { %$ar };
        if (my $B_ = w $A B_) {
            $A->{B}->{_} = $B_;
        }
    }
    
    my @AAA;
    for my $A (@AA) {
        A._fresh = 1;
        my $a = 0->Tafu($A) || die "WTf";
        
        if (a._fresh) {
            Say "A first  a.K\t".ki(a.B);
            $H->snooze(400);
            delete a._fresh;
            $G->Flab("A first \t", $a);
            w $a first_time;
        }
        else {
            Say "Aretraction <<<< a.K\t".ki(a.B);
            $H->snooze(400);
            # in case some non-B_ affecting B{ thing changes
            a.B = { %{a.B}, %{A.B} };
            $G->Flab("AAAA    \t", $a);
            w $a nonfirst_times;
        }
        
        w $a every_time;
        $G->_0(sing => {
            name => "populi $G->{name}",
            again_after => 3,
            begin_after => 1,
            code => sub {
              w populi;
            },
        });
            
        my $p = w $a print;
        a.name ||= $p || "nowame";
        
        push @AAA, $a;
    }
    
    return @AAA;
  populi: |
    my ($A) = $O->tractors;
    my $s = $O->W->{script};
    if (my $max = $A->find('populi/max')) {
        shift @$s until @$s <= $max;
    }
    my $hp = 'populi/hooks';
    if (my $h = $A->find($hp)) {
        for my $he (keys %$h) {
            $G->w("$hp/$he", $ar, $A);
        }
    }
  random: |
    my $tot = @{ $O->W->{script} }-1;
    my $i = int rand $tot;
    return $O->W->{script}->[$i]->{i};
  find: |
    die "NOT EXIST FIND NO MORE";
    my @wheres;
    while (my ($k, $v) = each %$ar) {
        push @wheres, [ $k, $v ];
    }
    for my $line (@{ $G->W->{script} }) {
        #$H->info("Line: $line", $O->{name}, $line);
        next if ref $line eq "ARRAY" && @$line == 0; # wtf case
        my $A = $line->{i};
        next if ref $A ne "Way";
        return $A if @wheres == grep {
            !exists $A->{B}->{$_->[0]} ||
                $A->{B}->{$_->[0]} eq $_->[1]          } @wheres
    }

