
hooks:
  rr: |
    my @AA;
    for my $A ($O->tractors) {
        if (w $A arr_if) {
            push @AA, $A->spawn();
        }
    }
    
    if (!@AA) {
        die "No traction for! ".join "  ", %$ar;
    }
    
    die "CROWD OF TRACTORS" if @AA > 1;
    for my $A (@AA) {
        $A->{B} = { %$ar };
        if (my $B_ = w $A B_) {
            $A->{B}->{_} = $B_;
        }
    }
    
    for my $A (@AA) {
        
        if (my $Already = w retract[$A]) {
            $Already->{B} = $A->{B};
            $A = $Already;
            $G->Flab("retracted  ", $ar);
            w $A nonfirst_times;
        }
        else {
            $A = $A->spawn;
            $G->Flab("First time for  ", $ar);
            w $A first_time;
        }
        $O->{t} = $A;
    }
    
    $G->Flab(AA => [@AA]);
    
    return @AA    ;
  retract: |
    my @keep;
    my @found;
    for my $line (@{ $O->W->{script} }) {
        #$H->info("Line: $line", $O->{name}, $line);
        next if ref $line eq "ARRAY" && @$line == 0; # wtf case
        if ($line->{t}->{B}->{_} eq $A->{B}->{_}) { # ar this to W->{G}?
             push @found, $line;
        }
        else {
            push @keep, $line;
        }
    }
    $O->W->{script} = \@keep;
    if (!@found) {
        $H->Say("no foundo $G->{name} $A->{B}->{_}");
        return;
    }
    $H->Say("yup yup ytupy upyuyp $G->{name} $A->{B}->{_}");
    return $found[0]->{t};
  find: |
    my @wheres;
    while (my ($k, $v) = each %$ar) {
        push @wheres, [ $k, $v ];
    }
    for my $line (@{ $O->W->{script} }) {
        #$H->info("Line: $line", $O->{name}, $line);
        next if ref $line eq "ARRAY" && @$line == 0; # wtf case
        my $A = $line->{t};
        return $A if @wheres == grep {
            !exists $A->{B}->{$_->[0]} ||
                $A->{B}->{$_->[0]} eq $_->[1]  } @wheres
    }

