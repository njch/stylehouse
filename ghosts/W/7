
esc c:
 - K: sha #c it
   esc 3: |
     my @m = split m/\s/, $v;
     $m[-1] = X.cole->($m[-1]);
     sprintf 'text-shadow:%dpx %dpx %dpx %s', @m;
 - K: cole #c it
   esc 3: |
        my $h;
        (h.r, h.g, h.b, h.la) = ($1, $2, $3, $4)
                  if $v =~ /^(\w)(\w)(\w)(\w)?$/ || die;
        
        if (defined h.la) {
           # do an rgba(255,255,255,1)
           for my $k (qw'r g b la') {
               my $e = $h->{$k};
               $e = "$e$e" if length $e == 1; # out of 255
               $h->{$k} = hex $e;
           }
           h.la = sprintf '%.2f', h.la / 255; # out of 1
           return "rgba(h.r,h.g,h.b,h.la)";
        }
        else {
           return sprintf "#%s%s%s", h.r, h.g, h.b;
        }
 - K: zi #c it
   esc 3: |
     "z-index:$v"
 - K: co #c it
   esc 3: |
     "color:".X.cole->($v);
 - K: fs #c it
   esc 3: |
     $v *= 9;
     'font-size:'.int($v).'%';
 - K: ws #c it
   esc 3: |
     my @wtf;
     push @wtf, 'white-space:pre' if $v =~ /p/;
     join ';', @wtf;
 - K: blr #c it
   esc 3: |
     '-webkit-filter:blur('.$v.'px)'
 - K: ml #c it
   esc 3: |
     $v .= 'em' if $v !~ /(%|em|px)/;
     "margin-left:$v"

