
R_surz:
    - K: stringlook #c
      babz:
        'S 3.424': |
          if (!%$d) {
            if (!ref a.i) {
              sayre "SDoing something else";
              S.mod.humm = 'simphumm';
              my $sd = {};
              $G->D_to_style({K=>"s",D=>a.i}, $sd);
              
              # how near or how far
              my $ip = {cv=>S.a.travly} if S.a.travly;
              my $on = $R->Jshonj($sd, $ip);
              
              saygr "Was S.a.travly";
              while (my ($j, $sec) = $on->()) {
                  last if !$j;
                  my $k = j.t;
                  my $v = j.cv;
                  my $s = j.s;
                  
                  # sec runs 0,1-5, so 5 doubled down
                  # into 0.7 make 0.8 for the onness
                  
                  my $vo = 0.7 + $sec*0.02;
                  $vo = 0.73 if !$ip;
                      
                      sayyl " j.cv \t $sec\t\t$vo";
                  $d->{"^j.cv\t$vo"} = $s;
              }
            }
          }
    - K: stylook #c compress style slightly
      babz:
        'S 3.4145': |
          if (3 == grep { $_ =~ /^.+ .+\d\t.+$/ } (shuffle keys %$d)[0,1,2]) {
              my $l;
              for my $k (keys %$d) {
                  my $j = $R->shj($k, $d);
                  #sayre j.t;
                  my $t = j.t;
                  my $st = $1 if $t =~ s/(%\S+)//;
                  $st ||= 'Å¾';
                  my $lt = "$t\t"."0.4";
                  exists $l->{$lt}->{$st} && die "$t    $st";
                  $l->{$lt}->{$st} = j.s;
              }
              
              my $be = { bb=>$d };
              # chuck from afar straight into 7
              #my $sly = w $R maka(a=>$be);
              #a.bz->("something 0.6", $sly, '%ishtml'=>1);
              
              $d = $l;
          }
    - K: hookok #c
      babz:
        'S 3.4146': |
          if (S.mod.hooklook) {
              for my $k (keys %$d) {
                  my $v = delete $d->{$k};
                  next if ref $v;
                  $k =~ s/(?<=\t)(.+?)$/0.4/;
                  $d->{$k} = $v;
              }
          }

          
    - K: adu #c
      n_D:
        humms: |
          my @r = w stylekeysort[$d];
          my $si = @r;
          my @i = w $R wind[$si];
          my $ro = S.a.ro = {}; # wind round
          my $i = 0;
          for my $r (@r) {
              #  sayyl " - $r";
              my $j = $R->shj($r, $d);
              #sayre wdump($j);
              
              my $li = j.li = shift @i || die;
              $ro->{$li} = $j;
              
              
              a.bz->("${li}_Bs 0.3 0.3${li}0" => "\n") if $i > 0;
                   
              a.bz->("${li}_li 0.3 0.3${li}1", j.li,
                  '%sf', 'blue_fs120');

              my $t = j.t;
              $t .= join("", (" ") x (6 - length($t))) if length($t) < 6;
              a.bz->("${li}_k 0.3 0.3${li}2", $t,
                  '%sf', 'black');

              my $cv = j.cv;
              $cv =~ s/^0//;
              a.bz->("${li}_cv 0.3 0.3${li}22", $cv,
                  '%sf', 'red_fs80');


              a.fro->("${li}_s 0.3 0.3${li}4", j.s, j.cv,
                  '%sf', 'white_fs120');
              $i++;
          }

