
R_surz:

    - K: wind #c
      D: |
        my $s = 9;
        return 1..$s if $si <= $s;
        my $wind = $si - 9;
        my $from = 6;
        my $for = 3;

        my @i;
    
            my $la = $wind / $for;
            my $za = int $la;
            
            my $y;
            my @wind = 1..$wind;
            my @ys = $from..$from+$for-1;
            my $yi = 0;
            while (@wind) {
                my $win = shift @wind;
                
                my $at = $ys[$yi];
                $y->{$at}++;
                
                $yi++;
                $yi = 0 if !exists $ys[$yi];
            }
            
            for my $wi (1..$s) {
                
                if (my $la = $y->{$wi}) {
                    my @la = 1..$la+1;
                    for my $pl (@la) {
                        push @i, "$wi$pl";
                    }
                }
                else {
                    push @i, $wi;
                }
            }
            
            @i
            
  
    - K: simphumm #c
      n_D:
        humms: |
          my @r = $G->stylekeysort($d);
          my $si = @r;
          my @i = w $R wind[$si];
          my $ro = S.a.ro = {}; # wind round
          my $i = 0;
          for my $r (@r) {
              my $j = $R->shj($r, $d);
              
              my $li = j.li = shift @i || die;
              $ro->{$li} = $j;
              #my $z = a.bz->("$li 
              a.fro->("${li}_s 0.3 0.3${li}4", j.s, j.cv,
                  '%sf', 'white_fs120');
              
              a.bz->("${li}_z 0.3 0.3${li}5", "\n") if j.cv < 0.7;
              $i++; 
          }
          #a.bz->("/%css 0.1", 'background:rgba(10,10,0,1)');
          
    - K: E #c event
      D: | 
        #ay wdump(2, $ar);

        my $id = e.id;
        sayyl "ID: $id";
        my $pi = S.a.pis->{$id};
        my ($gpl) = grep {S.a.bb->{$_} eq $pi} keys %{S.a.bb};
        my $k = $1 if $gpl =~ /^(\d+)/;
        if (!defined $k) {
            sayre "nothing to";
            return unless $pi;
            ar.i = $pi;
            w are;
            w $R Sud/in;
            return;
        }
        w are;
        w $R Num/in[$k, $S];
      
      
      
    - K: adu #c
      n_D:
        humms: |
          my @r = $G->stylekeysort($d);
          if (S.mod.styleinstyle) {
              @r = w $R stylestylekeysort[$d];
          }
          my $si = @r;
          my @i = w $R wind[$si];
          my $ro = S.a.ro = {}; # wind round
          my $i = 0;
          for my $r (@r) {
              #  sayyl " - $r";
              my $j = $R->shj($r, $d);
              #sayre wdump($j);
              
              my $li = j.li = shift @i || die;
              $ro->{$li} = $j;
              
              
              a.bz->("${li}_Bs 0.3 0.3${li}0" => "\n") if $i > 0;
                   
              a.bz->("${li}_li 0.3 0.3${li}1", j.li,
                  '%sf', 'blue_fs120');

              my $t = j.t;
              $t .= join("", (" ") x (6 - length($t))) if length($t) < 6;
              
              a.bz->("${li}_kwa 0.3 0.3${li}2", $1) if $t =~ s/^(\W)//;
              
              a.bz->("${li}_k 0.3 0.3${li}3", $t,
                  '%sf', 'black');

              my $cv = j.cv;
              $cv =~ s/^0//;
              a.bz->("${li}_cv 0.3 0.3${li}4", $cv,
                  '%sf', 'red_fs80');


              a.fro->("${li}_s 0.3 0.3${li}5", j.s, j.cv,
                  '%sf', 'white_fs120');
              $i++;
          }
    - K: stylestylekeysort #c
      D: |
        my @r = sort keys %$d;
        my $by = { map {
            my @w = split "\t", $_;
            warn " Oi '$_' not stylestyle or not using tabs proply" if @w != 3;
            my $s = join"\t", $w[1], $w[0], $w[2]; # scv, st, cv
            $s => $_;
        } @r };
        @r = map { $by->{$_} } sort keys %$by;
        
        @r

