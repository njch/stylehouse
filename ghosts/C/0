C:
 - K: Con #c waiting for tension

R_Jz:
 - K: ash #c woosh
   n_D:
     life: |
       die;
       sayre "GOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOO" for 1..12;
       J.yy.jiter = 'borg';
 - K: afghanrug #c
   n_D:
     mods:
        -
          - afghanrug
          - in: 0.1
            out: 0.9
            thi: 13
          - s:   ஓ୶
            cow: rgb f3a
            mixco: 0.5 582
          - blr: 4
            fs: 152.9
            sat: 1
            bri: 0.3
            con: 3
            sha: 3 3 3 034
            zi: 5
 - K: fiz_ave #c
   n_D:
     mods:
        - 
          - sqww
          - in: 0.001
            out: 0.8
            thi: 28
          - s: ஓ୶
            cow: rgb 155
            mixco: 0.4 300
            zim: 4^v1
          - blr: 5
            sat: 6
            sha: 5 5 5 000
            fs: 141
            ml: -0.1em
 - K: flax #c
   n_D:
     mods:
        - 
          - flax
          - 21
          - s: ॐॐॐॐॐॐ
            cow: rg 86e
            zim: 5^v0.5*2
            mixco: 0.61 050
          - blr: 2
            fs: 54.9 
            #hs: 44.3.4.8
 - K: ocean #c
   n_D:
     mods:
       -
         - ocean-squi
         - 16 # rivm add space every 1/3 so these go @ ~ ~ @ ~ ~ or so
         - s: '~'
         - fs: 24
           zi: 3
       -
         - ocean-eddy
         - 8
         - cow: f33
           #unico: 132
           s: '@'
         - fs: 73
           zi: 2
 - K: oci #c
   n_D:
     mods:
       -
         - ociw
         - 16 # rivm add space every 1/3 so these go @ ~ ~ @ ~ ~ or so
         - s: '|'
           cow: b 127
         - fs: 22 # TODO local zoom...
           co: aaf
           sha: 3 3 5 fff
           opa: 0.5
           zi: 6
 - K: theself #c CURVE domer
   n_D:
     yJup: |
       J.yy.round.id = 3;
       die;
       'theself', 'sur'
     curves: |
         ["spun 0" => 0.025], 
         ["curve 1" => 0.211],
         ["zoom 0" => 0.35],
         ["zoom 0.21" => 0.45],
         ["y 0" => 0],
         ["x 0" => 0.8],
         ["x 0.1" => 0.7],
         ["curve 0.3" => -0.111],
         
     mods: |
       [sq   => 10,  '~'],
       #[sqat   => 20,  '^', {}, 'color:blue', in => 10, ],
       #[sqat   => 20,  'v', {}, 'color:blue', out => 10, ],


 - K: ii/Jhead #c J _
   D: |
       my $at = ar.out || 0.01;
       
       my $M = [];
       
       Rw Mn $n:_ $M for
          ['J', '', {pwth=>'hull/mk:Jself',fo=>[$J,0.1]}];
       Rw the + Jhead $M;
       
       Rw om/lev + $oM:M Jhead $at;
 - K: ii/ornate #c arabic ornate parenthesis
   D: |
       my $gl = ar.out ? '﴿' : '﴾';
       my $at = ar.out || ar.in || 0.01;
       my $d;
       d.t = 'ornate';
       d.y.at = $at;
       d.c.s = $gl;
       d.sc = {qw{ fs 230   hs 4.3.7.5   zip 3   blr 5   zi 3   rad 1}};
       
       Rw iiJM + $d;
 - K: ii/cap #c ha zom
   D: |
       my $vli = x.sc.traveli || die;
       
       my $N = [
           ['_', '',         {s=>x.j.l}, {fs=>4, co=>'38f'}],
           ['=', '',         {}, {fs=>12,co=>'000'}],
           ['i', 'sur/to:/', {fo=>[$vli,0.1]}],
       ];
       if (x.sc.travely && @{x.sc.travely}) {
           my $s = " ".join(" ",@{x.sc.travely})." ";
           push @$N,
               ['travely', '', {s=>$s, wsp=>1}],
               ['S',       '', {fo=>[x.j.s, 0.2]}],
       }   
       
       my $M = [];
       # cend pwth
       Rw MN $N $M pwth;
       
       #say "ii/cap: ".ki$rr;
       my $t = x.j.t.'-cap';
       Rw om/lev + $oM:M $t;
 - K: ii/bod #c boodle am $rr into $M: lab,pi, lab,pi ...
   D: |
       my $in = x.in; # TODO whereto?
       my $out = x.out;
       my $phi = ($out - $in) * x.thi; # normal lines per 0.1
       my $thi = $phi * 2; # oundo big window, bod small
       
       say "bod $in <--> $out  $thi     x.j.r"; # TODO say big
       
       my $o = Rw oundo $thi $u:x.j.s $sc:x.sc;
       
       warn "More o.more" if o.more;
       my $M = [];
       map {
           my $r = $_;
           my $oM = [];
           # SZOOOOOOOOOOOM
           Rw ii/labegy $r $M:oM;
           Rw ii/pi $r $M:oM;
           # ^ pass $thi, pool resources
           
           my $c = {path=>r.path};
           #sayyl "iibod: ". ki $r;
           
           Rw om/lev + $oM $M $t:r.r $c;
       } @{o.r};
       Rw iM + $oM:M;
 - K: ii/labegy #c suitcase handle
   D: |
     my $d;
     d.t = 'lab';
     d.c.s = r.r;
     d.sc.ws = 'p';
     d.sc.ab = 'right:0.5em';
     d.c.fsx = "25";
     Rw iiJM + $d;
 - K: ii/pi #c THE WHOLE GHUTS
   D: |
     my $d;
     d.t = 'pi';
     d.c.fo = [r.s, 0.6];
     d.c.path = r.path;
       
     d.sc.ws = 'n';
     d.sc.ab = 'left:1em';
     d.sc.mw = '14em';
     d.sc.over = 'hidden';
     Rw iiJM + $d;

