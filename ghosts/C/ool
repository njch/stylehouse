name: psych synth
dials:
  uM_styles: oogabooga
  ux_Ss: [x, X]
  _Ss: [ooo]
C:
 - K: Images
   print: |
     $dir
   flows_D: w suckimages[$dir];
   u_from:
     spawn:
      - K: i
      - K: t
      - K: e
      - K: X
        styles: []
        S:
          content: Hihi!!
     
 - K: Image
   styles: p1 blur3
   print: |
     $file
   u_from:
     spawn:
      - K: timg
      - K: i
      
 - K: timg
   styles: reson
   S:
     content_D: |
         "TENTY"
     
 
 - K: Ooogida
   styles: sativo reson
hooks:
  ooo_S:
    - K: yi
      css: 
        - margin-left:0.5em
        - color:#6f7
        - font-size:66%
    - K: yo
      css: 
        - color:#fff
        - font-size:40%
        - z-index:5000
    - K: yt
      css: 
        - color:#873
        - font-size:120%
    - K: yw
      css: 
        - margin-left:0.5em
    - K: te
      css: 
        - border-bottom:1px solid black
        - padding-left:2em
        - float:left
        - position:relative
        - width:calc(100% - 2em)
        - background:rgba(150,100,50,0.1)
        
    - K: p1
      css:
       - border:0.1em solid white
    - K: reson
      css:
       - background:rgba(125,23,55,0.8)
       - padding:1em
    - K: blue
      css:
       - background:rgba(23,23,125,0.8)
       - padding:1em
    
    - K: sativo
      css:
       - -webkit-filter:brightness(1.2) saturate(2)
    - K: blur2
      css: 
       - -webkit-animation:blur 3s infinite;
    - K: blur
      keif:
       - K: 0%, 100%
         css:
          - -webkit-filter:blur(0px)
       - K: 50%
         css:
          - -webkit-filter:blur(10px)
          
          
  recoded_init: |
    for my $i (map {_.i} @{G.T.W.script}) {
        my $up = 0->CsK({K=>i.K});
        $i->from($up);
    }
  ux_receive: |
    G.ux = $GG;
    my $uW = 0->CsK({K=>'W'}, G.ux);
    
  percolate: |
    0->TafuB(Ooogida => {whatcha => "Woogie"});
    0->TafuB(Images => {dir => '/s/public/i'});
    
    # alright so... see styles run around
    # mod styles to mod waves of stuff
  suckimages: |
     my @finds = grep { /gif$/ } map { 0->fs_find($_) } $dir;
     for my $file (@finds) {
         0->TafuBl(Image => { file => $file });
     }
  uxd: |
    G.ux->w('ux', {W=>$G->W});

