R_Jz:
 - K: lx/suro #c
   D: |
      my $j = x.j;
      my $coi = Rw pha $J $k:j.l;
      my $M = [];
      
      sayyl wdump $x;

      Rw ii/cap $x $M;
      # ^ ^ ^ ^ ^ ^
      #^ ^ ^ ^ ^ ^ ^
      Rw ii/bod $x $M;
      #v v v v v v v
      # v v v v v v

      say "surM:   t:_.t    y:".ki(_.y)."        c:".ki(_.c)."       sc:".ki(_.sc) for @$M;
      die if !@$M;
      my $V = 1;
      Rw om/bal $J $oM:M $t:j.t $in:x.in $out:x.out $V;
      coi.end->();
 - K: ii/cap #c ha zom
   D: |
       my $vli = x.sc.ori || die;
       
       my $N = [
           ['_', '',         {s=>x.j.l}, {co=>'38f'}],
           ['=', '',         {}, {fs=>12,co=>'000',sha=>'3 3 3 fff'}],
           ['i', 'sur/to:/', {fo=>[x.sc.ori,0.4]}],
       ];
       if (x.sc.travely && @{x.sc.travely}) {
           my $s = " ".join(" ",@{x.sc.travely})." ";
           push @$N,
               ['travely', '', {s=>$s, wsp=>1}],
               ['S',       '', {fo=>[x.j.s, 0.2]}],
       }
       
       my $M = [];
       # cend pwth
       Rw MN $N $M pwth;
       
       Rw ii/capstyle + $M;
       
       #say "ii/cap: ".ki$rr;
       my $t = x.j.t.'-cap';
       Rw om/lev + $oM:M $t;
 - K: ii/capstyle #c
   D: |
       my $sw = {};
       for (grep {!/^(travely|ori)$/} sort keys %{x.sc}) {
           $sw->{$_} = x.sc->{$_};
       }
       return unless %$sw;
       my $c = {fo=>[$sw,0.7], cow=>'rgb 38f'};
       Rw wtf + caps $c;

