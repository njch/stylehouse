
R_surz: #c
    - K: hookok #c
      babz:
        'S 3.213': |
          if (S.J.trav eq  '{way{hooks') {
              a.e += 2;
              S.mod.hooklook = 1;
          }
        'S 3.4146': |
          if (S.mod.hooklook) {
              for my $k (keys %$d) {
                  my $v = delete $d->{$k};
                  next if ref $v;
                  $k =~ s/(?<=\t)(.+?)$/0.4/;
                  $d->{$k} = $v;
              }
          }

          
    - K: stringlook #c S 3424
      babz:
        'S 3.424': |
          if (!%$d && !ref a.i) {
              sayre "SDoing something else";
              S.mod.humm = 'simphumm';
              my $sd = {};
              $G->D_to_style({K=>"s",D=>a.i}, $sd);
              
              # how near or how far
              my $ip = {cv=>S.a.travly} if S.a.travly;
              my $on = $R->Jshonj($sd, $ip);
              
              saygr "Was S.a.travly";
              while (my ($j, $sec) = $on->()) {
                  last if !$j;
                  my $k = j.t;
                  my $v = j.cv;
                  my $s = j.s;
                  
                  # sec runs 0,1-5, so 5 doubled down
                  # into 0.7 make 0.8 for the onness
                  
                  my $vo = 0.7 + $sec*0.02;
                  $vo = 0.73 if !$ip;
                      
                  sayyl " j.cv \t $sec\t\t$vo";
                  $d->{"^j.cv\t$vo"} = $s;
              }
          }
    - K: stylook #c S 34145 # compress style slightly # TODO
      babz:
        'S 3.4145': | 
          if (3 == grep { $_ =~ /^.+ .+\d\t.+$/ } (shuffle keys %$d)[0,1,2]) {
              my $l;
              for my $k (keys %$d) {
                  my $j = $R->shj($k, $d);
                  #sayre j.t;
                  my $t = j.t;
                  my $st = $1 if $t =~ s/(%\S+)//;
                  $st ||= 'Å¾';
                  my $lt = "$t\t"."0.4";
                  exists $l->{$lt}->{$st} && die "$t    $st";
                  $l->{$lt}->{$st} = j.s;
              }
              
              my $be = { bb=>$d };
              # chuck from afar straight into 7
              #my $sly = w $R maka(a=>$be);
              #a.bz->("something 0.6", $sly, '%ishtml'=>1);
              
              $d = $l;
          }

