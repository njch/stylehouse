
R_surz: #c



    - K: playn #c
      babz:
        'S 3.214': |
          if (S.J.trav eq  '{way{hooks') {
              a.e += 2;
              S.mod.hooklook = 1;
          }
          if (S.mod.double) {
              my $an = {u=>a.i, cv=>0.8, q=>1};
              w $R gp(a=>$an);
              
              my $anH = {u=>a.i, cv=>0.8, q=>1, wa=>'HASH2'};
              w $R gp(a=>$anH);
              
              my $something = {
                  #%{an.bb},
                  %{anH.bb}
              };
              
              w Dave(K=>"Cm1",way=>"C/nv",Dname=>"hd",i=>$something);
          }
    - K: stringlook #c
      babz:
        'S 3.424': |
          S.mod.humm = 'adu';
          if (!%$d) {
            if (!ref a.i) {
              sayre "SDoing something else";
              S.mod.humm = 'simphumm';
              my $sd = {};
              $G->D_to_style({K=>"s",D=>a.i}, $sd);
              my @ksd = sort keys %$sd;
              
              # how near or how far
              my $on;
              my @j = map { G.R->shj($_, $sd) } @ksd;
              ($on) = map { _.cv } grep { _.cv eq S.a.travly } @j;
              
              saygr "Was S.a.travly";
              for my $j (@j) {
                  my $k = j.t;
                  my $v = j.cv;
                  my $s = j.s;
                  my $sec = 0;
                  
                  my $vo = 0.7;
                  
                  if ($on && $on eq j.cv || @j == 1) {
                      $vo = 0.8;
                      sayyl "\t\t$on  j.cv";
                  }
                  elsif ($on) {
                      my $dist = $on - j.cv;
                      $dist *= -1 if $dist < 0;
                      if ($dist > 5) {
                          $sec = 0;
                      }
                      else {
                          $sec = -$dist + 5;
                      }
                      
                          $sec = $sec*0.01;
                          $vo = 0.7 + $sec;
                      
                      sayyl " j.cv \t $sec\t\t$vo";
                  }
                  say "^j.cv\t$vo";
                  $d->{"^j.cv\t$vo"} = $s;
              }
            }
          }
    - K: stylook #c
      babz:
        'S 3.4145': |
          if (3 == grep { $_ =~ /^.+ .+\d\t.+$/ } (shuffle keys %$d)[0,1,2]) {
              my $l;
              for my $k (keys %$d) {
                  my $j = $R->shj($k, $d);
                  #sayre j.t;
                  my $t = j.t;
                  my $st = $1 if $t =~ s/(%\S+)//;
                  $st ||= 'Å¾';
                  my $lt = "$t\t"."0.4";
                  exists $l->{$lt}->{$st} && die "$t    $st";
                  $l->{$lt}->{$st} = j.s;
              }
              $d = $l;
              S.a.treemood = "styley";
          }
    - K: hookok #c
      babz:
        'S 3.4146': |
          if (S.mod.hooklook) {
              for my $k (keys %$d) {
                  my $v = delete $d->{$k};
                  next if ref $v;
                  $k =~ s/(?<=\t)(.+?)$/0.4/;
                  $d->{$k} = $v;
              }
          }

          
    - K: chr0 #c
      spesh: 1
      babz:
         'S 4.01': |
           for my $i (1..10) {
               my $c;
               for my $ii (1..25) {
                   $c = 250 + ($i * 100) + $ii;
                   my $ch = unico($c);
                   a.bz->("ch_$c 3.011" , $ch);
               }
               a.bz->("ch_${c}_nl 3.011" => "\n");
           }

