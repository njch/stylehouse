
R_surz: #c


    - K: Vit #c
      key: {E: up, R: down}
      n_D:
            up: |
                S.S.e += 0.1;
            down: |
                S.S.e -= 0.1;
    - K: Jtwo #c
      babz:
        'S#unifromA 2.3': |
            R.lastS = $S;
            S.K eq "D" || die || "D?";
            
            S.J ||= { from => [ do { H.G K Gs:*; } ] };
            
            sayyl "Doing S.K S.name hmmmmmmmm ".slim
            (S.J.from)." S.J.trav"; 
            my $i = S.J.from || die;
            my $t = S.J.trav || '';
            ($t, S.a.travly) = split /\^/, $t, 2;
            
            S.a.i = $R->suets($i, $t);
            
            a.s = S.S.s || w $R dus;
            a.s.HASH.oh = 0.2;
            a.tr.rowlimit = S.S.rowlimit || 9*4;
            a.e ||= S.S.e;
            defined a.i || die;
            my $d = {};
            
            
        'S 2.4': |
          
          a.fro->('Rl 0.01' => [$H,R.G,$R,$S], {cv=>0.2});
          
          if (S.J.trav) {
              a.fro->('S_J_from 0.12' => S.J.from, 0.2, '%css' => '-webkit-filter:hue-rotate(35deg);');

              a.bz->('S_J_trav 0.13' => S.J.trav, '%sf' => 'black_fs120'); 
          }

          a.bz->('S_S_e 0.2' => S.S.e, '%sf' => 'white');

          a.fro->('S_a_i 0.21' => S.a.i, 0.2);

          a.bz->('Js 0.29' => "\n");
          if (S.mod && %{S.mod}) {
              a.bz->('mod 0.31' => $H->ejson(S.mod)."\n");
          }
    - K: Jbuild #c
      babz:
        'S#moodz 1.8': | 
          S.mod = {%{S.mood||{}}};
          if (my $onetime = delete S.monod) {
              S.mod = {%{S.mod}, %$onetime};
          }
        'S#du 3.3': |
          $d = w $R du;
        'S#hum 4.444': |
          my $humm = S.mod.humm || 'adu';
          w $R $humm/humms[$S, $a, $d];
          
          
    - K: simphumm #c
      n_D:
        humms: |
          my @r = w stylekeysort[$d];
          my $si = @r;
          my @i = w $R wind[$si];
          my $ro = S.a.ro = {}; # wind round
          my $i = 0;
          for my $r (@r) {
              my $j = $R->shj($r, $d);
              
              my $li = j.li = shift @i || die;
              $ro->{$li} = $j;
              #my $z = a.bz->("$li 
              a.fro->("${li}_s 0.3 0.3${li}4", j.s, j.cv,
                  '%sf', 'white_fs120');
              
              a.bz->("${li}_z 0.3 0.3${li}5", "\n") if j.cv < 0.7;
              $i++; 
          }
          #a.bz->("/%css 0.1", 'background:rgba(10,10,0,1)');
              
          
    - K: wind #c
      D: |
        my $s = 9;
        return 1..$s if $si <= $s;
        my $wind = $si - 9;
        my $from = 6;
        my $for = 3;

        my @i;
    
            my $la = $wind / $for;
            my $za = int $la;
            
            my $y;
            my @wind = 1..$wind;
            my @ys = $from..$from+$for-1;
            my $yi = 0;
            while (@wind) {
                my $win = shift @wind;
                
                my $at = $ys[$yi];
                $y->{$at}++;
                
                $yi++;
                $yi = 0 if !exists $ys[$yi];
            }
            
            for my $wi (1..$s) {
                
                if (my $la = $y->{$wi}) {
                    my @la = 1..$la+1;
                    for my $pl (@la) {
                        push @i, "$wi$pl";
                    }
                }
                else {
                    push @i, $wi;
                }
            }
            
            @i
            
  

