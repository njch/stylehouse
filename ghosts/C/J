
C:
 - K: J #c fit in Ds later, which are Js too.
   
 - K: yep #c impulsive little geometers
   D:
     jCendo: |
       # 
Ray: 
 - K: J
   findway: R_J 
hooks:
  percolate_R: | # ! R
    G.theJsR = $G->R('J'); 
R_Jz:
  - K: makeJ
    D: |
      my $name = ar.name || "J".G.Jnumb++; # additively
      my $u = {K=>'J',name=>$name}; 
      my $J = w G.R fuu[$u]; 
      sayyl "made ++ ".$J->pi;
      $J
  - K: phat #c
    D: |
      # etc 
  - K: shj #c pronounce $j{r,s,t,cv,ev} from given $r and $d
    D: |
      my ($r, $d) = @_;
      my $j;
      j.r = $r;
      j.s = ref $d eq 'HASH' ? $d->{$r} : $d; # carbon in
      (j.t, j.cv) =
          j.r =~ /^(.+)\t(.+?)$/ ? ($1, $2)
          :
          split /\s+/, j.r, 2;
      (j.cv, my @e) = split /\s+/, j.cv;
      j.ev = \@e if @e;
      $j
R_surz:
    - K: Jaction #c
      key:
        J: J
      n_D:
        J: |
          my $J = w G.theJsR makeJ;
          J.hol = "H.style/H.name/H.id";
          J.tiNZ = 'NZ!';
          J.hitime = $H->hitime;
          w G.theD i(i=>$J);

