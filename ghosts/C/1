R_Jz:
 - K: surf #c
   D: |
     my $name = ar.name || ar.m && ar.m->[0] || 'ollox';
     my $i = ar.i || ar.J;
     my $J2 = Rw jin $name;
     Rw ein/stu $J:J2 $i;
 - K: eye #c
   D: |
       my $name = ar.name || 'ollox';
       my $J = Rw jin $name;
       my $an = shift @$m;
       my $i = join '/', grep{defined} 'eye', $an;
       Rw ein/dire $J $i;
 - K: shed #c not even eye
   D: |
     my $o = Rw pul $cs:m i;
     my $i = defined o.i ? o.i : '.';
     die "SHED $i";
     Rw ein/dire $J $i;
 - K: ein/dire #c takeover J
   D: |
     my $r = {i=>$i, t=>[], sc=>{ou=>'dire'}};
     Rw inness $J $r;
 - K: ein/image #c directed... wants to mod some inness, use the event Jtrain...
   D: |
     my $r = {i=>$i, sc=>{ou=>'image'}};
     Rw inness $J $r;
 - K: ein/youtube #c
   D: |
     my $r = {i=>$i, t=>[], sc=>{ou=>'youtube'}};
     Rw inness $J $r;
 - K: ein/stu #c data whatever
   D: |
     my $r = {i=>$i, t=>[], sc=>{grp=>'ref'}};
     Rw inness $J $r;

