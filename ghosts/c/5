Oth: |
    # rising 
    y.ope = 1;
    J.A.tid++;
    n All
    
    'Oth'ne$s&&
    n $s
    # randonly pour time ^
    T.nose = 1;
    
All: |
    J.mo.s.al = $J;
    n Byst
    n Check
    n @$_ for values %{J.opt||{}};
    
Byst: | # the random for news interro
    G.Byst = $J;
    n s=>''=>t;
    
Check: |
    Rw Loading;
    n wa =>''=>{pi=>'waps'}
    
    
Rig: | # Wild
    u Indulator
    u Modulator
    u Modems
    n s=>''=>t
    Rw dow $Rig:J.A.I;
    # trigbacky, like there is a whole plateu of links aft tests
    `cp w/Rig w/Wild`;
    
Sit: | # linkup Seate, Remy
    n Seate
    n Remy
    
Seate: | # Seven
    u Seven
    u threes
    u GeoSo
    n s=>''=>t
    # use Wild as always, Seate just the Seven thing for use with another Wild
    Rw dow $Seate:J.A.I;
    T.nose = 1; # dont Sev (next run may use trouble)
    
Remy: | # mix Wild + Seate = Remy, to becomer Wild as things join Rig
    J.A.IIII = ['G/T/Wild','G/T/Seate'];
    n s=>''=>t
    Rw dow $Remy:J.A.II;
    # do tests... contigo
    # merge/split things into Seate-good, Seate-bung etc
    
Eel: | # most wild (furthest from Wild, goes in circle)
    # u whateverworkon
    #u WhoAmI
    u Goodat
    u Jiterbug
    u Juperfi
    
    n s=>''=>t
    Rw dow $Eel:J.A.I;
    T.nose = 1; # dont Sev (next run may use trouble)
    # do tests... contigo
    # merge/split things into Seate-good, Seate-bung etc
Sav: | # make W
    u threes
    
    n s=>''=>t
    Rw dow $Sav:J.A.I;
    T.nose = 1;
    
Driver: |
    # takes over ghostality for ever
    J.A.IIII = G.IIII = ['G/T/Remy','G/T/Eel'];
    n Car
Car: |
    my $r = J.foib++;
    $r > 0 &&
    n foib =>''=>"foib$r",'%fs:'.(30 * (($r+1) / 3))
    
    
    n sto => 2 => {pi=>'ARRAY',s=>[THing=>With=>"The $r"]}
    
    #!$r &&
    #Rw wayt $d=4 $p=Top;
    n sjei => 3 => 'Steilrofoam'
    n jury => '2-7x8' => '$(000'
    
Stoops: |
    u grows
    n theS=>1=>{pi=>'cfile'=>s=>"life/S\.s"},'%ong:1'
    
    
grows: |
    u allacgts
    n notice =>''=><<'','%code:O 3,v:scong'
        # runs when ong things oscillate at all after init
        die "ONGSCILLATE";
        
Draw: | # most wild (furthest from Wild, goes in circle)
    u IIpifalls
    u pi3d
    u stopi_clife
    u clifeGkeeps
    n s=>''=>t
    Rw dow $Draw:J.A.I;
    # do tests... contigo
    # merge/split things into Seate-good, Seate-bung etc
    
Dwight: |
    J.A.IIII = [@{G.IIII},'G/T/Draw'];
    u SevWo
    
    n s=>''=>t
    #J.inV = 1;
    
    my $lot = "g/G/on";# g/G/way g/0/G g/G/cis";
    n shedful => '0.1-0.7', {pi=>'seas',s=>$lot}
    
    J.fsjoi++ ||
    Rw loopby $b=0.2 $d=17 $p=Top;
      
Head: |
    n dsko
    #Rw dumpGoinbb;
    J.fsjoi++ ||
    Rw loopfourby $d=5 $p=Top;
    #J.V = 1;
Gapitan: |
    #u Uminy
    my $r = J.sdfffi++;
    # shoves Dwight etc into PieceMe (or something with PieceMe)
    # which shall keep eating it
    #my $D =
    #n Dwight
    #n PieceMe =>''=>{W=>PieceMe=>In=>D.nj}
    # TODO ^
    !$r &&
    Rw loopfourby $d=5 $p=Top;
    say "Jay: J.name ::: $J";
Perl: |
    u allrawperl
    n PerlHead
    n Ibegin =>''=><<''
        my $I = {};
    
    n IStuff
    n KnowTime
    # adapts acgtsy spirals into etc
    # this all popped into
    J.V = 1;
    
PerlHead: |
    n perlhead =>0.01=><<'',{code=>"P 1"}
        #!/usr/bin/perl
        use strict;
        use warnings;
    
    
    #
    

