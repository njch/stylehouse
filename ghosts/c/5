Oth: |
    # rising 
    J.A.tid++;
    n All=>W
    
    'Oth'ne$s&&
    n $s=>W
    
    #n Dwight=>W
    
    #n Perl=>W
    T.nose = 1;
    
    # randonly pour time ^
    
All: |
    n Byst =>W
    n Check =>W
    
Byst: | # the random for news interro
    G.Byst = $J;
    
Check: |
    Rw Loading;
    n wa =>''=>{pi=>'waps'}
    
    
Rig: | # Wild
    u Indulator
    u Modulator
    u Seven
    n s=>''=>t
    
    Rw dow $Rig:J.A.I;
    # this trigbacky
    # like there is a whole plateu of links
    `cp w/Rig w/Wild`;
    
Sit: | # linkup Seate, Remy
    n Seate =>W
    n Remy =>W
    
Seate: | # Seven
    J.on_usc = sub {
        Rw rez;
    };
    u Oscgrin
    u Oscapps
    J.V = 2;
    n s=>''=>t
    # use Wild as always, Seate just the Seven thing for use with another Wild
    Rw dow $Seate:J.A.I;
    
Remy: | # mix Wild + Seate = Remy, to becomer Wild as things join Rig
    J.A.IIII = ['G/T/Wild','G/T/Seate'];
    n s=>''=>t
    Rw dow $Remy:J.A.II;
    # do tests... contigo
    # merge/split things into Seate-good, Seate-bung etc
    
Driver: |
    J.A.IIII = ['G/T/Remy'
    #,'G/T/Eel'
    ];
    J.V = 0;
    #J.V = 2;
    n Car =>W
    #Rw dow $Driv:J.A.II;
Car: |
    J.A.IIII = ['G/T/Remy'
    #,'G/T/Eel'
    ];
    u Ipifalls
    J.V = 1;
    
    my $r = J.foib++;
    
    $r > 0 &&
    n foib =>''=>"foib$r",'%idly:1,fs:'.(30 * (($r+1) / 3))
    
    $r < 1 && 
    Rw wayt $d=4 $p=Top;
    
    n sto => 4 => {pi=>'ARRAY',s=>[THing=>With=>"The $r"]}
    
    n sjei => 3 => 'Steilrofoam'
    #n jury => '2-7x8' => '$(000','%fs:'.(30 * (($r+1) / 3))
    #n jury => '1-7x8' => '$(000','%fs:3'
    J.V = 1;
    
Warm: |
    
Splode: |
    die wdump [map{_.c,_.sc}J.El.Duv];
Stoops: |
    u grows
    n theS=>1=>{pi=>'cfile'=>s=>"life/S\.s"},'%ong:1'
    
    
grows: |
    u allacgts
    n notice =>''=><<'','%code:O 3,v:scong'
        # runs when ong things oscillate at all after init
        die "ONGSCILLATEow";
        
Dwight: |
    J.A.IIII = ['G/T/Remy'];
    J.V = 0;
    u Ipifalls
    u pi3d
    u stopi_clife
    u clifeGkeeps
    
    Mn(shedful => '0.1-0.7', {pi=>'seas',s=>"g/0/G g/G/cis g/G/on g/G/way"});
    #n s =>8=>"Stevewashere!".int(rand(9)),'%fs:30'
    J.V = 1;
    
Gapitan: |
    J.A.IIII = ['G/T/Remy'];
    u allgap
    n Goo =>W
    
allgap: |
    # make O throw a flywheeled-to-t1ex-G perl file down
    n 'allgap'=>2,{s=><<''},{code=>'S 42'}
        C.sc.acgt = '1' if !exists C.sc.acgt;
Perl: |
    n PerlHead =>W
    n IStuff =>W
    n KnowTime =>W
    J.V = 1;
    
PerlHead: |
    n perlhead =>0.01=><<'',{code=>"P 1"}
        #!/usr/bin/perl
        use strict;
        use warnings;
    
    
    #
    

