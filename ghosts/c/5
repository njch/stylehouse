Jing: | # higher crinkles
    u allvse
    
    # allact nov
    n J =>0.12=>{s=><<''},{code=>'Mo 32',v=>0}
        Rw oo2;
    
    n J =>0.3=>{s=><<''},{code=>'Mo 43'}
        Rw oo3;
    
    n J =>0.31=>{s=><<''},{code=>'Mo 431'}
        my $f = A.jr&J;
        my $j = C.sc.J;
        # the J string->ref going
        # J is here, W is around
        ref $j && ref $f && $j ne $f || die ".sc J dif $f $j";
        # should T.at so vis
        C.sc.J = $f if $f && ref $f && !f.dead;
    
    n X =>0.32=>{s=><<''},{code=>'Mo 432'}
        my $J = C.c.J;
        $J || die "X no J";
        ref $J || die "Nofound $J  C.t   C.y.cv";
        C.c.X eq $J || die "noovewr X  C.c.X ne $J";
        sayyl "DELING J.name".ki$C;
        A.jr&J,$J,9;
        J.dead = 1;
        # SNat bail, we have balin by now so hole in space this time
        T.not = 1;
        
    n J =>0.33=>{s=><<''},{code=>'Mo 433'}
        !ref $J &&
        Rw oo33 + $J;
    
    n J =>0.6=>{s=><<''},{code=>'Mo 6'}
        Rw oJ6;
    
    n J =>0.7=>{s=><<''},{code=>'Mo 7'}
        Rw oJ7;
oo2: | # HOW humming c grabs on, how W transifies down...
     if (C.c.J eq A.J) {
         warn "J above A.J.name";
         delete C.c.J;
     }
     if (exists C.c.J) { # W but slower? U?
         C.c.W = C.c.J;
         A.ztime = 3 if A.J.name ne 'qq';
         # amount of time each thing spends being the top level
         # which was... n... mani
     }
     A.ztime = delete C.c.time if C.c.time;
     
     sayre "No S" if !defined C.c.s;
     sayre "nadad S" if !exists C.c.s;
     my $wasW;
     if (my ($s) = A.c&pi) {
         die wdump ["NOTED pi",$C,A.note];
         Rw oopi + $s;
     }
     elsif (my ($s) = A.c&W) {
         $wasW = 1;
         die wdump ["NOTED W",$C,A.note];
         Rw ooW + $s;
     }
     else {
         #die "misrep ".wdump 2, $C;
     }
     if (C.c.W && !$wasW) {
         if (!ref C.c.W) {
             # pi also wired to W
             my $Wjr = Rw Ajr $J:G.oin $t:C.c.W $cv=0.3;
             my $WJ = Wjr&J;
             sayyl "HJvae A.J.name holding C.t with WJ.name";
             C.c.W = $WJ;
         }
         else {
             die "knew W? ".ki C.c.W;
         }
     }

oopi: | # private investigators on crunchy gravel, spreaders
    # - c. language is map to some u before 6ing
    ref $s && die"refpi";
    T.at.pi = $s || 'guess';
    
    # type of abdomin to use?
    C.c.J = 'pi';
    
    my $oJ = $J;
    $oJ = C.y.o.J if C.y.o && C.y.o.J;
    A.jr = Rw Ajr $J:oJ $C;
    

ooW: | # some get-J or weave wires protocol - hosts
    my $t = $s;
    $t = s.name if ref $t;
    T.at.J = ref $s ? $s : $t;
    T.at.W = $t;
    
    C.c.J ||= $s;
    
    die wdump ["onto W J.name:",$v] if ref $v && $v ne v.most.J;
    
    C.t = $t;
    C.y.cv ||= do { sayyl"Auto Wormole pitch C.t = 0.3"; 0.3 };
    
    A.jr = Rw Ajr $J:G.oin $t $cv=0.3;
    
    # and where the
    if (C.c.vv) {
        A.ztime = delete C.c.vv;
        A.jr&vv,9
        ->(); #delone
    }
oo33: | # creating a J
    die "refJoo33 $J" if ref $J;
    $J = Rw Jto $name:J;
    
    if (A.c&pi) {
        j.Jiter = $J; # erse rev
        j.most->{$_} = J.most->{$_} for keys %{J.most||{}};
    }
    
    sayyl "J33   Made J.name";
    C.sc.J = $J || die 'watt';
    
    C.c.s = "Swim" if !exists C.c.s;
    my @an =  A.jr->('');
    if (@an && !exists C.c.s) {
        C.c.s = shift @an;
    }
    elsif (!@an && exists C.c.s) {
        A.jr->('',C.c.s);
    }
    die "noovewr   C.c.J ne $J" if ref C.c.J && C.c.J ne $J;
    A.jr&J,$J;
    at.J = $J;
    # ^ gets & replaces, C.sc.J now it
    
    Rw oo4 + $J;


oo4: | # J.A remains, A transitory  - A.time is to couple it like I.in
    J.A ||= {first=>hitime()};
    # everytime stuff:
    #map { sayyl "A.J.name  vs J.name vs J.iter" } 1..3 if rand 9 > 8;
    
    # dep
    if (exists C.sc.pi) {
        die if J.Jiter ne A.J;
        die if J.most.J eq $J;
    }
    else {
        die if J.most.J ne $J;
    }
    
    if (C.c.time) {
        warn "CTIOME".ki $C;
        A.ztime = delete C.c.time;
    }
    A.ztime ||= 6;
    
    if (C.sc.pi) {
        J.A.d = J.Jiter.A.d + 1;
        J.ind = join '  ', ('') x J.A.d;
        J.name = "J.A.d . C.c.pi*C.t";
        J.d = J.C = $C;
        J.r = C.t."\t".C.y.cv;
        J.bz->("/\t0.9" => "y");
        A.time = sub {
             my($JJ,$q) = @_;
             A.ztime >= $q || do {
                 die "J.name  ---- JJ.name     A.ztime quuuuuu $q";
                 0
             };
        };
    }
    else {
        sayyl "Fo 4 A time A: $A   vs J.A " if J.name eq 'Eosse';
        A.time = sub {
             my($JJ,$q) = @_;
             A.ztime >= $q || do {
                 sayre "COMB J.name --- le-- JJ.name      A.ztime < $q";
                 A.jr&vv,$q;
                 0
             };
        };
    }
    

