Oth: |
    # rising 
    J.A.tid++;
    n Byst=>W
    n Checks=>W
    
    'Oth'ne$s&&
    n $s=>W
    #n Cight=>W
    #n Mild=>W
    #n Remy=>W
    #n Dwight=>W
    
    #n Perl=>W
    T.nose = 1;
    
    # randonly pour time ^
    
Sit: |
    n Seate=>W
    n Remy=>W
    
Seate: | # remakesf changover
    # with Wild (everything gets):
    u Yesoo
    u Otherway
    
    n some=>''=>thang
    # Seat just the thing for use with another Wild
    Rw dow $Seate:J.A.I;
    
Cight: |
    u Indulator
    u Modulator
    n some=>''=>thang;
    
    Rw dow $Cight:J.A.I;
    # this trigbacky
    # like there is a whole plateu of links
    `cp w/Cight w/Wild`;
    
Remy: | # make Wild + Seate = Remy, to becomer Wild, that which we mostly
    J.A.IIII = ['G/T/Wild','G/T/Seate'];
    
    n some=>''=>thang
    Rw dow $Remy:J.A.II;
    # do tests... contigo
    # merge/split things into Seate-good, Seate-bung etc
    
Stoops: |
    u grows
    n theS=>1=>{pi=>'cfile'=>s=>"life/S\.s"},'%ong:1'
    
    
grows: |
    u allacgts
    n notice =>''=><<'','%code:O 3,v:scong'
        # runs when ong things oscillate at all after init
        die "ONGSCILLATE";
        
Dwight: |
    J.A.IIII = ['G/T/Remy'];
    J.V = 0;
    u Ipifalls
    u pi3d
    u stopi_clife
    u clifeGkeeps
    
    Mn(shedful => '0.1-0.7', {pi=>'seas',s=>"g/0/G g/G/cis g/G/on g/G/way"});
    #n s =>8=>"Stevewashere!".int(rand(9)),'%fs:30'
    J.V = 1;
    
Gapitan: |
    J.A.IIII = ['G/T/Remy'];
    u allgap
    n Goo =>W
    
allgap: |
    # make O throw a flywheeled-to-t1ex-G perl file down
    n 'allgap'=>2,{s=><<''},{code=>'S 42'}
        C.sc.acgt = '1' if !exists C.sc.acgt;
Perl: |
    n PerlHead =>W
    n IStuff =>W
    n KnowTime =>W
    J.V = 1;
    
PerlHead: |
    n perlhead =>0.01=><<'',{code=>"P 1"}
        #!/usr/bin/perl
        use strict;
        use warnings;
    
    
    #
    

