Oth: |
    # rising 
    J.A.tid++;
    n Byst=>W
    n Checks=>W
    
    n Mild=>W
    #n Dwight=>W
    
    #n Perl=>W
    #n Cight=>W
    T.nose = 1;
    
    # randonly pour time ^
    
Perl: |
    n PerlHead =>W
    n IStuff =>W
    n KnowTime =>W
    J.V = 1;
    
PerlHead: |
    n perlhead =>0.01=><<'',{code=>"P 1"}
        #!/usr/bin/perl
        use strict;
        use warnings;
    
    
    #
    
Cight: |
    u Indulator
    u Modulator
    n some=>''=>thang;
    G.T.Cight = J.A.I;
    DumpFile('w/ight',G.T.Cight);
    #J.A.I = Load(Dump(J.A.I));
    
Mild: | # remakes what we are, roll back to stable with @f
    #J.A.IIII = ['G/T/Cable'];
    
    u Yesoo
    n some=>''=>thang
    # ^ same as A.t&6
    
    Rw dow $imld:J.A.II;
    
Byst: |
    G.Byst = $J;
    n bystanding=>2,'bystander'
    
Checks: |
    Rw Loading;
    n wa =>''=>{pi=>'waps'}
    
    
Dwight: |
    J.V = 0;
    u Ipifalls
    u pi3d
    u stopi_clife
    u clifeGkeeps
    u Yesoo
    
    #n theS=>1=>{pi=>'cfile'=>s=>"life/S\.s"}
    Mn(shedful => '0.1-0.7', {pi=>'seas',s=>"g/0/G g/G/cis g/G/on g/G/way"});
    #n s =>8=>"Stevewashere!".int(rand(9)),'%fs:30'
    J.V = 1;
    

