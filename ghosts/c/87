recan: |
    u urw
    blag: %doo:sitandspin
        oi
uncan: |
    y.at.jslines = 1;
    blag 4: %js
        paper.project.clear();
Zo: |
    use WWW::Mechanize;
    my $m = new WWW::Mechanize;
    use YAML::Syck;

    my $url = "http://st33v.tumblr.com/";
    my @posts;
    my $page = 1;
    while ($page && 0) {
        say "getting page $page";
        my $url = "$url".($page>1?"page/$page":"");
        $m->get($url);
            my $next = $page + 1;
        push @posts, $m->content =~ /<a href="([^"]+\/post\/\d+)"/sg;
        last unless $m->content =~ m{<a href="(/page/$next)">};
        $page++;
    }
    @posts = @{LoadFile("posts.yml")};
    my $i = 1;
    my @photos = 1;
    for my $post (@posts) {
        $m->get($post);
        push @photos, $m->content =~ m{"([^"]+?jpg)"}smg;
    }
    DumpFile("photos.yml", \@photos);
    exit;
Zoy: |
    #y.at.jsl = 1;
    Rw Sefara;
    my @hose = split /\s+/, 'Hit Hut StyleThroat styleomi stylation';
    `cd w/jw; rm -f @hose` if @hose;
    #n Hit
Vind: | # View boat / live generator / 
    G.oin.A.tid += 3;
    G.c.i = 1;
    
    J.koe++;
    my $d = 17;
    # sleep if hot
    my $dont;
    if (J.koe > 2) {
        my $h = {};
        my @l;
        for (@l=`ssh v sensors`) {
            my ($k,$v) = /^(Core 0|temp1):\s+\+(\d+)\./;
            $k || next;
            $k =~ s/\W//g;
            $k .= "2" while $h.>$k;
            $h.>$k = $v;
        }
        saybl "SEnse: ".ki $h;
        if (!keys %$h) {
            sayre "nonsense ".wdump \@l;
            $dont = 1;
            $d = 20;
        }
        if (grep{$h.>$_ > ('temp12'eq$_?88:84)}keys %$h) {
            sayre "Hot: ".ki $h;
            sleep 6;
            $dont = 1;
            $d = 35;
        }
        else {
            J.koe = 0;
        }
    }
    if (J.rem++ == 0) {
        n uncan
        saybl "wipe" for 1..9;
        J.rem = 1;
    }
    J.rem > 100 && Rw restar;
    
    saybl "---------" for 1..4;
    Rw waito $J $d;
    
    return if $dont;
    
    # Tarps for us
    n Surl=>W=>{pin=>'Tarp',for=>29}
Sloba: |
    
Viow: |
    G.c.i = 1;
    J.rem++;
    # Views for View
    #J.rem == 1 && 
    #    n EarlyCoast=>W=>{pin=>'View',s=>'eye'}
View: | # oncer, makes paddocks of images, as pin for some random W, looking in $s
    u urw
    # c&atusc = A.J.name;
    # Rw Ti;
    y.at.sq = 'wave';
    my $lis = "w/list/J.name";
    J.tea ||= -f $lis ? LoadFile($lis) : do {
        my $s = [shuffle grep {s/\n$//;/^[\/\-\.\w]+jpe?g$/gi} `find -L $s`];
        DumpFile($lis, $s);
        $s
    };
    
    my $page = 30;
    while (1) {
        c&pagesof = 100;
        c&lin = $page * c&pagesof;
        c&lout = c&lin + c&pagesof;

        my @h = grep {defined} @{J.tea}[c&lin .. c&lout];
        if (!@h) {
            sayyl "Nothing left from $s   (c&lin -> c&lout of ".h.")";
            exit;
        }
        my @l;
        my $thd;
        for my $s (@h) {
            unless (-f "th/$s") {
                $thd++;
                Rw pi/thumb $s;
                $s = delete C&src;
            }
            push @l, $s;
        }
        sayyl "Thumbed: ".
        my $in = A.J.name;
        my $name = J.name;
        
        my $s = join'',map{"$_\n"}@l;
        
        my $din = "$name\.$page\.c";
        G&wraf,"life/W/$din",$s;
        G&wraf,"life/W/$in\.sc",$din;
        say "Make $din";
        #saybl ''.`head life/W/$din`;
        sayre "Done?";
        #exit;
        $page++;
    }
    
Ti: |
    my $t = J.Ti ||= {};
    if (c&for) {
        my $now = hitime();
        t.last ||= $now;
        t.now = $now;

        y.at.int = int((t.now - t.last)*10)*0.1;
        y.at.ini = t.ini++;

        t.last = t.now;
    }
    say "Jidder: J.id";
    c&atusc && !y.at.ini && G&wraf,"life/W/c&atusc\.sc","J.id\.c";
    # extents of time with a pour out at the end.
    !c&for || y.at.ini < c&for;
    
    
dolp: |
    my $junk = "gji\tksdooodskoo\tkd=de,f=d";
    my $oe = "ksfoi\t".sjson($junk)."\tsko";
    saybl "Zea: $oe ".wdump 3, [split "\t", $oe];
wave: |
    my $i = ar.i."  ";
    my $try = sub {
        my $s = shift;
        return sjson($s) if grep{/\n|\t|,|:/}
            keys(%$s), values(%$s);
        join ',', map { join':', $_, $s.>$_ } sort keys %$s;
    };
    my $M = [map{
        my $C = G&tC,$_;
        $C = G&hup,$C;
        my $z = delete C&z;
        delete C&J;
        delete C&geo;
        
        C.c = $try->(C.c);
        C.sc = $try->(C.sc);
        my $y = C.y.cv;
        $y =~ s/^0\.//;
        say join "\t","$i".C.t, $y, C.c, C.sc;
        $z &&
        Rw wave $N:z $i;
    }@$N];
    
    $N;
Jig: | # a J.tea into J.slow ...
    my $n = J.name.'ig';
    J.slow = readlink("w/$n") || 0;
    J.slow += 1;
    J.slow -= 20 if J.slow > 30 && rand(10) > 9.8;
    J.slow = 0 if J.slow >= $lim;
    G&dlin,'w'=>J.slow=>$n;
Tarp: |
    u urw
    c&atusc = A.J.name;
    my $dont = !
    Rw Ti;
    y.at.sq = 'wave';
    #y.at.dis = 0;
    #
    my $i = 0;
    y.in = 0.3;
    y.in += 0.03 if J.od++ && do{J.od=0;1};
    y.out = y.in + 0.3;
    
    return if $dont;
    
    my @for = (1..3);
    my $dealin = 2;
    while (@for) {
        my $n = shift @for;
        $i++;
        
        my $sc = {};
        
        sc.tism = sprintf '%s%06d', slm(4,G.oin.id), J.oini++;
        
        sc.deal = G&ron,0.4+$dealin;
        
        sc.I = 'Viow';
    
        m $n=>''=>{pi=>'pape'},$sc;
    }
    #delete J.El.>$_ for Pre=>'Duv';
    
    shift @$M while @$M > 8;
    J.AM = [@$M];
pi/pape: |
    C&pa = 'R';
    c&thumb ||= C.t unless C&src || C&I || length(C.t) < 4;
    c&thumb &&
    Rw pi/thumb + $s:c&thumb;
    delete C&I if C&I eq 'Viow';
    
    my ($no,$i,$se) = ($1,$2,$3)
        if `uptime` =~ /([\d\.]+), ([\d\.]+), ([\d\.]+)/;
    my $fo = $no - $i;
    
    #C.sc.src || sayre "no src..";
    delete C&src if 'th/'.C.t eq C&src;
    
    C&pxp = 270 * (rand(2)-1);
    C&pyp = 270 * (rand(2)-1);
    map { C.sc.>$_ * 0.3 if C.sc.>$_ > 100 } qw'pxp pyp';
    
    C&sca = 3.421 * rand(3) ^ 2;
    #C.sc.zm = int(rand 10);
    C.sc.sca += 3;
    C&sca *= 0.2 until C&sca < 0.4;
    C&opa = 0.6 * (0.5 + rand 0.9);
    C&b = (shuffle 
    'negation',# 'source-over', 'source-in',
    #'source-out',
    #'source-atop',
    'darken', 'lighten',
    #'color-dodge', 'color-burn',
    'normal', 'normal',
    #'exclusion',
    'hue', 'saturation',# 'saturation',# 'saturation', 'saturation',# 'luminosity',
    # 'color', 'add', 'subtract',
    # 'color', 'add',# 'subtract','subtract','subtract',
    #'normal', 'normal', 'normal', 'normal', 'normal', 
    'multiply',#'multiply',, #'multiply',, 'multiply',, 'multiply',,
    # 'multiply', 'screen', 'overlay', 'soft-light', 
    #'hard-light', # 'darken', 'lighten',
    # 'pin-light', 'pin-light', 'pin-light', #
    'difference',
    #'exclusion', 'hue', 'saturation', 'luminosity', 'color', 'add', 'subtract'
    #, 'average', 'pin-light', 'negation', 'source-over', 'source-in', 'source-out', 'source-atop', 'destination-over', 'destination-in', 'destination-out', 'destination-atop', 'lighter', 'darker', 'copy', 
    'xor'
    )[0];
    C&r = int(700 * $fo);
    C&pxp = int C&pxp if C&pxp;
    C&pyp = int C&pyp if C&pyp;
    C.sc->{$_} = G&ron,C.sc->{$_}
        for grep{C.sc->{$_}} qw'sca opa r';
Sjum: | # make nice js line protocol
    u urw
    delete J.El.>$_ for qw'Duv Pre';
    J.VV.N = 1;
    n GW
    y.at.jslines = 1;
    
    ngo: %js
        var s = "\n\n\n";
        var M = [
                     s.split("\n")
        ];
        console.log($('ndkon'),  M);
Alsi: | # surf the web
    u urw
    # http://st33v.tumblr.com/
    n AnimLines=>''=>''=>"%ifr:paperjs/examples/Animated/Smoothing\.html"
And: |
    u alljs
    
    nim:
        A.W.N ||= [];
        A.W.N.push(s);
        ~nimbly: A.W.t
    
    # W.next && W.next > Date() and return !
    frame: %args:e
        var now = Date.now();
        $.each(ww, function(t,W){
            !W.N and return
            $.each(W.N, function(k,on) {
                on(e);
            });
        });
stylepap: |
    u alljs
    #
    # first is only resumed e
    Time:
        A.W.Time ||= {};
        var i = A.W.Time;
        i[s] == 2 and delete i[s]; return 1
        i[s] and return 0
        i[s] = 1;
        a.yl(d, &{
            i[s] = 2;
            G&$s
        });
        return 0
    
    # rassimilato
    # needs to put in background and do before dealings
    # maybe the Cs become for compression somehow
    rasunify:
        s and A.mo.rasgo = s;
        !G&Time,'rasunify',700 and return
        s ||= A.mo.rasgo;
    
        var de = [];
        var li = [];
        $.each(s, &i,r{
            r.alive and li.push(r)
            else { de.push(r) }
        });
        while (li.length > 9) {
            ~liingot
            de.push(li.shift());
        }
        if (0) {
        $.each(li, &i,r{ r.liopacity = r.opacity; r.opacity = 0 });
        var m = s[0].canvas.toDataURL('image/jpeg');
        $.each(de, &i,r{ r.remove() });
        $.each(li, &i,r{ r.opacity = r.liopacity; delete r.liopacity });
    
        a.om(A.up,['cmb',9,{el:2},{src:m,pa:'R'}],a,{});
        }
    
        s.splice(0,s.length);
        $.each(li, &i,r{ s.push(r) });
        var go = &i,r{
            delete A.W.Rs[r.Ct];
            r.remove();
        };
        $.each(de, go);
        var rzl = s.length;
        while (rzl > 9) {
            var v = s.shift();
            ~rasquishout: v
            go(1,v);
            rzl--;
        }
    
    u alljse
    # take some photo
    tism 36:
        var h = $('canvas#display').get()[0];
        var m = h.toDataURL('image/jpeg');
        $.ajax({url: '/tism',type: 'PUT',data: m});
    
    0&&
    notism:
        $('body').append('<a id="tism" download="ti_'+s+'_sm.jpg">o</a>');
        var l = $('body > a#tism:last');
        l.attr('href',m);
        l.click();
        //$('body > a#tism:last').remove();
        var ov = $('body > a#tism').length;
        while (ov > 99) {
            $('body > a#tism:first').remove();
            ov--;
        }
    
    pa 34:
        with (paper) {
            var src;
            var r;
            C&typ ||= 'R';
            !(c&el <3) and r = A.b.pa; !r && a.c("no rasmeemmber "+C.t);
            else if (C&typ === 'R') {
                C&src and src = C&src;
                !src && C.t.length < 4 and src = G&pull,'Viow';
                src ||= 'th/'+C.t;
                if (!src) {
                    C&jfi ||= 'img';
                    var find = $(C&jfi);
                    !find.length and a.c('no find '+C&jfi);
                    src = $(find).last().attr('src');
                }
                r = new Raster(src);
            } 
            else if (C&typ === 'T') {
                r = new PointText(view.center);
                r.fillColor = 'white';
                r.justification = 'center';
            }
            if (C&typ==='T') {
                c&s and r.content = c&s;
                c&el <3 && !C&fs and C&fs = '30';
                C&fs and r.fontSize = C&fs;
            }
            C&src && C&src != r.image.src and r.image.src = C&src;
            C&an && a.uplg and n = r.animate(C&an, a.uplg);
            C&poes and r.position = eval(C&poes);
            else
            c&el <3 and r.position = view.center;
            C&pxp and r.position.x += C&pxp;
            C&pyp and r.position.y += C&pyp;
            C&sca and r.scale = C&sca;
            C&b and r.blendMode = C&b;
            C&r and r.rotate(C&r);
            C&opa and r.opacity = C&opa;
            A.W ||= {};
            if (c&el <3) {
                var ha = C&typ+'s';
                var ar = C&typ+'z';
                A.W[ha] ||= {};
                A.W[ha][C.t] = r;
                A.W[ar] ||= [];
                var raz = A.W[ar];
                raz.push(r);
                if (0) {
                    raz.length > 5 and G&rasunify,raz
                }
                else {
                    a.lim(raz,9, &r{
                        delete A.W.Rs[r.Ct];
                        r.remove();
                    });
                }
                r.Ct = C.t;
                r.omily = 1;
                r.alive = 1;
            }
            if (c&el == '9') {
                r.omily and delete r.alive
                else { r.remove() }
            }
            A.b.pa = r;
        }

