

Jurglin: |
    u alljs
    y.at.jsl = 1;
    
    0&&
    greentrim: %stylewad
        <style type="text/css">
            ::-webkit-scrollbar {
                width: 2em;
                height: 2em;
            }
            ::-webkit-scrollbar-thumb {
                background: url(eye/o/greencush.jpg);
            }
            ::-webkit-scrollbar-track {
                -webkit-box-shadow: inset 0 0 6px rgba(0,0,0,0.3); 
                -webkit-border-radius: 10px;
                border-radius: 29px;
            }
            ::-webkit-scrollbar-thumb {
                -webkit-border-radius: 10px;
                border-radius: 10px;
                -webkit-box-shadow: inset 0 0 6px rgba(0,0,0,0.5); 
            }
            input[type=range] {
                -webkit-appearance: none;
                background: black;
                height: 2px;
            }
            input[type=range]::-webkit-slider-thumb {
              -webkit-appearance: none;
              background: url(eye/o/copper_anodes.jpg);
              height: 12px;
              width: 12px;
              border-radius: 6px;
              cursor: crosshair;
              box-shadow: 1px 1px 1px #000000, 0px 0px 1px #0d0d0d;
            }
        </style>
    
Zb: | # acTruate updates, alternative to JJiter
    u Traweil
    my $is = 'jw';
    #Stripes
    #G.foo = 1;
    #Rw End $J:G.oin;
    my @hose = split /\s+/, 'Hit Hut Tjs And';# StyleThroat styleomi stylation';
    `cd w/$is; rm -f @hose` if @hose;
    #n \'isle:p,W:Stripes'
    n \"isle:$is,W:Hit"
    #n \'isle:ju,W:Hit'
    #n \'isle:ju,W:Hit'
Hit: |
    y.at.sq = 'jsle';
    y.at.extrajs = 'clon();keon();';
    if (!C.c.isle) {
        y.at.X = LoadFile('w/jw/Hut');
        sayre "Sno: ".ki y.at.X;
        return;
    }
    # Traweil isle 747s us after Sev/em sq 24s
    (y.at.X) = map{_.M->[0]->{sc}->{X}}
    n Hut
    #
    
Hut: |
    n StylePhone
    n StyleThroat
    n Ocean
    n Tjs
    n And
    
    
StylePhone: | # must have net
    n stylehut
    n styclick
    #n stysocket # see lowcal websockety
stylehut: |
    u alljs
    y.at.jsl = 1;
    
    e: %args:e
        var m = 
        eval(e);
        return m
    
    er: %args:e er
        console.log("xutbang: ", e, er);
        var ej = {er: {e: e}};
        er && er.message and ej.er.m = er.message;
        s.reply(ej);
        a.m("!"+ (ej.er.m || e));
    
    # see M, also sand
    m: %args:e
        var d = e.substr(0,1);
        d == " " and return a.e(e);
        d == "[" || d == "{"  and return a.om({},$.parseJSON(e),a,{});
        d == "." and e = '<span style="font-size:66%">'+e+'</span>';
        a.c(e);
    
    # #msgs message
    c: %args:s e
        e ||= [];
        var says = [];
        $.each(e,function(i,v){
            typeof v === 'string' || typeof v === 'number' and says.push(v);
            else {
                says.push('%'+typeof v);
            }
        });
        a.log ||= [];
        a.log.unshift([s,e]);
        a.lim(a.log,-9);
        says.length and s = s+': '+says.join(' ');
        $('#msgs').prepend(s+"\n");
    
    lim: %args:s lim cb
        var len = s.length;
        lim ||= 9;
        var rev;
        lim < 0 and rev = 1; lim *= -1;
        var rem = [];
        while (len > lim) {
            var v;
            rev and v = s.pop()
            else {  v = s.shift() }
            cb and cb(v);
            rem.push(v);
            len--;
        }
        rem.length and return rem
    
    yl: %args:delay func
        setTimeout(func, delay);
    
    ks: %args:s
        var ks = [];
        for (var k in s) {
            ks.push(k);
        }
        return ks.join(',');
    
    peel:
        var c = {};
        !s.length and return c
        $.each(s.split(','), function(i,kv) {
            kv = kv.split(':');
            var k = kv[0];
            var v = kv[1];
            v.match('^-?\\\d+.\\\d+$') and v = v * 1
            c[k] = v;
        });
        return c
    
styclick: |
    u alljs
    y.at.jsl = 1;
    
    cl: %args:ev ws
          if (keyjam) {
              return;
          }
          setTimeout(function () { keyjam = 0; }, keyjamfor);
          keyjam = 1;

          var d = {};
          a.dscam(d,ev);

          d.x = ev.clientX;
          d.y = ev.clientY;
          d.pagex = window.pageXOffset;
          d.pagey = window.pageYOffset;

          var tag = $(ev.target);
          if (tag.type == 'range') {
              d.rval = tag.value
          }

          a.entag(d, tag);
          a.ethro(d, ws);
    
    entag: %args:d tag
          d.name = tag.attr('name');
          var p = [];
          while (tag.length) {
              var nam = tag.prop('tagName');
              var t = tag.attr('t');
              var cv = tag.attr('cv');
              var id = tag.attr('id');
              if (nam === 'WW') {
                  d.W = id;
                  break;
              }
              if (cv || t) {
                  p.push([t,cv]);
              }
              tag = tag.parent();
          }
          d.p = p.reverse();
    
    ethro: %args:d ws
          if (d.W) {
              var conin = conz[d.W];
              if (conin) {
                  ws = C[conin];
              }
          }
          if (!ws) {
              ws = w;
          }
          ws.reply({event: d});
    
    ke: %args:ev ws
          if (keyjam) {
              return;
          }
          setTimeout(function () { keyjam = 0; }, keyjamfor);
          keyjam = 1;

          var d = {};
          a.dscam(d,ev);
          d.which = ev.which;
          if (d.which == 16 || d.which == 17 || d.which == 18) {
              return;
          }

          d.k = String.fromCharCode(ev.keyCode);

          ws ||= w;
          
          ws.reply({event: d});
    
    dscam: %args:d ev
        d.type = ev.type;
        d.S = 0+ev.shiftKey;
        d.C = 0+ev.ctrlKey;
        d.A = 0+ev.altKey;
        d.M = 0+ev.metaKey;
    
StyleThroat: | # light conse and their users
    n styleomi
    n stylation
styleomi: | # the not-loop and indifferent parts
    u alljs
    
    # A falls, A.on taps each-for thing, A.W holst selves, usu not
    A:
        var V = $.extend({},A);
        delete V.C;
        V.up = A;
        var A = V;
        A.I = {};
        A.om ||= A;
        A.om == A.up and A.mo = A;
        T.d ||= 1;
        s and var k = 'e_'+s; A.e = G[k];
        return A
    
    # on last A.b
    nn:
        !A.W and a.c("no aW",[A,C]);
        A.W.b ||= {};
        A.b ||= A.W.b;
        A.b[C.y.cv] ||= {};
        A.b[C.y.cv][C.t] ||= {};
        A.b.t ||= {};
        A.b.t[C.t] ||= {};
        A.b.t[C.t][C.y.cv] ||= A.b[C.y.cv][C.t];
        var b = A.b[C.y.cv][C.t];
        b.A = A;
        return b;
    
    sca:
        while (s > 1) { s = s / 10 }
        return s;
    
    h: %acgt:way s
        !G[way] and throw "No way: "+way
        return G[way](A,C,G,T,s);
    
    # persona perforthe webclient channels
    # so the G copies and lives from/to W
    # h reach up/down to applied layers of you
    # top level mirage is o(ww,Wid,$s) 
    # which ins ww (G.Wid for Oth), J.id (Wid)
    # and the difference is you
    
    om:
        A = G&A,'om';
        C = G&inC,C;
        t&2;
        T.alk = 'w'+T.d+' '+C.t+' '+a.ks(C.c)+'%'+a.ks(C.sc);
        C.sc ||= {};
        C.sc.css ||= {};
        C.sc.anc ||= {};
        t&7;
    
    t:
        T.not and return 0;
        A.I.cv = G&sca,s;
        G&ex,A.I;
        return !T.not;
    
    # wants to sort in
    eine:
        var K = s[0];
        var e = s[1];
        var k = 'e_'+K;
        G[k] = e;
    
    ex:
        s.ei ||= 0;
        while (1) {
            T.not and return
            var v = A.e[s.ei];
            !v and return
            v[0] > s.cv and return
            s.ei++;
            $.each(v[1],function(i,D){
                T.not and return
                var t = D[0];
                var sc = D[1];
                sc.nk and !C[sc.nk] and return
                sc.gk and !C[sc.nk][sc.gk] and return
                var es;
                sc.gk and es = C[sc.nk][sc.gk];
                sc.s and es = sc.s;
                G&$t,es;
            });
        }
    
    tcl: %com:#cplace
        var t = C.t.replace(/\W/g,'e');
        t = 'n'+t+'n';
        return t;
    
    f:
        var t = '';
        s and t=s
        var at = '';
        C.y.cv and at += "[cv='"+C.y.cv+"']";
        t || at || console.log("No attach: "+T.alk);
        return $(A.on).find('> '+t+at);
    
    #
    inC:
        C = s;
        if (C.constructor == Array) {
            C = {t:C[0],y:C[1],c:C[2],sc:C[3]};
            typeof C.c  === 'string' and C.c =  G&peel,C.c;
            typeof C.sc === 'string' and C.sc = G&peel,C.sc;
        }
        else
        if (C.constructor == Object &&
            !C.t && !C.y && !C.c && !C.sc) {
            $.each(C, &k,v{ G&$k,v }); T.not = 1;
        }
        else
        typeof C === 'string' and C = {c: {s: C}};
        typeof C.c === 'string' and C.c = {s: C.c};
        typeof C.y === 'string' || typeof C.y === 'number' and C.y = {cv: G&sca,C.y };
        !typeof C.t === 'string' and console.log('queda',C);
        C.c ||= {};
        C.sc ||= {};
        return C;
    
    Xi:
        !s and s = C.c.W;
        !s and s = C.c.M;
        $W = ww[s];
        W ||= mm[s];
        !(W && W.W && W.W.on) and ~die~nottunedin: s
        return W;
        
    Xin:
        $W = ww[s];
        W ||= G&Win;
        return W;
    
    Win:
        !(c&Wid && c&Mid) and ~die~noWMC: C
        $W = ww[c&Wid] = {};
        W.id = c&Wid;
        W.t = c&Mid;
        mm[W.t] = W;
        W.A = {};
        W.A.W = W;
        ~newW: W.t, W.id, W
        return W
        
    Wout:
        var W = ww[A.W.id];
        W.t and mm[W.t] = W;
        delete ww[W.id];
        ~leaves W.t, W.id
    
    die: %args:A C G T s etc
        ~dead: s, etc, A, C
        throw s
    
stylation: |
    u alljse
    n \'%nk:c'
    #
    # $(A.on).fadeOut(delay, function() { $(this).remove(); });
    # also Mid comes the name
    # piles easy once GW (an om) actuates
    #       W (an om) line input as already in GW/dialect
    # something could also default something to Mid-ness, name comp
    # # # #
    Mid 26:
        C.t == 'GW' and C.t = s
        !c&Wid and G&die,"noWID!"
        delete c&s;
    
    Wid 27:
        c&id = s;
        c&Mid ||= C.t;
        $W = G&Xin,s;
        c&el == '6' and c&el = '2'; c&scub = 1;
        W.W = A;
        A.on = $('#ux');
        $.extend(A,W.A);
        c&tag ||= 'ww';
        s&ab ||= '100';
        s&poi ||= 'none';
        ~made Wid: s
    
    M 28:
        $W = G&Xi,s;
        A.on = W.W.on;
        $.extend(A,W.A);
    
    W 28:
        $W = G&Xi,s;
        A.on = W.W.on;
        $.extend(A,W.A);
    
    nobody 31:
        A.on = $('#'+C.c.nobody);
        !$(A.on).length and a.c("no nobody at "+C.c.nobody);
    
    e 32: %nk:sc
        s == '1' and s = c&s;
        a.e(s);
        T.not = 1;
    
    z 6: %nk:sc
        var del = 0;
        $B = {bac:{}};
        
        $.each(s, function(i,v) {
            B.last and return
            var c = G&inC,v;
            var ub = &{
                var tee = $.extend({d:T.d+1},B);
                G.om(A,v,G,tee);
            };
            c.sc.deal and del += 1000 * c.sc.deal; a.yl(del, ub);
            else { ub() }
        });
        B.bac.length and ~gotm: B.bac
    
    
    # whole time... (make whote, A.t&4 ex inness..
    el 333:
        A.C ||= C;
        s&attr ||= {};
        if (s&atr) {
            var h = G&peel,s&atr;
            $.each(h, &k,v{
                v === undefined and v = C.sc[k];
                s&attr[k] = v;
            });
        }
        var last;
        var t = G&tcl;
        s == '2' and $(A.on).find('> [t="'+C.t+'"]').remove();
        s == '2' and s = '1';
        var el = G&f,t;
        s == '9' && A.om == A and G&Wout;
        s == '1' || s == '9' and $(el).remove();
        s == '8' and return T.aft = el; // last on for next v
        if (s == '1') {
            s&attr.cv = C.y.cv;
            s&attr.t = C.t;
            c&tag and t = c&tag;
            s&attr.title ||= C.t+' '+C.y.cv;
            var con = [];
            $.each(s&attr, &k,v{ 
                v == '!' and con.push(k)
            });
            con.length and con.unshift('');
            con = con.join(' ');
            var div = $("<"+t+con+">", s&attr);
            $(div).appendTo(A.on).each(function(i,v){el=v});
        }
        delete s&attr;
        .
        A.b = G&nn;
        if (A.b.cod) {
            c&cod ||= '3';
        }
        if (A.b.pa) {
            s&pa ||= '3';
        }
        if (typeof c&s === 'string' && !c&cod && !s&pa) {
            c&ht and $(el).html(c&s);
            else
            $(el).text(c&s);
        }
        A.on = el;
   
    el 4:
        var f = ['id','src','dig'];
        var fl = function (v,z) {
            s&attr and s&attr[v] = z;
            else {
                $(A.on).attr(v,z);
            }
        };
        $.each(f,function(i,v) {
            C.sc[v] and fl(v, C.sc[v])
            else
            C.c[v] and fl(v, C.c[v])
        });
Ocean: | # styles, thingies
    n stylers
    n Swemp
    
    n stylext
    n stylepap
    
stylers: |
    u alljse
    
    doo 32:
        !a[s] and throw "missing doo: "+s
        a[s](A,C,G,T);
        T.not = 1;
    
    ifr:
        c&tag = 'iframe';
        s&atr = 'width:500,height:380'
            +',frameBorder:0,allowfullscreen:1,autoplay:1';
        c&src = s;
    
    on 4:
        var h = G&peel,s;
        var el = $(A.on);
        $.each(h, &k,v{
            k == 'c' and k = 'click';
            k == 'ch' and k = 'change';
            el.on(k, &e{
                G&$v,e
            });
            C&fsc and G&$v
        });
    
    cssdel 589:
        var re = s.split(',');
        $.each(re,function(i,v){ delete C.sc.css[v] });
    
    geo 5:
        s = s.split(' ');
        var aung = s[0].match('^a(\\d+)');
        if (aung) {
            s.shift();
            aung.shift();
            C.sc.ab = aung.shift();
            //absolu
        }
        s = {x:s[0],y:s[1],rad:s[2],scale:s[3]};
        C.sc.css.top = (s.y * 100)+'%';
        C.sc.css.left = (s.x * 100)+'%';
        C.sc.css['transform-origin'] = '0% 0%';
        s.tro and C.sc.css['transform-origin'] = s.tro;
        s.rad and C.sc.css['transform-rotate'] = s.rad+'rad';
        s.scale and C.sc.css['transform-scale'] = s.scale;
    
    ab 51:
        if (s === '100') {
            C.sc.css.width = '100%';
            C.sc.css.height = '100%';
        }
        C.sc.css.position = 'absolute';
    
    css 59:
        if (typeof s === 'string') {
            var re = s.split(';');
            s = {};
            $.each(re,function(i,v){
                var kv = v.split(':');
                s[kv[0]] = kv[1];
            });
        }
        $.each(s, function(i,v) {
            if (v.constructor === Object) {
                var swav = [];
                $.each(v, function(ve,ss) {
                    var se = ve+'('+ss+')';
                    swav.push(se);
                });
                v = swav.join(' ');
            }
            i === 'filter' and i = '-webkit-filter';
            $(A.on).css(i, v);
        });
    
    anc 59:
        $(A.on).animate(C.sc.anc, (C.sc.ant||900));
    
Swemp: | # the Ang for js stylers
    s:
        Nothing
    my ($X,$N) = Rw Xisle p Ang;
    Rw Csse + $N;
    
stylext: |
    u alljs
    
    codsav:
        var cm = s;
        var d = {};
        a.entag(d, $(A.on));
        A.b.jus = d.code = cm.getValue();
        d.dig = $(A.on).attr('dig');
        a.ethro(d, ws);
    
    u alljse
    n \'%nk:c'
    
    cod:
        var cm = A.b.cod;
        .
        if (typeof s === 'string') {
            if (s === '3') {
                !cm and return a.c('no cod !');
                s = {};
            }
            else {
                s = {mode:'perl'};
                cm = 0;
            }
        }
        .
        var def = {mode:'perl',theme:'midnight',lineWrapping:true};
        var set = $.extend(def, s);
        cm and $.each(set,function(k,v){ cm.setOption(k,v) });
        !cm and cm = CodeMirror(A.on, set);
        A.b.cod = cm;
        .
        if (C.c.s) {
            C.c.s !== A.b.jus and cm.setValue(C.c.s);
            else { a.c('vv vv'+C.t); }
        }
        cm.refresh();
        a.yl(400, function(){
            cm.refresh();
        });
        .
        var sav = function(){ 
            G&codsav,cm;
        };
        cm.setOption('extraKeys', {Esc:sav});
        cm.on('focus',function(){clof();keof();});
        cm.on('blur',function(){clon();keon();sav();});
    
    #    $('#'+id).css('width','15em','max-height','70%','overflow','scroll');
    #   $('#'+id+' > .CodeMirror');//.css('height','auto');
    
Canvasc: |
    y.at.jsl = 1;
    u alljs
    # & sitting
    
    ps: %args:s
        with (paper) {
          try {
            eval(s);
          }
          catch (er) {
            a.er(s, er);
          }
        }
    
    # https://github.com/tweenjs/tween.js/blob/master/docs/user_guide.md
    
    pzl:
        with(paper){
            var shape = new Path.RegularPolygon(view.center,3, 100);
            shape.fillColor = '#8C8A00';
            var al = function (event) {
                shape.rotate(1);
                shape.fillColor.hue += 1;
                shape.position.x += shape.bounds.width / 50;
                if (shape.bounds.left > view.size.width) {
                    shape.position.x = -shape.bounds.width;
                }
            }
            G&nim,al;
        }
    
    sitandspin:
        with (paper) {
            var mousePoint = view.center;
            var amount = 44;
            var colors = ['red', 'black', 'blue', 'black'];
            var gr = [];
            for (var i = 0; i < amount; i++) {
                var rect = new Rectangle([5, 0], [25, 25]);
                rect.center = mousePoint;
                var path = new Path.Rectangle(rect, 6);
                path.fillColor = colors[i % 4];
                var scale = (1 - i / amount) * 25;
                path.scale(scale);
                path.blendMode = 'difference';
                i % 2 and path.blendMode = 'divide';
                path.opacity = 0.3;
                gr.push(path)
            }
            var gop = new Group(gr);
            view.onMouseMove = function (event) {
                mousePoint = event.point;
                a.m('mm!');
            }
            var children = gop.children;
            var al = &event{
                for (var i = 1, l = children.length; i < l; i++) {
                    var item = children[i];
                    var delta = (mousePoint - item.position) / (i + 5);
                    item.rotate((Math.sin((event.count + i) / 10)+0.617) * 3);
                    if (delta.length > 0.1)
                        item.position += delta;
                    item.fillColor.hue += 1;
                    var shape = item;
                    shape.position.x += shape.bounds.width / 20;
                    if (shape.bounds.left > view.size.width) {
                        shape.position.x = -shape.bounds.width;
                    } 
                }
            }
            G&nim,al;
        }
    
Funstuff: |
    u alljs
    # paperscope (with (paper) {...}) FUN STUFF! spines!
    
    n funstuff =>''=><<''
        project.clear(); 
        a.sitandspin();
        //a.pzl();
    
    # pAaq2_PkypY?t=24
    # http://jsfiddle.net/M78zz/
    n Re =>''=><<''
        // <div id="ytplayer"></div>
    
    n yt =>''=><<''
        var d = {};
        d.playerVars = C.c || {};
        d.height = '390';
        d.width = '640';
        d.videoId = C.t;
        console.log(' yepeppp', C);
        etc.pla = A.player = new YT.Player('ytplayer', d);
        console.log(' yepeppp', d, A.player);
    
    # compression jsc ^, js v
    n ytapi =>''=><<''
        // makes element src: https://www.youtube.com/player_api
    
    n ytr =>''=><<''
        //$('canvas#display').attr('width'=>'100%', height=>'100%');
        function onYouTubeIframeAPIReady() {
            etc.ytread = 1;
        }
JSosC: |
    u allsvse
    
    n args =>5=><<''
        # quack
    
    n jsc =>5=><<''
        my $args = cs.args || 'A,C,G,T';
        at.c = 'e';
        at.s =  "a.".j.l." = function (".$args.") {\n".at.s."};\n";
    
    n js =>5=><<''
        if (1 || cs.src) {
            at.tag = 'script';
            at.type = cs.type || 'text/javascript';
            at.title = undef;
            at.src = cs.src if cs.src;
        }
        else {
            at.c = 'o';
            at.s =   [J.id, 'do', at.s];
        }
    
    n st =>5=><<''
        at.tag = 'style';
        at.type = 'text/css';
    
    n ps =>5=><<''
        at.c = 'o'; # etc
        at.s = [J.id, 'ps', at.s];
        at.pur = 1; # TODO local lumi
    
    n yt =>5=><<''
        my $n = {};
        (n.t, my $ma) = split /\?/, $v;
        $ma = {map{split '=', $_, 2}split '&', $ma};
        .
        n.c.autoplay = 1 if ma.t;
        n.c.start = ma.t if ma.t;
        .
        #die "$v   :". wdump $n;
        at.pur = 1; # TODO local lumi
        at.c = 'o';
        at.s = [J.id, yt => [n.t,n.y,n.c,n.sc]];
        #<iframe width="420" height="315" src="https://www.youtube.com/embed/DyVnwKcb0YY#t=958" frameborder="0" autoplay="1" start="958" allowfullscreen></iframe>

