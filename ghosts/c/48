

stylehut: |
    u alljs
    
    n e =>''=><<'',{args=>'e'}
        if (!q)
            console.log("xut "+e);
        var m;
        try { m = eval(e); }
        catch (er) { a.er(e, er); }
        m
    
    n er =>''=><<'',{args=>'e,er'}
        console.log("xutbang: ", e, er);
        var ej = {er: {e: e}};
        er && er.message and ej.er.m = er.message;
        s.reply(ej);
        a.m("!"+ (ej.er.m || e));
    
    n m =>''=><<'','%args:e'
        var d = e.substr(0,1);
        d == " " and return a.e(e);
        d == "[" || d == "{"  and return a.om({},$.parseJSON(e),a,{});
        d == "." and e = '<span style="font-size:66%">'+e+'</span>';
        a.c(e);

    n c =>''=><<'','%args:e'
        $('#msgs').prepend(e+"\n");
    
    n yl =>''=><<'',{args=>'delay,func'}
        setTimeout(func, delay);

    n ks =>''=><<'','%args:s'
        var ks = [];
        for (var k in s) {
            ks.push(k);
        }
        return ks.join(',');
    
styleven: |
    u alljs
    
    n codsav =>''=><<''
        var cm = s;
        a.c('AA AA '+C.t);
        var d = {};
        a.entag(d, $(A.on));
        A.bb.jus = d.code = cm.getValue();
        d.dig = $(A.on).attr('dig');
        a.ethro(d, ws);
        console.log(d);
    
    n entag =>''=><<'',{args=>'d,tag'}
          d.name = tag.attr('name');
          var ids = [];
          while (tag.length) {
              var nam = tag.prop('tagName');
              var id = tag.attr('id');
              if (!d.id && id)
                  d.id = id;
              if (id)
                  ids.unshift(id);
              if (nam === 'WW') {
                  d.W = id;
                  d.ux = ids[1];
                  break;
              }
              tag = tag.parent();
          }
          d.ids = ids;
styleomi: |
    u alljs
    
    n sca =>''=><<''
        while (s > 1) {
            s = s / 10;
        }
        return s;
    
    n f =>''=><<''
        var t = '';
        s and t=s
        var at = '';
        C.y.cv and at += "cv='"+C.y.cv+"'";
        t || at || console.log("No attach: "+T.alk);
        return $(A.on).find(t+'['+at+']');
    
    n inC =>''=><<''
        C = s;
        C.constructor == Array and C = {t:C[0],y:C[1],c:C[2],sc:C[3]};
        else
        C.constructor == Object and $.each(C,function(k,v) { G&$k,v }); T.not = 1;
        else
        typeof C === 'string' and C = {c: {s: C}};
        typeof C.c === 'string' and C.c = {s: C.c};
        typeof C.y === 'string' and C.y = {cv: G&sca,C.y };
        !typeof C.t === 'string' and console.log('queda',C);
        C.c ||= {};
        C.sc ||= {};
        return C;

    n h =>''=><<'',{acgt=>'way,s'}
        if (!G[way])
            throw "No way: "+way
        return G[way](A,C,G,T,s);
    
    # A falls, A.on taps each-for thing, A.W holst selves, usu not
    n An =>''=><<''
        var A = $.extend({},A);
        A.I = {};
        A.mo ||= A;
        T.d ||= 1;
        s and var k = 'e_'+s; A.e = G[k];
        return A
    
    n t =>''=><<''
        T.not and return 0;
        A.I.cv = G&sca,s;
        G&ex,A.I;
        return 1;
    
    n ex =>''=><<''
        s.ei ||= 0;
        while (1) {
            var v = A.e[s.ei];
            !v and return
            v[0] > s.cv and return
            s.ei++;
            $.each(v[1],function(i,D){
                var t = D[0];
                var sc = D[1];
                sc.nk and !C[sc.nk] and return
                sc.gk and !C[sc.nk][sc.gk] and return
                var es;
                sc.gk and es = C[sc.nk][sc.gk];
                sc.s and es = sc.s;
                G&$t,es;
            });
        }
    
    n Win =>''=><<''
        var W = ww[s];
        if (!W) {
            a.c("new W: "+s);
            W = ww[s] = {};
            W.Wid = s;
            W.A = {};
            W.A.W = W;
            //W.A.p = new paper.Project();
        }
        //W.A.p.activate();
        return W;
    
    n eine =>''=><<''
        var K = s[0];
        var e = s[1];
        var k = 'e_'+K;
        G[k] = e;
    
    # persona perforthe webclient channels
    # so the G copies and lives from/to W
    # h reach up/down to applied layers of you
    # top level mirage is o(ww,Wid,$s) 
    # which ins ww (G.Wid for Oth), J.id (Wid)
    # and the difference is you
    
    n om =>''=><<''
        A = G&An,'om';
        C = G&inC,C;
        t&2;
        T.alk = 'w'+T.d+' '+C.t+' '+a.ks(C.c)+'%'+a.ks(C.sc);
        C.sc ||= {};
        C.sc.css ||= {};
        C.sc.anc ||= {};
        t&7;
    
    n nn =>''=><<''
        !A.W and a.c("no aW");
        A.W.bb ||= {};
        A.bb ||= A.W.bb;
        if (s) {
            a.c("Cinfdo");
        }
        A.bb[C.y.cv] ||= {};
        A.bb[C.y.cv][C.t] ||= {};
        A.bb.t ||= {};
        A.bb.t[C.t] ||= {};
        A.bb.t[C.t][C.y.cv] ||= A.bb[C.y.cv][C.t];
        return A.bb[C.y.cv][C.t];
    
    n tcl =>''=><<''
        var t = C.t.replace(/\W/g,'e');
        t = 'n'+t+'n';
        return t;
    
stylation: |
    u alljse
    n '','','%nk:c'
    #
    # $(A.on).fadeOut(delay, function() { $(this).remove(); });
    
    n W =>28=><<''
        A.on = $('#'+C.c.W);
        !$(A.on).length and a.c(T.alk+"  noW: "+C.c.W);
        var W = G&Win,C.c.W;
        $.extend(A,W.A);
    
    n nobody =>31=><<''
        A.on = $('#'+C.c.nobody);
        !$(A.on).length and a.c("no nobody at "+C.c.nobody);
    
    # whole time... (make whote, A.t&4 ex inness..
    n el =>333=><<''
        C.sc.attr ||= {};
        var last;
        var t = G&tcl;
        s == '2' and $(A.on).find(t).remove();
        s == '2' and s = '1';
        var el = G&f,t;
        s == '1' || s == '9' and $(el).remove();
        s == '8' and return A.on.aft = el;
        if (s == '1') {
            C.sc.attr.cv = C.y.cv;
            C.c.tag and t = C.c.tag;
            var div = $("<"+t+">", C.sc.attr);
            $(div).appendTo(A.on).each(function(i,v){el=v});
        }
        delete C.sc.attr;
        .
        A.bb = G&nn;
        if (A.bb.cod) {
            C.c.cod ||= '3';
        }
        if (A.bb.pa) {
            C.sc.pa ||= '3';
        }
        if (typeof C.c.s === 'string' && !C.c.cod && !C.sc.pa) {
            C.c.ht and $(el).html(C.c.s);
            else
            $(el).text(C.c.s);
        }
        A.on = el;
   
    n el =>4=><<''
        var f = ['id','src','dig'];
        var fl = function (v,z) {
            C.sc.attr and C.sc.attr[v] = z;
            else {
                $(A.on).attr(v,z);
            }
        };
        $.each(f,function(i,v) {
            C.sc[v] and fl(v, C.sc[v])
            else
            C.c[v] and fl(v, C.c[v])
        });
stylers: |
    u alljse
    
    n geo =>5=><<''
        s = s.split(' ');
        var aung = s[0].match('^a(\\d+)');
        if (aung) {
            s.shift();
            aung.shift();
            C.sc.ab = aung.shift();
            //absolu
        }
        s = {x:s[0],y:s[1],rad:s[2],scale:s[3]};
        C.sc.css.top = (s.y * 100)+'%';
        C.sc.css.left = (s.x * 100)+'%';
        C.sc.css['transform-origin'] = '0% 0%';
        s.tro and C.sc.css['transform-origin'] = s.tro;
        s.rad and C.sc.css['transform-rotate'] = s.rad+'rad';
        s.scale and C.sc.css['transform-scale'] = s.scale;
    
    n ab =>51=><<''
        if (s === '100') {
            C.sc.css.width = '100%';
            C.sc.css.height = '100%';
        }
        C.sc.css.position = 'absolute';
    
    n z =>6=><<''
        $.each(s, function(i,v) {
            //a.yl(1, function () { 
            G.om(A,v,G,{d:T.d+1});
            //});
        });
    
    n cssdel =>589=><<''
        var re = s.split(',');
        $.each(re,function(i,v){ delete C.sc.css[v] });
    
    n css =>59=><<''
        if (typeof s === 'string') {
            var re = s.split(';');
            s = {};
            $.each(re,function(i,v){
                var kv = v.split(':');
                s[kv[0]] = kv[1];
            });
        }
        $.each(s, function(i,v) {
            if (v.constructor === Object) {
                var swav = [];
                $.each(v, function(ve,ss) {
                    var se = ve+'('+ss+')';
                    swav.push(se);
                });
                v = swav.join(' ');
            }
            i === 'filter' and i = '-webkit-filter';
            $(A.on).css(i, v);
        });
    
    n anc =>59=><<''
        $(A.on).animate(C.sc.anc, (C.sc.ant||900));
    
stylext: |
    u alljse
    n '','','%nk:c'
    
    n cod =>59=><<''
        var cm = A.bb.cod;
        .
        if (typeof s === 'string') {
            if (s === '3') {
                !cm and return a.c('no cod !');
                s = {};
            }
            else {
                s = {mode:'perl'};
                cm = 0;
            }
        }
        .
        var def = {mode:'perl',theme:'midnight',lineWrapping:true};
        var set = $.extend(def, s);
        cm and $.each(set,function(k,v){ cm.setOption(k,v) });
        !cm and cm = CodeMirror(A.on, set);
        A.bb.cod = cm;
        .
        if (C.c.s) {
            C.c.s !== A.bb.jus and cm.setValue(C.c.s);
            else { a.c('vv vv'+C.t); }
        }
        cm.refresh();
        .
        var sav = function(){ 
            G&codsav,cm;
        };
        cm.setOption('extraKeys', {Esc:sav});
        cm.on('focus',function(){a.c('Cofuc');clof();keof();});
        cm.on('blur',function(){a.c('Cofus');clon();keon();sav();});
    
    #    $('#'+id).css('width','15em','max-height','70%','overflow','scroll');
    #   $('#'+id+' > .CodeMirror');//.css('height','auto');
    
stylepap: |
    u alljse
    
    # push to codcoil the paper scope grab to build into the dome
    n pa =>34=><<''
        delete C.c.el;
        with (paper) {
            s = C.sc;
            var r;
            if (C.sc.pa === '3') {
                r = A.bb.pa;
                !r && a.c("no rasmeemmber "+C.t);
            }
            else {
                !s === 'ra' and a.c('nom ra: '+s);
                var src;
                s.src and src = s.src;
                if (!src) {
                    s.jfi ||= 'img';
                    var find = $(s.jfi);
                    !find.length and a.c('no find '+s.jfi);
                    src = $(find).last().attr('src');
                }
                r = new Raster(src);
            }
            s.poes and r.position = eval(s.poes);
            else
            C.sc.pa !== '3' and r.position = view.center;
            s.poxop and r.position.x += s.poxop;
            s.poyop and r.position.y += s.poyop;
            s.sca and r.scaling = s.sca;
            s.b and r.blendMode = s.b;
            s.r and r.rotation = s.r;
            s.opa and r.opacity = s.opa;
            console.log('img: ', r);
            A.W ||= {};
            A.W.ras ||= {};
            A.W.ras[src] = r;
            A.bb.pa = r;
        }
    
pi/pape: |
    C.sc.pa = 'res';
    if (C.c.thumb) {
        my ($th)=map{_.nj}
        n th=>-thumb=>C.c.thumb
        C.sc.src = th.C.sc.src;
    }
    C.sc.oc = 1;
    Rw papernoise;
    
papernoise: |
    my ($no,$i,$se) = ($1,$2,$3)
        if `uptime` =~ /([\d\.]+), ([\d\.]+), ([\d\.]+)/;
    my $fo = $no - $i;
    shuffle 1, 2, 3 for 1..int($no);
    
    C.sc.src || sayre "no src..";
    C.sc.poxop = -70 * (rand(3) -2);
    C.sc.poyop = -70 * (rand(3) -2);
    C.sc.sca = 3.421 * rand(3) ^ 2;
    C.sc.opa = 0.61;
    C.sc.b = (shuffle 'normal', 'multiply', 'screen', 'overlay', 'soft-light', 'hard-light', 'color-dodge', 'color-burn', 'darken', 'lighten', 'difference', 'exclusion', 'hue', 'saturation', 'luminosity', 'color', 'add', 'subtract', 'average', 'pin-light', 'negation', 'source-over', 'source-in', 'source-out', 'source-atop', 'destination-over', 'destination-in', 'destination-out', 'destination-atop', 'lighter', 'darker', 'copy', 'xor')[0];
    
    C.sc.r = int(900 * $fo);
    
    C.sc->{$_} = I.d&ron,C.sc->{$_} for grep{C.sc->{$_}} qw'poxop poyop sca opa r';
    
Canvasc: |
    u alljs
    # & sitting
    
    n ps =>''=><<'','%args:s'
        with (paper) {
          try {
            eval(s);
          }
          catch (er) {
            a.er(s, er);
          }
        }
    
    # https://github.com/tweenjs/tween.js/blob/master/docs/user_guide.md
    
    n pzl =>''=><<''
        with(paper){
            var shape = new Path.RegularPolygon(view.center,3, 100);
            .
            shape.fillColor = '#8C8A00';
            view.onFrame = function (event) {
                shape.rotate(1);
                shape.fillColor.hue += 1;
                .
                shape.position.x += shape.bounds.width / 50;
                if (shape.bounds.left > view.size.width) {
                    shape.position.x = -shape.bounds.width;
                }
            }
        }
    
    n sitandspin =>''=><<''
        with (paper) {
            var project = new Project;
            var mousePoint = view.center;
            var amount = 30;
            var colors = ['red', 'black', 'blue', 'black'];
            for (var i = 0; i < amount; i++) {
                var rect = new Rectangle([5, 0], [25, 25]);
                rect.center = mousePoint;
                var path = new Path.Rectangle(rect, 6);
                path.fillColor = colors[i % 4];
                var scale = (1 - i / amount) * 25;
                path.scale(scale);
            }
            view.onMouseMove = function (event) {
                mousePoint = event.point;
                a.m('mm!');
            }
            var children = project.activeLayer.children;
            view.onFrame = function (event) {
                paper.uplg.update(event);
                for (var i = 1, l = children.length; i < l; i++) {
                    var item = children[i];
                    var delta = (mousePoint - item.position) / (i + 5);
                    item.rotate((Math.sin((event.count + i) / 10)+0.617) * 3);
                    if (delta.length > 0.1)
                        item.position += delta;
                    item.fillColor.hue += 1;
                    var shape = item;
                    shape.position.x += shape.bounds.width / 50;
                    if (shape.bounds.left > view.size.width) {
                        shape.position.x = -shape.bounds.width;
                    } 
                }
            }
        }
    
Funstuff: |
    u alljs
    # paperscope (with (paper) {...}) FUN STUFF! spines!
    
    n funstuff =>''=><<''
        project.clear(); 
        a.sitandspin();
        //a.pzl();
    
    # pAaq2_PkypY?t=24
    # http://jsfiddle.net/M78zz/
    n Re =>''=><<''
        // <div id="ytplayer"></div>
    
    n yt =>''=><<''
        var d = {};
        d.playerVars = C.c || {};
        d.height = '390';
        d.width = '640';
        d.videoId = C.t;
        console.log(' yepeppp', C);
        etc.pla = A.player = new YT.Player('ytplayer', d);
        console.log(' yepeppp', d, A.player);
    
    # compression jsc ^, js v
    n ytapi =>''=><<''
        // makes element src: https://www.youtube.com/player_api
    
    n ytr =>''=><<''
        //$('canvas#display').attr('width'=>'100%', height=>'100%');
        function onYouTubeIframeAPIReady() {
            etc.ytread = 1;
        }
JSosC: |
    u allsvse
    
    n args =>5=><<''
        # quack
    
    n jsc =>5=><<''
        my $args = cs.args || 'A,C,G,T';
        at.c = 'e';
        at.s =  "a.".j.l." = function (".$args.") {\n".at.s."};\n";
    
    n js =>5=><<''
        if (1 || cs.src) {
            at.tag = 'script';
            at.type = cs.type || 'text/javascript';
            at.title = undef;
            at.src = cs.src if cs.src;
        }
        else {
            at.c = 'o';
            at.s =   [J.id, 'do', at.s];
        }
    
    n st =>5=><<''
        at.tag = 'style';
        at.type = 'text/css';
    
    n ps =>5=><<''
        at.c = 'o'; # etc
        at.s = [J.id, 'ps', at.s];
        at.pur = 1; # TODO local lumi
    
    n yt =>5=><<''
        my $n = {};
        (n.t, my $ma) = split /\?/, $v;
        $ma = {map{split '=', $_, 2}split '&', $ma};
        .
        n.c.autoplay = 1 if ma.t;
        n.c.start = ma.t if ma.t;
        .
        #die "$v   :". wdump $n;
        at.pur = 1; # TODO local lumi
        at.c = 'o';
        at.s = [J.id, yt => [n.t,n.y,n.c,n.sc]];
        #<iframe width="420" height="315" src="https://www.youtube.com/embed/DyVnwKcb0YY#t=958" frameborder="0" autoplay="1" start="958" allowfullscreen></iframe>

