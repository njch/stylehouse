Be: |
    J.fti ||= 0;
    if (J.fti >= 0) {
        Rw waitme;
    }
    sayyl "Ftime up J.fti";
    Rw forked;
Sen: |
    u urw
    #u SpaceWatch
    y.in = 0.02;
    y.out = 0.5;
    y.at.sca = 0.3;
    n s=>''=>1
    my $U = J.A.II.U;
    #n eo=>-pre=>wdump 2, $U;
    my $k = "pi-hush";
    sayyl G.way->{$k};
    saybl G.way.o.dige->{$k};
    
    Mn(eso=>-hush=>{s=>$U});
    n and=>-jsthink
    
    #n oe=>'01-77x14','#','%hs:388,fs:99,blr:5,ig:3'
    J.VV.N = 1;
Dub: |
    u AmPg
    Mn(fiv =>''=>":D") for 1..4;
AmPg: |
    n UpPg
    u allact
    n seolu =>32,<<'','%code:U,v:scJ'
        J.oy.at.db = 1;
        sayyl "Looking for C.t  in sa db";
    
UpPg: |
    u allacgts
    use Mojo::Pg;
    my $pg ||= Mojo::Pg->new('postgresql://s@/s');
    
    n db =>'',<<'',{pg=>$pg}
        my $pg = T.D.pg;
        $pg->db->do('create table if not exists names (name text indexed, o json)');
        $pg->db
    
    n qp =>'',<<'',{pg=>$pg}
        G&db ->query($s, @Me);
pi/jsthink: |
    n ste=>1=><<'','%e'
        var to = [];
        $('body > *').each(function(i,k){
            var e = {};
            e.tag = k.tagName;
            $.each(k.attributes, function(ii,kk) {
                e[kk.name] = kk.value;
            });
            to.push(e);
        });
        a.to = to;
        //to.push(k.tag);
        a.c(' BLablah');
        .
        a.c('AA AA '+C.t);
        var d = {};
        a.entag(d, $(A.on));
        a.ethro(d, ws);
        console.log(d);
    
    
    
pi/hush: |
    y.at.wi = 5;
    n t=>1=>C.t,'%hs:287'
    (J.A.d > 3 || ref $s ne 'HASH') && return
         n '@'=>''=>"@".ki($s),'%fs:7'
    Mn($_=>-hush=>{s=>$s->{$_}}) for sort keys %$s;
    # etc
    # e
SpaceWatch: |
    u allvse
    n seoluve =>323,<<'','%code:U,v:J'
        J.pich.spaceflos = [{any=>1,u=>'SpaceWatch'}];
        
    u allvy
    n yonwatch =>223,<<'','%code:Mo,v:o'
        return if C.c.swa;
        sayyl "Seeing A.J.name   do C.t: ".wdump 1, C.y;
    
Gen: |
    u ReoCur
    y.at.ux = 1;
    n s=>2=>23
    my ($Jo) = map{_.nj}
    n Sen
    my $vs = Jo.El.Pre.vs;
    Mn(es=>-vs=>{s=>$vs});
    
Wseer: |
    u urW
    n state=>1=>"Ax Wu"
    n codeoy=>2=><<'','%jse'
        reply $('body > *').each(function(k,v){ console.log(v) });
    
urw: |
    n ReoCur
    u allvse
    n seolu =>32,<<'','%code:U,v:J'
        J.oy.at.ux = 1;
        J.oy.at.oWl = 1;
        J.ev.th ||= 'middle';
        J.ev.li ||= 'climbos';
        
ym/time: |
    my ($per,@cvs) = @{v.cut};
    A.t&$per,@cvs;
Usee: |
    u urw
    u curv=>pi=><<''
        curve 0 0.11
    
    my @l = `find life/W -type l`;
    my $keep = {map{chomp; readlink($_) =~ /^(.+)\..+?$/; $1=>$_}@l};
    my @r = `find life/W -mtime +0.6 -type f`;
    for (@r) {
        my $k = $1 if /^life\/W\/(.+)\..+?$/;
        $keep->{$k} ?
            sayre "$k \t\tis $keep->{$k}"
          : `rm $_`;
    }
    sayyl sort keys %$keep;
    #my @el = `find life/W`;
    y.in=1;
    y.out=5;
    Mn(some=>''=>{pi=>textl=>s=>$_})
        for split"\n",wdump 2, \@l;
EYZ: |
    u ReoCur
    y.at.ux = 1;
    J.VV.N = 1;
    u curv =>pi=><<''
        zoom 0  0.13
        y    0  0
        x    0  0
        curve 0 -0.03
    
    # eyes !
    y.limn = 0.2245;
    y.lum = 5;
    y.in = 0.04;
    y.out = 0.3;
    #Mn(shedful => '', {pi=>'eye',s=>'eye/Tarf/Photo serieses'});
    Mn(shedful => '', {pi=>'fi',s=>'eye/el'});
Details: |
    u ReoCur
    y.at.ux = 1;
    J.VV.N = 1;
    
    #n AfghanRug
    n $_,$_,$_,'%hs:389,fs:24,ml:-2em' for 1, 3, 5, 7, 9;
    
    J.ev.th ||= 'middle';
    J.ev.li ||= 'climbos';
    
    n undivthis=>[-dos=>0.06]
    
    #n lod=>0.06 =>'fds'=>'%id:lodo,dos:goche,wi:3'
    
    G.edit ||= 'G/way/Details';
    n edit=>0.02=>'@'=>'%id:edat,dos:flse,op:J/se/cod,to:!'
    J.se.cod &&
    n 'G/edit'=>[-cde=>'1-2']
    J.se.cod &&
    n G.edit=>[-cde=>'2-6']
    y.at.cssdel = 'transform';
    y.ope=1;
    #n time =>[-timem=>'1-9x'.int rand 13]=>''.`date`
    
    #n Tarp
    J.act = 0; # pi always
    #return
    #n Sefi
    J.dooed++ || 
    #n Wjes
    # one to com the piles
    return;
    y.in = 0.08;
    #y.lum = 1;
    y.out = 3;
    Mn($_=>-shed=>) for 'ghosts/c/48';
    
    
    #Mn($_=>-codey=>) for @{J.CO||=[]};
    #Mn(shedful => '', {pi=>'eye',s=>'eye/fug/1/lt'});
    
    n 1.$_,$_,$_,'%hs:389,fs:20' for 1, 3, 5, 7, 9;
    
    return;
pi/timem: |
    Mn(dko=>''=>$_=>
        '%fs:'.(20 + int rand 70).',fw:6,hs:'.join('',map{int rand $_}5,7,8).',blr:'.int rand 4
      )
        for split ' ', $s;
AfghanRug: |
    u ReoCur
    y.at.ux = 1;
    n $_,$_,$_,'%hs:389,fs:20' for 1, 3, 5, 7, 9;
    my $c;
    c.s = enth("  ஓ୶");
    c.cow = 'r4b3 a3a';
    c.mixco = '0.5 582';
    
    n nob =>''=>{nobody=>'ux'},'%sat:7'
    
    y.in = 1;
    y.out = 9;
    Mn(d =>''=>$c=>'%ht,fs:164,hs:'.int(rand(9)).'96,sha:3 3 3 034') for 1..6;
    0 &&
    n afghanrug =>'1-9x3',$c,@{Load(fixutf8(<<''))};
          - blr: 4
            fs: 152.9
            fw: 4
            ht: 1
            sat: 1
            bri: 0.3
            con: 3
            sha: 3 3 3 034
            hs: 493
            zig: 5
    
    Rw QuietVillage;
    J.VV.N = 1;
    n affg =>'12-88x8'=>$c=>'%fs:73,blr:3,hs:374,ht:1,ml:4';
    # c
QuietVillage: |
    n quiet=>2=><<'','%ht'
        <video width="1920" height="1080" autoplay controls>
            <source src="art/La Monte Young - Rag Bhairava (Excerpt).mp4">
        </video>
    
Tarp: |
    u ReoCur
    y.at.ux = 1;
    y.at.oWl = 1;
    J.VV.N = 1;
    #
    J.tea ||= [grep{chomp}shuffle`ls -1 eye/o/*`];
    my $pg = 'w/Tarpig';
    J.slow = readlink($pg) || 0;
    J.slow += 1;
    `unlink $pg` if -l $pg;
    `ln -s J.slow $pg`;
    J.slow = 0 if int(J.slow) >= @{J.tea};
    #
    y.ope = 1;
    my $f = J.tea->[int J.slow];
    n "the J.slow J.fast"=>-pape=>{s=>'mild'=>thumb=>$f};
    
    Mn(f=>''=>$f=>'%dos:flse,op:J/slow,to:1');
pi/textl: |
    my $l = sum map{ord $_} split '', $s;
    $l -= 10 until $l < 10;
    my $h = int $l;
    n text=>1=>$s,{hs=>"${h}877"}

