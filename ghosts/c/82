
ambth: | # e,biertoho
    while (my ($k,$v) = each %{J.El.Pre.v->{'0.3'}}) {
        next unless v.sc.pi;
        say "J.name ambients v.sc.J.name";
        n v.t=>v.y.cv=>{pi=>v.sc.pi,s=>v.c.s}
    }
pi/sol: | # file anywhere, together
    # everything this s can get a copy of the ,,,
    y.at.oWl = 1;
    $s || die "Sol: ".wdump 2, $C;
    n Film=>$C=>{}=>'%qz'
    
Film: |
    J.ev.th ||= 'middle';
    J.ev.f.line = 'yJLong';
    # reverse trip ^
    #J.ev.f.sol = 'SpaceFlos';
    #J.ev.opl = 'panop';
    # and n $C, but spaceflos needs more...
    y.ope = 1;
    
    map {
        saybl "\n\n_.t _.sc.J.id Tango _.c.s           _.sc.pi";
        n _.c.s=>6=>{pi=>panop=>s=>$_,},'%qs'
    } A.e&C
pi/pane: |
    #u perCcsomethingtracepha
    n $_ for map{values %$_}values %$s
    
pi/panop: |
    Rw pi/anoply;
    n Follower=>6,{W=>Follower=>e=>$C},'%qs,qz'
pi/anoply: |
    y.ope =  1;
    y.at.oWl = 1;
    $s || die "no anoply in";
    my ($t,$l) = Rw idToE;
    $t || die "anoply noi $t: ".wdump [$C,$s];
    n $t =>{}=>{}=>{opel=>sjson($l)}
    
pi/annopl: |
    y.ope = 1;
    my ($t,$l) = Rw idToE;
    n $t =>{}=>{}=>{opel=>sjson($l)}
    
Follower: | # follws E.t as file, sends lines to E.t, has panopoly of Film like things to unify changesity into therermore panoply actioney changesity

    # (everything threes)
    u linesfollow
    u Ipifalls
    y.ope = 1;
    y.cvil = 1;
    y.at.oWl = 1;
    J.VV.N = 0;
    
    J.mo.s.al.opt.foler = [Follower=>'W'=>{}];
    #J.VV.N = 1;
    J.ev.th ||= 'middle';
    J.ev.f.panop = 'SpaceFlos';
    J.ev.f.line = 'yJLong';
    J.ev.so = 'cfile';
    J.ev.amb = 'ambth';
    #
    n $C

