
oJ2: | # MOD wo
    die "what the hell";
oW2: | # some get-J or weave wires protocol - hosts
    my $t = $v;
    $t = v.name if ref $t;
    at.J = ref $v ? $v : $t;
    at.W = $t;
    
    if (ref $v) {
        die wdump ["onto W J.name:",$v] if $v ne v.most.J;
    }
    
    C.t ||= $t;
    C.y.cv ||= 0.3;
    
    A.jr = Rw Ajr $J:G.oin $t $cv=0.3;
opi2: | # approach
    at.pi = $v || 'guess';
    C.c.J = 'pie';
    
    my $oJ = $J;
    $oJ = C.y.o.J if C.y.o && C.y.o.J;
    A.jr = Rw Ajr $J:oJ $C;
   
oJ3: | # MOD  being repeater
    my $ca = A.jr&J; # gets W from oin(etc)  or  abdomisa
    my $sp = C.sc.J;
    C.sc.J = $ca if $ca; # resolve
    
    my $talk = "";
    
    die "diff c W-J  " if C.c.W && C.c.W ne C.c.J;
    if (C.sc.W) {
        if (ref C.sc.J) {
            $talk .= "r";
            $talk .= "!" if $sp ne $ca;
            $talk .= ">" if !ref $ca;
        }
        $talk .= "W";
    }
    
    if (!exists C.c.pi) {
        saybl "J.name  -- $talk -- ".k2 $C;
    }
    #die "YE  J.name" if ref C.c.W;
    die "sp: $sp -> $ca" if ref $sp && ref $ca && $sp ne $ca;
    
    sayre "ref CcJ J.name  ".k2 $C if ref C.c.J;
    
    
    C.sc.J = C.c.W if ref C.c.W;
    
    
    ref C.sc.J && C.sc.J.dead && undef C.sc.J;
    
    if (ref C.c.J || ref C.c.W) {
    }
    
    sayyl "oJ3 C.t   C.sc.pi    C.sc.J   " if J.V;
    #die k2 $C if C.t eq 'Vuel';
    
    
    if (!ref C.sc.J) {
        if (C.sc.pi) {
            C.sc.J = Rw spinash $J;
        }
        else {
            my $o = {name=>C.c.J};
            C.sc.J = Rw JJ $o;
            sayyl "J3   Made o.name";
        }
    }
    
    my $J = C.sc.J;
    
    die "noovewr   C.c.J ne $J" if ref C.c.J && C.c.J ne $J;
    
    if (ref C.c.X) {
        die "noovewr X  C.c.X ne $J" if C.c.X ne $J;
        A.jr&J,$J,9;
        # ^ delete
        J.dead = 1;
        T.return = [];
        return;
    }
    A.jr&J,$J;
    A.jr->('',"Jay");
    at.J = $J;
    
    if (C.sc.pi) {
       my $A = J.most.A||{};
       $A = J.A = {%$A};
       
       A.in = $G->gip(J.Jiter.A.in, C.t)||{};
       
       J.A.coi = Rw pha $J ako;
       
       J.d = J.C = $C;
       J.r = C.r;
       J.bz->("/\t0.9" => "y");
    }
oJ6: |
    return
    Rw opi6
    if C.sc.pi;
    return die "YEp!".k2 $C
    if ref C.sc.W;
    
    my $ar = {%{C.c}};
    ar.J=C.sc.J||die'noj';
    ar.C=$C;
    ar.A=$A;

    return C.s if !A.hav && A.jr&ok-9;
    
    my $n = A.hav ? sub{} : A.jr&ok-9,9;
    aft { $@ && do{sayre" BONG"for 1..10}; $n->(); };
    saybl "oJ6 C.t" unless J.yt.quiet;
    
    Rw around;
       
opi6: |
       my $oJ = $J;
       $J = C.sc.J||die;
       my $A = J.A;
       my $T = {};
       
       my $M=[];
       my $y = {o=>$M};
       
       $v = C.sc.J||die'noj';
       v.cv = C.c.gp.cv || C.c.cv || 0.6;
       die'csnod' if v.d ne $d || v.d.c ne d.c;
       
       my $path = C.sc.pi||die'nopi';
       $path = 'text' if J.A.d > 5;
       
       
       my $s = C.c.s;
       Rw pi/$path $A $J $u:s $s $C $M $y; 
       
       
       Jn('zoo',$y) if @$M;
       
       
       
       A.coi.qui = 1;
       A.coi.exactl->();
oJ7: |
    return
    Rw opi7
    if ar.A && ar.C.sc.pi;
    
    my $J = C.sc.J;
    
    say "oJ7 J.name";
    Rw oJ $J geo &up $noesc=1;
    Rw J.most.eo $J;
opi7: | # MOD pi     out cup           # REF JOIN A.c/sc
    my $J = C.sc.J;
    
    my $aj = Rw J.most.eo $J $catj=1;
    
    die aj.s if aj.s;
    #sayre "Upto J.r go ".slim 70, sjson aj.c if @{aj.c};
    J.Ec = [@{aj.c}];
    die wdump $aj if @{aj.sc};
       
oJ75: | # OUT J
    if (C.sc.pi) {
        die wdump $C if !ref C.sc.J;
        $v = C.sc.J || die'enoJ'.C.t;
        die "Pi v.r has s" if v.s;
        delete at.s if defined at.s;
        die wdump $C if !ref v.Ec;
        die "Pi v.r no .Ec" if !@{v.Ec};
        acum $at, 'Esc', $_ for @{v.Ec};
    }

