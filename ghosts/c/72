Sun/oo: [somoe]
Hypo: |
    J.V=1;
    n stod=>''=>{pi=>ajyp=>s=>Duv=>W=>'Yes'}
    
    #my $G = Rw Gto $J;
    
    saybl "J.name !";
    #my $Y = Rw Elvus $J $oJ aboves1;
    #sayyl wdump 2, [$rv];
    
pi/ajyp: |
    my $W = C.c.W;
    my $rv = do {
        my $Y = Rw El $J:W Duv;
        my $rv = Y.rv || die'nmorv';
        rv.i && rv.c && rv.sc || die"norsc";
        $rv
    };
    n lisn=>=>{pi=>''=>s=>rv.i}
    
    sayyl "W ajypotio W.name";
    # our listen 2sph: as []
    Atime(2)||return sayyl "YEAH!";
    
    sayyl "After time2" for 1..5;
    
    Mn(c=>=>{pi=>array=>s=>rv.c});
    
    Mn(sc=>=>{pi=>array=>s=>rv.sc});
    
    #J.V = 1;
    sayre "Fullying" for 1..5;
    
    
Gto: |
    my $G;
    G.w = sub {
        my (@arr) = @_;
        die "HERtoG".wdump [@arr];
    };
    $G
Jto: |
    my $J;
    J.id = mkuid;
    J.name = ar.name || (@{delete ar.m})[0];
    J.bb = {};

    J.most.J = $J;
    J.most.mody = 'mani';
    J.most.eo = 'Yesui';
    J.tt = 1;

    J.u = sub {
       my $ar;
       ar.J = Rw j $J qq;
       ar.N = [[@_]];
       sayyl "J.name U! @_";
       Rw MyN;
       # & concert overworld
    };
    J.n = sub {
       my $ar;
       ar.J = $J;
       ar.N = [[@_]];
       Rw MyN;
    };
    J.m = sub {
       my $ar;
       ar.M = shift;
       ar.J = $J;
       ar.N = [[@_]];
       Rw MyN;
    };
    J.bz = sub { #
       my $m = [@_];
       die "not 2 @$m" if @$m != 2;
       my $j={};
       while (@$m) {
           my ($r, $v) = (shift @$m, shift @$m);
           if ($r =~ /^%(\S+)/) {
               j.style = $1;
           }
           else {
               $j = Rw r2j $r $J;
           }
           defined j.cv || die "NOSEYV: j.cv".wdump[$j,[@_],[$r, $v]];
           
           j.r = join "\t", j.cv, j.t, j.style;
           j.s = $v;
           my @Js = $J;
           push @Js, values %{J.phy} if J.phy;
           for my $jj (@Js) {
               jj.bb->{j.r} = j.s;
               push @{jj.ord}, {%$j} if jj.ord;
               jj.tim->{j.r} = hitime() if jj.tim;
               jj.wtf->{j.r} = $F[0] if jj.wtf;
               jj.ap->($j) if jj.ap; # <<<
           }
      }
    };
    $J
stylehut: |
    u perl/file
    n ACGT
    n doi=>'',<<'','%code=1'
      Rw j phon;
    
ACGT: |
    # /home/s/Music/Nurse With Wound/2004 Shipwreck Radio Volume One (Seven Sonic Structures From UtvÃ¦r) 2xCD/disc 2/04 - june 20.mp3
lazershop: |
    #my $g = Rw Jto Gee;
    Rw j - Gee;
    
phon: |
    n Jh=>0.01
    n lazershop
Jh: |
    n J.name=>1,J.name
    
j: |
    my $J = ar.J ||= G.eoin ||= Rw Jto - sea;
    my ($t) = @{delete ar.m};
    say "Look for $t in J.name";
    return if $t eq 'qq';
    
    #u somewhereei
    
    my ($s) = Jn('','',{W=>$t});
    return s.sc.J||die "no sc J".wdump 3,[$t,$s];
    
    
somewherei: |
    u jbz
    n fgeijji dsfji
    n jidj jfiewji
    
jbz: |
    u mody=>=>so
qq: |
    # getting run t
    # qode qompiler
    # does each thing input... has out that joins up
    # J (above)  # does u thing
    #   J qq     # gets W/thing as inbryo or stored G.oin Wemotables
    #   ^        # settles (Jbove wants out, to do n)
    #   output G compressions (+/- laws)
    # J eats   " "
    
    
    #

