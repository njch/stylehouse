
Sl: |
    #n JSlines =>W=>{s=>$J}
    #u alljs
    y.at.jslines = 1;
    y.at.oWl = 1;
    n reJSlines
    J.V = 1;
    
    n bawls =>3=><<'','%js'
        var v = $('#msgs');
        a.m("SOmething clea r "+v);
    
    n Details
    
    my $n = J.fsjoi++;
    $n && 1;
    $n || Rw loopby $b=0.6 $d=13 $p=Top;
EYZ: |
    u ReoCur
    u curv =>pi=><<''
        zoom 0  0.6
        y    0  0
        x    0  0
        curve 0 0.04
    
    Mn(shedful => '', {pi=>'eye',s=>'eye/Tarf'});
    n TeCurve =>$J
Details: |
    u ReoCur
    J.fkeo ||= 7;
    A.us&C ? A.us&S ? J.fkeo++ : J.fkeo-- : saybl "Nop";
    for (A.us&C) {
        sayyl "Goots: ".wdump $_;
    }
    y.at.ux = 1;
    my $n = J.sdjfsiji ||= int rand 9;
    n b320 => '3-5x'.$n, join'',(J.fkeo) x 3
Wight: |
    n Funstuff
    n JScomp
    n JSea
    # could ahh...
    
    n JSlines =>$J
    
    my $n = J.fsjoi++;
    $n || Rw loopby $b=0.2 $d=17 $p=Top;
Sight: |
    n stylehut
    # could ahh...
    n JSlines =>W=>{s=>$J}
    
reJSlines: | # could spiral intuit re$W to just this - A coney islands
    y.at.ressur = 'JSlines';
JSlines: |
    y.at.jslines = 1;
    y.ope = 1;
    n $C
