
Sl: |
    #n JSlines =>W=>{s=>$J}
    #u alljs
    y.at.jslines = 1;
    y.at.oWl = 1;
    #n reJSlines
    
    n bawls =>3=><<'','%js'
        var v = $('#msgs');
        a.m("SOmething clea r "+v);
    
    n Details
    
    my $n = J.fsjoi++;
    $n && 1;
    $n || Rw loopby $b=0.6 $d=13 $p=Top;
EYZ: |
    u ReoCur
    u curv =>pi=><<''
        zoom 0  0.6
        y    0  0
        x    0  0
        curve 0 0.04
    
    Mn(shedful => '', {pi=>'eye',s=>'eye/Tarf'});
    n TeCurve =>$J
Details: |
    u ReoCur
    J.fkeo ||= 7;
    A.us&C ? A.us&S ? J.fkeo++ : J.fkeo-- : saybl "Nop";
    for (A.us&C) {
        sayyl "Goots: ".wdump $_;
    }
    y.at.ux = 1;
    my $n = J.sdjfsiji = int rand 9;
    n b320 => '3-5x'.$n, join'',(J.fkeo) x 3
Wight: |
    n Funstuff
    n JScomp
    n JSea
    # could ahh...
    
    n JSlines =>$J
    
    my $n = J.fsjoi++;
    $n || Rw loopby $b=0.2 $d=17 $p=Top;
glaciup: |
    my $e = G&$k,C;
    var W = G&Win,C.c.W;
    t&3;
    
Sight: |
    my $C = {c=>{s=>G.way.glaciup}};
    #saybl C.c.s;
    #sayyl C.c.s;
    #sayyl for 1..3;
    #n stylehut
    #n styleomi
    #n stylation
    #n stylers
    J.inV = 1;
    n file=>pi=>'g/c/84'
    # could ahh...
    #n JSlines =>$J
    
alljs: |
    n 'allarejs=s'=>2,{s=><<''},{code=>'In 42'}
        C.sc.acgt = 's' if !exists C.sc.acgt;
        C.sc.js = 1;
alljse: |
    n alljs
    n 'allarejse=s'=>2,{s=><<''},{code=>'In 419'}
        return T.not = 1 for
            map { A.J.A.vse->{$_} = C.c->{$_} }
            grep {exists C.c->{$_}} qw'of nk';
        my $av = A.J.A.vse;
        C.sc.of ||= av.of||'om';
        C.sc.nk ||= av.nk||'sc';
        C.sc.gk ||= C.t;
        my $cv = C.y.cv || 1;
        $cv =~ s/^0\.//;
        C.t = C.sc.of."_".C.t."_".$cv;
ym/jscoi: |
    my $s = C.sc.js || return;
    if (C.sc.acgt) {
        C.sc.args ||= join',','A,C,G,T',grep{$_ ne '1'}C.sc.acgt;
    } 
    C.sc.args || die "no args of";
    die "wonky C.t   of ".ki $C if C.t =~ /\W/;
    C.sc.args =~ s/ /,/g;
    my $poing = qr/\w+(?:\.\w+)?/;
    C.c.s =~ s/^t\&([^\s;]+)(;)?/!G\&t,$1 and return;/gm;
    C.c.s =~ s/($poing)\&(\$)?(\w+)(,[^\s;]+)?(;)?/
        my $t = $2 ? "$3" : "'$3'";
        my $h = $1 eq 'G' ? ".h(A,C,G,T,$t" : "\[$t\](A,C,G,T";
        $1.$h."$4)$5"
    /smge;
    C.c.s =~ s/^(.+) \|\|\= (.+)(;)?$/if (!$1) {
        $1 = $2
    }/gm;
    C.c.s =~ s/^(.+?) and (.+)(;)?$/if ($1) {
        $2
    }/gm for 1..3;
    C.c.s = "a.".C.t." = function(".C.sc.args.") {\n".C.c.s."};\n";
    C.sc.dige = slm 12, dig C.c.s;
    delete C.c.from; # as 7, S over
    $v->{js}->{C.y.cv}->{C.t} = $C;
ym/spots: |
    v.i ||= 0;
    v.X->{C.sc.of}->{C.y.cv}->{C.t} = $C if C.sc.of; # vetc
    v.Z->{v.i} = $C;
    push @{v.z||=[]}, $v->{l}->{v.i++} = C.c.s;
    
stylehut: |
    u alljs
    
    n e =>''=><<'',{args=>'e'}
        if (!q)
            console.log("xut "+e);
        var m;
        try { m = eval(e); }
        catch (er) { a.er(e, er); }
        m
    
    n er =>''=><<'',{args=>'e,er'}
        console.log("xutbang: ", e, er);
        var ej = {er: {e: e}};
        if (er && er.message)
            ej.er.m = er.message;
        s.reply(ej);
        a.m("!"+ (ej.er.m || e));
    
    n m =>''=><<'','%args:e'
        var d = e.substr(0,1);
        if (d == " ") {
          a.e(e);
        }
        else if (d == "[" || d == "{") {
          var N = $.parseJSON(e);
          console.log("gooftoes ", N);
          a.om({},N,a,{});
        }
        else {
          if (d == ".")
            e = '<span style="font-size:66%">'+e+'</span>';
          a.c(e);
        }

    n c =>''=><<'','%args:e'
        $('#msgs').prepend(e+"\n");
    
    n yl =>''=><<'',{args=>'delay,func'}
        setTimeout(func, delay);

    n ks =>''=><<'','%args:s'
        var ks = [];
        for (var k in s) {
            ks.push(k);
        }
        return ks.join(',');
    
styleomi: |
    u alljs
    
    n inC =>''=><<''
        C = s;
        C.constructor == Array and C = {t:C[0],y:C[1],c:C[2],sc:C[3]};
        else
        C.constructor == Object and $.each(C,function(k,v) { G&$k,v }); T.not = 1;
        else
        typeof C === 'string' and C = {c: {s: C}};
        typeof C.c === 'string' and C.c = {s: C.c};
        typeof C.y === 'string' and C.y = {cv: C.y};
        !typeof C.t === 'string' and console.log('queda',C);
        C.c ||= {};
        C.sc ||= {};
        return C;

    n Win =>''=><<''
        var W = ww[s];
        if (!W) {
            a.c("new W: "+s);
            W = ww[s] = {};
            W.Wid = s;
            W.A = {};
            W.A.W = W;
            //W.A.p = new paper.Project();
        }
        //W.A.p.activate();
        return W;
    
    n h =>''=><<'',{acgt=>'way,s'}
        if (!G[way])
            throw "No way: "+way
        return G[way](A,C,G,T,s);
    
    # A falls, A.on taps each-for thing, A.W holst selves, usu not
    n An =>''=><<''
        var A = $.extend({},A);
        A.I = {};
        if (!A.mo)
            A.mo = A;
        if (!T.d)
           T.d=1;
        if (s)
            var k = 'e_'+s; A.e = G[k];
        return A
    
    n sca =>''=><<''
        while (s > 1) {
            s = s / 10;
        }
        return s;
    
    n t =>''=><<''
        if (T.not)
            return 0;
        A.I.cv = G&sca,s;
        G&ex,A.I;
        return 1;
    
    n ex =>''=><<''
        s.ei ||= 0;
        while (1) {
            var v = A.e[s.ei];
            !v and return
            v[0] > s.cv and return
            s.ei++;
            $.each(v[1],function(i,D){
                var t = D[0];
                var sc = D[1];
                sc.nk and !C[sc.nk] and return
                sc.gk and !C[sc.nk][sc.gk] and return
                var es;
                sc.gk and es = C[sc.nk][sc.gk];
                //console.log(" For "+C.t+" "+C.y,'      ', v[0]+"<"+s.cv,'      ',t,sc);
                G&$t,es;
            });
        }
    
    n uprun =>''=><<'',{acgt=>'s'}
        var K = s[0];
        var e = s[1];
        var k = 'e_'+K;
        G[k] = e;
    
    # for the webclient channels
    # top level mirage is o(ww,Wid,$s)  which ins ww (G.Wid,Oth), Wid (you)
    n om =>''=><<''
        A = G&An,'om';
        C = G&inC,C;
        t&2;
        T.alk = 'w'+T.d+' '+C.t+' '+a.ks(C.c)+'%'+a.ks(C.sc);
        .
        C.sc ||= {};
        C.sc.css ||= {};
        C.sc.anc ||= {};
        .
        t&7;
stylation: |
    u alljse
    n '','','%nk:c'
    # $(A.on).fadeOut(delay, function() { $(this).remove(); });
    
    n W =>28=><<''
        A.on = $('#'+C.c.W);
        $(A.on).length and a.c("no W on "+C.c.W);
        .
        var W = G&Win,C.c.W;
        $.extend(A,W.A);
    
    n nobody =>31=><<''
        A.on = $('#'+C.c.nobody);
        !$(A.on).length and a.c("no nobody at "+C.c.nobody);
    
    # whole time... (make whote, A.t&4 ex inness..
    n el =>3=><<''
        if (!C.sc.attr)
            C.sc.attr = {};
        var last;
        a.c("stitcho "+C.t+"   "+C.y.cv+"   OOOOOO "+C.c.el);
        var t = C.t.replace(/\W/g,'e');
        t.length < 4 and t = 'n'+t+'n';
        var el = G&f,t;
        s == '1' || s == '9' and $(el).remove;
        s == '8' and return A.on.aft = el;
        !el and console.log("Cno find "+C.t+"  of "+C.y.cv);
        if (C.c.id) { 
            C.sc.attr.id = C.c.id;
            var aid = $(A.on).attr('id');
            if (aid && C.c.id) { 
                var to = '#'+aid+' #'+C.c.id;
                var ex = $(to);
                if (ex.length) {
                    a.m('rm '+ex.prop('tagName')+' '+to);
                    if (ex.prop('tagName') === 'undefined')
                       a.m('?');
                    $(ex).remove();
                }else{
                    console.log("blank rm untd "+C.t,A.C);
                }
            }
        }
        C.sc.attr.cv = C.y.cv;
        var div = $("<"+t+">", C.sc.attr);
        $(div).appendTo(A.on).each(function(i,v){el=v});
        if (C.c.s)
            $(el).html(C.c.s);
        A.on = el;
   
    u alljs
    n f =>''=><<''
        var t;
        s and t=s
        var at;
        C.y.cv and at += 'cv='+C.y.cv
        return $(A.on).find(s+'['+at+']');
stylers: |
    n stylext
    u alljse
    
    n geo =>5=><<''
        s = s.split(' ');
        var aung = s[0].match('^a(\\d+)');
        if (aung) {
            s.shift();
            aung.shift();
            C.sc.ab = aung.shift();
            //absolu
        }
        s = {x:s[0],y:s[1],rad:s[2],scale:s[3]};
        C.sc.css.top = (s.y * 100)+'%';
        C.sc.css.left = (s.x * 100)+'%';
        C.sc.css['transform-origin'] = '0% 0%';
        C.sc.css['transform'] = 'rotate('+s.rad+'rad)';
        if (s.scale)
            C.sc.css['transform'] += ' scale('+s.scale+')';
    
    n ab =>51=><<''
        if (s === '100') {
            C.sc.css.width = '100%';
            C.sc.css.height = '100%';
        }
        C.sc.css.position = 'absolute';
    
    n z =>6=><<''
        $.each(s, function(i,v) {
            //a.yl(1, function () { 
            G.om(A,v,G,{d:T.d+1});
            //});
        });
    
    n css =>59=><<''
        $.each(s, function(i,v) { $(A.on).css(i, v); });
    
    n anc =>59=><<''
        $(A.on).animate(C.sc.anc, (C.sc.ant||900));
    
stylext: |
    u alljse
    
    n cod =>59=><<''
        G&cod,s;
    
    u alljs
    n cod =>''=><<'','%args:s'
        var def = {mode:'perl',theme:'midnight',lineWrapping:true};
        var set = $.extend(def, s);
        var id = set['id'];
        delete set['id'];
        var cm = CodeMirror(document.getElementById(id), set);
        .
        cm.ididid = id;
        cm.setOption('extraKeys', {Esc:function(){a.codsav(cm)}});
        .
        cm.on('focus',function(){clof();keof();});
        cm.on('blur',function(){clon();keon();a.codsav(cm)});
        .
        $('#'+id).css('width','50%','max-height','70%','overflow','scroll');
        $('#'+id+' > .CodeMirror');//.css('height','auto');
    
    n codsav =>''=><<'','%args:s'
        var we = $('#'+s.ididid);
        a.m('AAAAAAAAAAA');
        var d = {};
        a.entag(d, we);
        d.code = cm.getValue();
        d.dig = we.attr('dig');
        a.ethro(d, ws);
        console.log(d);
reJSlines: | # could spiral intuit re$W to just this - A coney islands
    y.at.ressur = 'JSlines';
JSlines: |
    y.at.jslines = 1;
    y.ope = 1;
    n $C
EmJSlines: |
    my $N = [@{em.lines||die"Nop"}];
    @$N = Rw humms $J $N wongui _;
    @$N = sort { a.t cmp b.t }
    Rw humms $J $N notnotjs _;
    
    my $S = Rw humms $J $N spots;
    em.lines = [map{
        " a\.e(".sjson($_).");"
    }@{S.z}];
    push @{em.lines},
        Rw collateJS $I:S.X;
    C.c.os = 1 if !grep {/\S/} @{S.z};
    C.sc.Wc = 1;
collateJS: |
    my @sup;
    for my $K (sort keys %$I) {
        my $cvs = $I->{$K};
        my @cvs = ();
        for my $cv (sort keys %$cvs) {
            my $ts = $cvs->{$cv};
            my @ts;
            for my $t (sort keys %$ts) {
                my $D = $ts->{$t};
                my $s = {%{D.sc}};
                die "collajsee s.args" if s.args ne 'A,C,G,T,s';
                delete $s->{$_} for qw'of acgt args dige lines js';
                push @ts, [$t,$s];
            }
            push @cvs, [$cv, \@ts];
        }
        push @sup, sjson({uprun=>[$K,\@cvs]});
    }
    @sup

