Ds:
  - K: InjC #c
    D: |
        my ($g, $In) = @_;
        while (my ($s, $etc) = each %$In) {
            while (my ($K, $win) = each %$etc) {
                my $C = $g->CsK({K=>$K, s=>$s});
                wish(C=>$C) || die "Wa".wdump[$K, $win, $C, $g];
                $C->from($win);
            }
        }
  - K: D_to_style #c
    D: |
      my ($D, $bb) = @_;
            my $i = 0.001;
            my @cs;
            my $up = sub {
                $bb->{"D.K $i"} = join "\n", @cs if @cs;
                @cs = ();
            };
            for my $l (split "\n", D.D) {
                if ($l =~ /^\s*# (\d\S*)/) {
                    my $ni = $1;
                    $up->();
                    $i = $ni;
                }
                push @cs, $l;
            }
            $up->();
  - K: vimcolor #c
    D: |
      my $string = shift;
      my $h = $H->dig($string);
      my $k = "vimcolor-$h";
      H.r.gest->($k, sub {
          use Text::VimColor;
          my $syntax = Text::VimColor->new(
              string => $string,
              filetype => 'perl',
          );
          return $syntax->html;
      });

