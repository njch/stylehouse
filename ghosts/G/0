
name: Ghost

hooks:

  _load_ways_post: | # G/0 manages some other G's way startup ripples
    G.recoded_cbs||=[]; #1
    
    $S->w("load_ways_post");
    
    $G->Flab("$S->{name} +$S->{load_ways_count}+   ".
        join" , ", map { $_->{_wayfile} } @$w);
    
    $_ && $S->wayray($_) for $S->anyway('C');
    
    if (S.load_ways_count == 1) {
        w _init/fresh;
    }
    else {
        w _init/recoded;
    }
      
    $S->w("any_init");
    
  _init:
    recoded: |
        
        w _init/recoded_Cways[$S] if $S->anyway('recoded_Cways');
        
        $S->w("recoded_init");
        
        w _init/recoded_care_parents[$S];
        
    recoded_Cways: | # TODO reinject
      for my $i (map {_.i} $S->scGre()) {
          my $up = $S->CsK({K=>i.K});
          $i->from($up);
      }
        
    fresh: |
      w _init/keys[$S];
      
      w _init/GG[$S];
      
      S.R ||= $S->R; # or R: perc somewhere here
      
      $S->w("fresh_init");

    keys: | # TODO goner
      return unless $S->findway("keys");
      if (my $keys = G:keys) {
          push @{keys.subs}, $S unless
            grep {$_ eq $S} @{keys.subs};
      }
      else {
          sayre "G L Waiting for G keys";
          $G->timer(0.5 => sub { w keyub[$S]; });
      } 
  _gitdission: |
    my $ghosts = H.h ? H.G.GGs : $H->data->{Ghost};
    my @rG;
    for my $S (@$ghosts) {
        my $in = [grep{$Gd->{$_}} @{S.wayfiles}];
        next unless @$in;
        push @rG, $S;
        # sort stream to avoid small before big?
        waylay recode_ways[$S, $in];
    }
    for my $cb (@{G.recoded_cbs}) {
        $G->timer(0.1, sub { $cb->($Gd) });
    }
    say " Recoding: ".join"\t\t", map { $_->pi } @rG;
  recode_ways: |
    sayyl "recoding S.id S.name";
    eval {
        $S->load_ways(split /\+/, S.way); # TODO all ways on any recoded or..?
    };
    if ($@) {
        Err "Load ways fuckup: $@";
        return $@ = "";
    }
    say "S.name !  ! ! ! S.id recoded  S.way, intersects git diffage at:";
    say " - $_" for @$in; 
        
        

  zl: |
    say "Wanting to reload $name" for 1..5;

