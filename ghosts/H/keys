






name: kasplat
tractors:
  - K: 'key'
    max_populi: 10
    arr_if: |
      $e
    B_: |
      $e
    first_time: |
      $S->{B}->{key} ||= $e->{k};
      $S->{B}->{key} ||= "â²®";
      $S->{B}->{key} = lc($S->{B}->{key}) if !$e->{S};
      $S->{hitime} = hitime();
    print: |
      my $and = "";
      for (qw{S C A M}) {
          $and .= "$_+" if $e->{$_} 
      }
      $and = "" if $and eq "S+" && !$key;
      "key: $and$key ".(hitime()-$S->{hitime})
hooks:
  first_init: |
    $H->JS("\$(window).on('keydown', keyhand);");
  any_init: |
    $H->JS("handelay = 5;"); 
    $H->JS("\$(window).on('keydown', keyhand);"); 
  arr: |
    my $e = $event;
    my $S = Arr[$e];

    my $k = 
    $S->{B}->{key};
    #L ^ here's _, 
    
    say join($k, (" ")x28) for 1..4;
    
    my $t = $G->{trig};
    if ($t->{$k}) {
        Info "keytrig: $k", $S;
        $G->_0(sing => { 
            name => "keytrig $k",
            block_for => 0.2,
            code => sub {
                $t->{$k}->($S);
            },
        });
    }
    $G->timer(0.01, sub  {
        Info "keypress $k", $S;
    },"prop keypress Info");
    
  event: |
    #w throwlog(Event => $e);
    if (eval { $ar->{e}->[1]->{C} }) {
        my $id = $ar->{e}->[1]->{id};
        $H->JS("\$('#$id').empty();");
    }
    if (eval { $ar->{e}->[1]->{S} }) {
        my $id = $ar->{e}->[1]->{id};
        $H->JS("\$('#mess').toggleClass('inface');");
    }
    

