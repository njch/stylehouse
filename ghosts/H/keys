






name: kasplat
include: W/tractor
tractors:
  - K: 'Key'
    #B: $e $key
    max_populi: 10
    Gw: 1
    
hooks:
  Key:
    arr_if: |
      $e
    first_time: | #c
      S.B.key ||= e.k;
      S.B.key ||= "?â²®?";
      S.B.key = lc(S.B.key) if !e.S;
      S.hitime = hitime();
      
      my $k = S.B.key;
      #L ^ here's _, 

      say join($k, (" ")x28) for 1..4;

      0->sing(
          "keytrig $k" => sub {
              w $S keydosubs;
          },
          begin => 0.00000000001,
          block => 0.2,
      );
      $G->timer(0.01, sub  {
          Info "keypress $k", $S;
      },"prop keypress Info");
    print: | #c
      return "??? ?" unless $key;
      my $and = "";
      $and .= "$_+" for grep { $e->{$_} } qw{S C A M};
      $and.$key
    keydosubs: | #c
      my $full = w $S print;
      Say "Doing $full ... or $key .... ".@{G.subs};
      for my $g (@{ G.subs }) {
          my $kh = $g->findway("key");
          say "keying g.name : $key, could be ".ki($kh);
          if ($kh->{$full}) {
              $g->w("key/$full", {Key => $S})
          }
          else {
              $g->w("key/$key", {Key => $S});
          }
      }
  event: |
    #w throwlog(Event => $e);
    if (eval { $ar->{e}->[1]->{C} }) {
        my $id = $ar->{e}->[1]->{id};
        $H->JS("\$('#$id').empty();");
    }
    if (eval { $ar->{e}->[1]->{S} }) {
        my $id = $ar->{e}->[1]->{id};
        $H->JS("\$('#mess').toggleClass('inface');");
    }
    
  fresh_init: |
    $H->JS("\$(window).on('keydown', keyhand);");
    G.subs = [];    
  any_init: |
    $H->JS("handelay = 5;"); 
    $H->JS("\$(window).on('keydown', keyhand);"); 

