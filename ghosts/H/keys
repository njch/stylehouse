






name: kasplat
include: W/tractor
tractors:
  - K: 'Key'
    max_populi: 10
    arr_if: |
      $e
    first_time: |
      S.B.key ||= e.k;
      S.B.key ||= "â²®";
      S.B.key = lc(S.B.key) if !e.S;
      S.hitime = hitime();
      
      my $k = S.B.key;
      #L ^ here's _, 

      say join($k, (" ")x28) for 1..4;

      $G->_0(sing => { 
          name => "keytrig $k",
          block_for => 0.2,
          begin_after => 0.0000000000000001,
          code => sub {
              w trigger[$S];
          },
      });
      $G->timer(0.01, sub  {
          Info "keypress $k", $S;
      },"prop keypress Info");
    print: |
      my $k = S.B.k;
      return "??? ?" unless $k;
      my $and = "";
      for (qw{S C A M}) {
          $and .= "$_+" if $e->{$_} 
      }
      $and = "" if $and eq "S+" && !$k;
      "k: $and$k"
hooks:
  first_init: |
    $H->JS("\$(window).on('keydown', keyhand);");
  any_init: |
    $H->JS("handelay = 5;"); 
    $H->JS("\$(window).on('keydown', keyhand);"); 
  trigger: |
    my $k = $S->{B}->{key};
    for my $g ($H->Gf('L')) {
        $G->timer(0.000001, sub {
            my $ago = hitime() - $S->{hitime};
            $G->Flab("keys ($k) arr..trig time taken: $ago");
            $g->w("key/$k", {Key => $S});
        }, "HITKEY!");
    }
    
  event: |
    #w throwlog(Event => $e);
    if (eval { $ar->{e}->[1]->{C} }) {
        my $id = $ar->{e}->[1]->{id};
        $H->JS("\$('#$id').empty();");
    }
    if (eval { $ar->{e}->[1]->{S} }) {
        my $id = $ar->{e}->[1]->{id};
        $H->JS("\$('#mess').toggleClass('inface');");
    }
    

