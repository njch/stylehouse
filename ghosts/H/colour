
name: H colour
tractors:
  - K: 'H/colour'
    arr_if: |
      $name || die;
    B_: |
      $name
    print: |
      $S->{K} .": ". $S->{B}->{_}
    first_time: |
      $S->{B}->{personalities} ||= [
          sub { int rand 123 },
          sub { int rand 255 },
          sub { 100 + int rand 155 },
          sub { int rand 88 },
      ];
      w $S set_background if $ar->{set_css_background};
    set_background: |
      my $colour = w $S wtc;
      if ($ar->{t}) {
          $H->JS("\$('$set_css_background').animate({backgroundColor: '$colour'}, $ar->{t});");
      }
      else {
            $H->JS("\$('$set_css_background').css('background', '$colour');");
      }
    change_person: |
      push @$personalities, shift @$personalities;
    randomcolour: |
      if ($ar->{e} && $ar->{e}->{C}) {
          w $S change_person;
      }
      my ($as) = @$personalities;
      my ($rgb) = join", ", map {$as->()} 1 .. 3;
      return $S->{B}->{colour} = "rgb($rgb)";
    change_colour: |
      $S->{B}->{colour} = $ar->{c} || w $S randomcolour;
    change: |
      w $S change_colour;
      $H->info("H/colour /$name t=$ar->{t} c=$colour") if $ar->{t} > 666;
      w $S set_background;
    wtc: |
      $S->{B}->{colour} ||=  w $S randomcolour;
hooks:
  any_init: |
    $G->{db} = 1;
  have: |
    my $S = Arr[(%$ar)];
  arr: |
    my $S = Arr[(%$ar)];
  change: |
    my $S = Afind[$name];
    w $S change(%$ar);
  randomcolour: |
    my $S = Afind[$name];
    return w $S randomcolour(%$ar);
  change_person: |
    my $S = Afind[$name];
    return w $S change_person;

