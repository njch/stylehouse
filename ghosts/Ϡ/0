name: Ï 
etc: intoraction... magnetic fishing rod, guy playing guitar cave art


C:
  - K: GG
  - K: nothing
hooks:
  Arr: |
    my ($what) = keys %$ar;
    my $u = 0->TafuB($what => $ar);
    G.GG.Be->w(ion => {u=>$u});
  fresh_init: |
    $H->JS("\$('#ground').remove();");
    $H->JS("\$('#sky').css('overflow', 'hidden');");
    
    # if top
    my $style = join ";", qw{  
        position:absolute color:#3bc
        width:100% height:100% font-size:10pt pointer-events:none
    };
    $H->JS(qq{\$('#sky').append('<div id="ux" style="$style"></div>');});
    
    # if not top, contact top and get wired on any Elvi up there
    
    w scribe_js;
    
    G.GI = sub {
        my ($K, $gg) = @_;
        my $g = G!$gg;
        g.K = $K;
        G.GG->{g.K} = $g;
    };
    Say "Busking H.style";
    $G->w("busk/H.style");
    
    waylay percolations;
  busk:
    styleshed: |
      G.GI->(ool => 'C/ool'); 
      G.GI->(L => 'L/0');
      G.GI->(0 => '0');
      
      #G.GI->(ood => 'C/odon');
      #G.GI->(Eh => 'E/h');
      
  aj: |
    j._ && Say "unified field!";
    $_->() for reverse @{j.s};
    # after U - direct to tape instead of catching JS in H
    
  scribe_js: |
    $G->timer(0.3, sub { w scribe_js; });
    
    my $new = G.js || [];
    return unless @$new;
    G.js = [];
    
    my $now = $H->hitime();
    G.jslast ||= $now;
    my $d = sprintf("%.3f",$now - G.jslast);
    G.jslast = $now;
    
    my $script = join"","[$d,function(){", @$new, "}],\n";
    write_file("o/o", {append=>1}, Hostinfo::encode_utf8($script));
    
  ux: |
    for my $GG (@{G.GGs}) { # could ar into GG=$K orso
        next if GG.K =~ /L|ux|ool/;
        
        sayre "RWRWRWRW GG.name";
        for my $ux ($GG->Gf("T/ux")) {
            0->RW($ux);
        }
        0->RW($GG);
        $GG->w('percolate');
    }
    w wux;
    saybl "ux ".$G->F_delta();
  percolations: |
    for my $GG (@{G.GGs}) { # could ar into GG=$K orso
        Say "to perc GG.name";
        $GG->w('percolate');
    }
  wux: |
    for my $GG (@{G.GGs}) { # could ar into GG=$K orso
        $GG->w('uxd');
    }
    

