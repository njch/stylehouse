name: Ϡ
etc: intoraction... magnetic fishing rod, guy playing guitar cave art
GG:
 - K: C/ool #c something
   
C:
  - K: GG
  - K: nothing
hooks:
  V:
    ux:
      styles: cardboard ux
  styles:
    cardboard: |
      qw'position:absolute color:#3bc', 'border:2px solid #003'
      
    ux: |
      qw'width:100% height:100% top:10% left:10% font-size:10pt opacity:1 pointer-events:none'
  Arr: |
    my ($what) = keys %$ar;
    my $u = 0->TafuB($what => $ar);
    die sw([Ϡwhatnow => $u]);
  keys:
    n: |
      G:Ϡ ->_0('V/blur');
    N: |
      Say "TOGIN";
      G:Ϡ ->_0('V/toginvis');
  sync: |

    # C did    G.ux = $GG;
    # ux did    G._Ss = GG.ux_Ss if GG.ux_Ss;
  fresh_init: |
    my $GGs = $G->anyway('GG');
    for my $GG (@$GGs) {
        my $way = GG.way || GG.K;
        my $g = G!$way || die "no $way? GG sync = GG.K";
        g.K = GG.K;
        my $uG = 0->TafuB(GG => {GG=>$g});
        return uG.B.GG;
    }
  any_child_recoded_init: |
    w wux;
  recoded_init: |
    w wux;
  ux: |
    my $GG = G.pG || die "not pGd!?";
    my $ux = GG.ux;
    sayre "RWRWRWRW GG.name" for 1..5;
    $GG->RW;
    $ux->RW;
    w sync[$GG, $ux];
    $GG->w('percolate');
    w wux;
    saybl "ux ".$G->F_delta();
  wux: |
    my $GG = G.pG || die "not pGd!?";
    $GG->w('uxd');

