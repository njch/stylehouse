name: Ϡ
etc: intoraction...
tractors:
  - K: 'Ϡt'
    max_populi: 2
    arr_if: |
      $name && $name ne "0" && $name ne "1" || die;
    B_: |
      $name
    print: |
      $S->{K} .": ". $S->{B}->{_}
hooks:
  fresh_init: |
    $G->Gc("T/crawl", "T/ravel");
    $G->Gc("T/yle", "T/ravel");
    $G->Gc("T/uxt", "T/erse");
    
    my $style = join "", map { /;$/ ? $_ : "$_;" } qw{
        position:absolute overflow:hidden
          top:20em left:10em background:#765
          -webkit-transform:scale(0.7,0.7)
    };
    my $Vf = $G->{floozal} || $H->{sky};
    $G->{View} = $Vf->spawn_floozy($G, "Ϡ", $style."left: 40em;");
    $G->{View2} = $Vf->spawn_floozy($G, "Ϡ2", $style);
    $G->{View3} = $Vf->spawn_floozy($G, "Ϡ3", $style."left: 55em;");
  arr: |
    my ($name, $thing) = %$ar;
    my $S = Arr[$name, $thing];
    
    start_timer();
    my @order = (
      G crawl
      G yle
      G uxt
    );
    my $UP;
    my @time;
    G crawl ->{max_depth} = 1;
    for my $g (@order) {
        my $what = $UP ? $UP->W : $thing;
        $g->RW;
        $g->T($what);
        $UP = $g;
        push @time, $g->desize()." ".show_delta();
    }
    Say @time;
    
    $H->Gf("T/splat") Tw Splat(ttt   => G(crawl)->W, view => $G->{View} );
    $H->Gf("T/splat") Tw Splat(swamp => G(yle)->W,   view => $G->{View2});
    $H->Gf("T/splat") Tw Splat(wogga => G(uxt)->W,   view => $G->{View3});
    
    my @W;
    my $W = G(yle)->W;
    for my $L (@{ $W->{script} }) {
        push @W, '!html '.ghostlyprinty($L->{t});
        next unless $L->{i}->{K} eq "Line";
    }
    
    
    
    
    
    
    
    
    
    
    
    #my $nt = $G->{View2}->newtext([@W,"yababbalj","UTJHSGF"]);
    #$O->w("somewhere", {thing => $nt});
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    #
  

