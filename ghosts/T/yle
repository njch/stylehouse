name: Styling
chains:
 - K: yW #c        Wormhole [ Lines
   arr_if: |
     $G->{depth} == 0 && ref $thing eq "Wormhole";
   B_: |
     $thing
   foreach_travel:
     each: @{$thing->{script}}
   print: |
     "$S->{i}"
   B:
     s:
       div: 1x
        
 - K_K: yW/Line
   arr_if: |
     ref $thing eq 'HASH' && $thing->{uuid} && exists $thing->{t}
   B:
     s:
       div: 4x1
   print: |
     "$Li->{t}->{n}"
   exude: |
     $thing
 - K_K: Line/Depth #c     D I Thing O
   arr_if: |
     exists $thing->{depth};
   exude: |
     $thing->{depth}
     
 - K_K: Line/WaysIn
   arr_if: |
     exists $thing->{i}
   exude: |
     $thing->{i}
   B:
     s:
       conty: |
         ghostlyprinty($Lo->{t});
     
 - K_K: Line/Thing
   arr_if: |
     exists $thing->{t}
   exude: |
     $thing->{t}
     
 - K_K: Line/WaysOut
   arr_if: |
     exists $thing->{o}
   exude: |
     $thing->{o}
     
 - K_K: Thing/NonRef    #c     Things
   arr_if: |
     !ref $thing
   B:
     s:
       value: |
         $Lo->{t};
       
     
 - K_K: Thing/Ref
   arr_if: |
     ref $thing
   B:
     s:
       conty: |
         ghostlyprinty($Lo->{t});
styles:
 - K_: Wormhole
dials:
  max_depth: 7
  form: 42
hooks:
  figure_some_chain: |
    return 0 unless exists $c->{B}->{s} || exists $c->{exude};
        my $oc = $c->spawn;
        if (exists $oc->{exude}) {
            $oc->{travel_this} = $G->doo($oc->{exude}, {%$ar});
            $oc->{each} = "ex ".$oc->{K};
            $oc->{print} ||= q{$S->{each}};
        }
        push @{$G->{o}}, $oc;
        return 1;

