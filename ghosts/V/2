R_Jz:
 - K: ii/time #c
   D: |
     # say # ago and js hookup increment into human
     my $rtime = sprintf '%.2f', $time - H.uptime;
     # time since H started? since the J started?
     Rw Mn + $n:_ for
     ['zetime', '', {s=>$rtime}, {co=>'33f5'}];
 - K: ii/Jhead #c J _
   D: |
       my $M = [];
       my $cv = ar.cv || 0.4;
       
       my $name = J.name;
       my ($nas, $nameb) = split '-', $name, 2;
       Mn(nas => '', "$nas",
           '{sha:3 5 2 330,fs:15}');
       Mn(nameb => '', "$nameb", 
           '{sha:3 5 2 330,co:a359,fs:9}');
       
       if (H.name ne 'C') {
           Mn(Hname => '', "H.name", 
               '{sha:3 5 2 330,co:ff59,fs:12,ab:1,ml:0.3em}');
       }
       
       my $xc = {pwth=>'hull/mk:X'};
       my $xsc = {co=>'f34',fs=>'13'};
       if ($cv < 0.3) {
           xsc.fs = 14;
           xsc.ab = 1;
           xsc.left = '0.3em';
           xsc.zi = 44;
       }
       Mn(x => '', $xc, $xsc);
       
       # TODO collapse upwards button
       
       #Rw Mn $J $n;
       # TODO wtf that onto $M overwrites others
       #Rw wtf $M ITsa 0.03 $s $sc;
       if ($cv > 0.3) {
           Rw the + $M Jhead; 
           Rw the + $M Jim;
           Rw doc $M;
       }
       my $at = ar.out || 0.001;
       my $sc;
       sc.fs = $cv > 0.2 ? 19 : 9;
       Rw om/lev + $oM:M Jhead $at $sc;
 - K: sur/geon #c J into
   D: |
     Rw surf $name=mash $i:J;
 - K: sur/Jhead #c
   D: |
       MZ pwth
       ඬ  sur/geon      {} {co:f85}
       ƾ  jin:oot       {} {co:8ff}
       G  sur/to:G
       Js sur/to:Jung {} {co:68d,fs:5}

