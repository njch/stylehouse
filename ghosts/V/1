R_Jz:

 - K: ou/dire #c # LOOK FOR KNOWNS, scoped in wormhole
   D: |
     die 'ref' if ref $u;
     -d $u || die "not found: $u pwd=".`pwd`;
     my @ma = map{chomp;$_}`ls -1 $u`;
     sayyl @ma;
     sayre "GLOB $u/* GOT: ".@ma;
     for my $f (@ma) {
         $H->fixutf8($f);
         my $s = $f;
         $s =~ s/^$u\///;
         my $r = {r=>$s,s=>$s};
         # light pat, or emblem to fly through
         r.c.path = "!pat/dire:/r.r";
         r.c.pi = 'dire';
         r.c.file = $f;
         push @{o.r}, $r;
         if (@{o.r} >= $thi) {
             o.more = @ma - @{o.r};
             last;
         }
     }
 - K: ou/image #c
   D: |
     -f $u || die 'not file';
     
     my $j = x.j;
     #Rw cruxal $x lala wagga;
     my $r;
     r.r = $u;
     r.s = $u;
     r.c.path = "!nowhere";
     r.c.pi = 'image';
     r.c.file = $u;
     push @{o.r}, $r;
 - K: pat/dire #c pat a physical, in a directory
   D: |
     my $ex = join ' ', @$m;
     my $ul = J.onei.i.$ex;
     if (-d $ul) {
         J.onei.i = $ul
     }
     elsif (-f $ul) {
         w demux[$J];
         my $J = Rw jin mash;
         # & over there
         Rw ein/image $J $i:ul;
     }
     else{ die "no see $ul" }
 - K: pi/dire #c
   D: |
     my $x = J.d.g.x;
     my $dir = x.j.s;
     
     my $sc = {};
     my $file = "$dir/$u";
     if (-d $file) {
         Rw Mn + $n:_ for
         ['dir', 0.2, {s=>'/'}, {co=>'22f4',fs=>23,ab=>1,left=>'-0.56em'}];
         
         if (J.fop->()) {
             Rw pi/direst $J $dir:file;
         }
     }
     elsif (-f $file && J.cv >= 0.3) {
         my $sc;
         sc.opa = 0.5;
         
         my $sp = x.imspin++;
         x.imspin = 0 if $sp > 3;
         sc.left = (($sp * 5)-4).'em';
         sc.top = '-5em';
         sc.rad = 0.4;
         sc.sat = 5;
             
         Rw pi/thumbnail $file $J $sc;
     }
     else {
         Rw wtf wtf 1 $J;
     }
     
     # if J.d.c.n ? notes and stuff
     
     
     #my $emb = '𐎘' if -d $-
 - K: pi/image #c
   D: |
     my $file = $u;
     -f $file || die;
     my $sc;
     sc.width = "44em";
     sc.height = "27em";
     sc.hue = 36;
     sc.con = 6;
     sc.left = "0em";
     J.d.sc.mw = "20em";
     #die wdump 2, $J;
     Rw pi/thumbnail $file $J $sc;
 - K: pi/thumbnail #c image/video
   D: |
     my $size = -s $file;
     return unless $file =~ /jpe?g$/i;
     my $mou = "public/";
     #return if $size > 3_000_000;
     my ($first) = split '/', $file;
     die "$first not $mou?" unless -e "$mou$first";
     
     my $thl = "th/$file";
     my $th = "$mou$thl";
     
     # TODO mod slowness
     # make this thumbnail J even more forky than usual
     # TODO wander 90deg radial over phatness...
     # tape twist effect coming from somewhere
     
     if (!-f $th && J.fop->()) {
         sayyl " thumbnail++$file";
         my $thd = $1 if $th =~ /^(.+)\/(.+)$/ || die $th;
         if (!-d $thd) {
             run 'mkdir', '-p', $thd;
         }
         if ($file =~ /(mov|avi|mp4)$/i) {
             run 'ffmpegthumbnailer -s 420 -t 20% -i '.$file.' -o '.$th
         }
         else {
             run 'convert', $file, '-thumbnail','500x500', $th
         }
     }
     if (-f $th) {
         my $sc = {
             tag => 'img',
             zom=>{at => {src => $thl}},
             width=>'27em',
             height=>'27em',
             ab=>1,
             zi=>2,
             %{ar.sc||{}}
         };
         my $s = "";
         Rw wtf $J yowl 3 $s $sc;
     }
     delete J.mod.sc.over;
     #J.mod.sc.bgi = $thl;

 - K: pi/direst #c shadowing fs
   D: |
     my @r = Rw globdir $dir;
     my @d = grep { -d _.full } @r;
     for my $r (@d) {
         Rw Mn + $n:_ for
         [r.r, '', {s=>$r,pi=>'dierfi'}, {co=>'33f',sha=>'3 3 5 fff', ml=>'0.5em'}];
     }
     my $ts;
     ts.d = @d;
     ts.files = @r - @d;
     Rw Mn + $n:_ for
         ['more', 0.88, {s=>$ts,pi=>'n_tal'}, {fs=>13,co=>'e9a7'}];
 - K: pi/dierfi #c
   D: |
     Rw Mn + $n:_ for
     ['name', '', {s=> u.r }, {ml=>'2em'}];
     
     if (-d u.full) {
         Rw Mn + $n:_ for
         ['symbol', '', {s=>'/'}, {sha=>'3 3 4 af8',co=>'afa'}];
     }
     
 - K: globdir #c
   D: |
     my @ma = glob("'$dir/*'");
     my @r;
     for my $f (@ma) {
         $H->fixutf8($f);
         my $r;
         r.full = $f;
         $f =~ s/^$dir\///;
         r.r = $f;
         push @r, $r;
     }
     @r;
 - K: pi/n_tal #c
   D: |
     my $i = 0;
     for my $k (sort keys %$u) {
         Rw Mn + $n:_ for
         grep {$_}
         ['count', '', {s=>$u->{$k}}, {fs=>9,co=>'39a7'}],
         ['k', '', {s=>$k}, {fs=>7,co=>'e9a7'}],
         ($i++>0 ? ['Bs', '', {s=>','}, {}] : undef);
     }

