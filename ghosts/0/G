
name: other stuff...
G:
  - K: head
    styles: bare
    D: |
      package G;
      use strict;
      use utf8;
      use base 'Ghost';
      
  - K: new
    D: |
      my ($name, $O, @ways) = @_;
      
      G.GGs = []
      G.O = $O; # TODO A
      
      $G->W || die "no Wormhole?";

      my $way = join ", ", @ways;
      G.name = "$name`($way)";
      G.way = $way;
      say "Ghost named G.name";
      
      $G->load_ways(@ways);

      push @{G.O.GGs}, $G if ref G.O =~ /^G/;
      
      return $G;
  
  - K: A
    de: tractory, making perl objects
    D: |
      my $u = bless {}, shift;
      G.A->t($u);
      $H->intro->($u);
      delete u.hostinfo;
      $u->new(@_);
      
  - K: W
    D: |
      G.W ||= $G->A('W')
hooks:
  any_init: |
    for my $nb (qw'A C G T') {
        my $co = $G->anyway($nb);
        next unless $co;
        my @code;
        for my $ch (@$co) {
            my $D = $G->parse_babble(ch.D);
            unless (ch.styles =~ /bare/) {
                $D = "my \$$nb = shift;\n$D" unless ch.styles =~ /func/;
                $D = ind('    ', $D);
                $D = "sub ch.K {\n$D\n}\n";
            }
            push @code, $D;
        }
        push @code, "'stylehouse'";
        write_file("l/${nb}.pm", join("\n", @code));
            
            
        
        
        
        
        
        
        
    }

