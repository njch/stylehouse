R_Jz:
 - K: anno/su #c
   D:
    -
     - cts_C #c
     - 3.3224
     - |
       for my $ct (@{wJ.cts.C}) {
           next unless exists d.c->{ct.t};
           my $v = d.c->{ct.t};
           my $at = {};
           wJ.ctx.C->{ct.x}->($d,d.t,$c,d.sc,$at,$v);
           for my $k (keys %$at) {
               d.cs->{"$k#".ct.x} = d.sc->{$k} = $at->{$k};
           }
       }
       
       push @{d.css}, map { '%'.$_ => d.cs->{$_} } sort keys %{d.cs};
    - MZ: dorp:ct_C
    - WZ: /modulapi
modulapi:
 -
  - pi # modulapi
  - 3.3
  - |
     ref $v && die wdump $v;
     sayyl "INPI";
     my $y = $v;
     $v = d.c.pi = Rw spinash $J;
     v.y = $y; # for joining magnetic interference localities
     v.d = $d;
     # be adjusting this:
     v.r = v.d.r;
     Rw mkJid $J:v;
     v.bz->("/\t0.9" => "y");
 -
  - pi # modulapi
  - 3.4
  - |
     v.cv = c.gp.cv || c.cv || 0.6;
     v.u = d.s;
     die'csnod' if v.d ne $d || v.d.c ne $c;
     
     Rw pir $cs:v;
 -
  - pi #
  - 3.7
  - |
     # can pin/ping light source of con paral
     v.s = Rw maka $J:v;
     d.s = v.s;
     #sayyl "itlbe: ".slim 130, d.s;
     at.pi = $v;
 -
  - pwth # -> !some/path exp. 8ery, 8ing
  - 3.1
  - |
     $v = "!$v" unless $v =~ /^\W/;
     c.path = $v;
     
 -
  - path # install cs path
  - 3.2
  - |
    at.path = $v;
    at.idly = 1 if !c.fo;
    at.tt = "$v";
 -
  - pwar # take $ar cs path
  - 3.2
  - |
    at.pwar = $v;
 -
  - id #
  - 3
  - |
    at.id = $v;
 -
  - J #
  - 3
  - |
    at.J = $v;
     
C esc:
 -
  - pi # ag
  - 3.5
  - |
     die if !v.r;
     '%gp' => $v 
 -
  - pwar #
  - 3
  - |
     '%pwar'=>$v
 -
  - path #
  - 3
  - |
     '%path'=>$v
 -
  - idly #
  - 3
  - |
     '%idly'=>$v
 -
  - id #
  - 3
  - |
     '%id'=>$v
 -
  - J #
  - 3
  - |
     '%J'=>$v

