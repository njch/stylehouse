R_Jz:
 - K: mooj/i #c
   D:
   -
    - yinvo # build wave manifold, fore loop
    - 2.3
    - |
       d.y = {thi => d.y} if !ref d.y;
       my $y = d.y;
       
       die if y.cv && y.in;
       y.in ||= 0.1; 
       y.out ||= 0.9; # up to
       y.thi ||= 1;
       y.space = y.out - y.in; # could spiral much space away from spine
       y.space *= -1 unless y.space > 0;
       y.aspace = y.space / y.thi;
       
       
       # twist, lay into segment
       my $csv = defined y.cv ? y.cv : defined y.in ? y.in : die "no yiny".ki$y;
       my $muav;
       for (1..y.thi) {
           my $iy;
           
           iy.i = $_-1;
           iy.cv = sprintf '%.6f', $csv;
           iy.pcv = sprintf '%.6f', $_ / y.thi;
           
           s/0+$/0/ for iy.cv, iy.pcv;
           push @is, $iy;
           
           my $mu = 1;
   -
    - yinvout # build wave manifold, fore loop
    - 2.7
    - |
       # some
           my $muc = y.aspace * $mu;
           $csv += $muc;
           iy.ov = sprintf '%.6f', $csv;
       }
 - K: anno/o #c
   D:
   -
    - el
    - 2
    - |
      if (my $o = d.y.o) {
         if (ref $o eq 'ARRAY') {
             $o = d.y.o = {M=>$o};
         }
         else {
             o.M ||= [$d];
             o.M = [map{
                 my $d;
                 d.t = _.t;
                 d.y = {%{_.y}};
                 d.c = {%{_.c}};
                 delete d.y.cv;
                 if (o.ou) {
                     d.c.pi = o.ou;
                     d.c.s = $_;
                 }
                 if (o.oJ) {
                      d.sc.oJ = o.oJ;
                 }
                 $d
             }@{o.M}]
         }
         d.y.bal = o.M || die"nomo";
         
         my $Jy = J.d.y;
         d.y.o.J = J.most.J if $Jy && Jy.o && Jy.aspace > 0.2;
         d.y.over = (Jy.o && Jy.over && Jy.over || 0) + 0.06 if d.y.o.J;
         d.y.in ||= $Jy ? Jy.cv + 0.03 : 0.1;
         d.y.out ||= $Jy ? Jy.ov - 0.03 : 0.9;
         d.c.lumfa = 1;
         
      }
      if (d.c.lumfa) {
         my $lum = 3;
         my $i = 0;
         for (@{d.y.bal}) {
             _.y.thy=$lum;
             $i++;
             $lum = 2 if $i == 4;
             $lum = 1 if $i == 7;
         }
      }
   -
    - yongbal
    - 2.1
    - |
       d.y.thi = @{d.y.bal} if d.y.bal;
   -
    - yang 
    - 2.7
    - |
           if (y.bal) {
               if (!defined $muav) {
                   my $s = sum map{_.y.thy} @{y.bal};
                   my $ov = @{y.bal};
                   $muav = $s/($ov||1);
                   $muav ||= 1;
               }
               my $b = y.bal->[iy.i];
               $mu = b.y.thy if exists b.y.thy;
               
               
               $mu = $mu / ($muav||1);
               
               #saybl wdump 2, $b;
               do {
               say "J.d.c.cv * y.aspace * $mu  === ". (J.d.c.cv * y.aspace * $mu);
              b.c.cv ||= J.d.c.cv * y.aspace * $mu
               } if J.d.c.cv && b.y.thy;
           }
   -
    - yangbalin # 
    - 3.21
    - |
       my $y = d.y;
       if (d.y.bal) {
           # locality
           my $b = d.y.bal->[d.y.i];
           say "G.jumb.yos BAL d.y.i at d.cv    --- d.y.uyiv   ".ki 1, $b if J.V;
           # mergins... maybe theres a weird lma in b saying replaceall or so
           # anything could be alive
           for my $k (keys %$b) { # c etc merg in per row
               my $v = $b->{$k};
               if (ref $v) {
                   $d->{$k} = {%{$d->{$k}||{}}, %$v};
               }
               else {
                   $d->{$k} = $v;
               }
           }
       }
       d.r = join "\t", d.t, (d.cv+0);
       d.y.spc = d.y.ov - d.y.cv;
       d.y->{$_} = 0+sprintf('%.6f',d.y->{$_}) for qw'cv ov aspace spc';
       
       if (d.c.lumfa) {
           my $spc = d.y.spc;
           my $upt = 0.9 / @{d.y.bal};
           $spc = $upt if $spc < $upt;
           my $fl = ($spc / 0.02) * 4;
           sayyl "d.t   d.y.ov - d.y.cv  ::: $spc d.y.aspace \t\t $fl";
           d.sc.fs = $fl if $fl < 9;
           d.sc.tt="d.t at d.y.cv for d.y.spc";
       }
       if (d.y.over) {
           d.sc.ml = (d.y.over * 40)."%"; 
       }

