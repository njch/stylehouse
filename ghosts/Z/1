R_Jz:
 - K: zoy #c boat for catching/tlv looking the fishes
   n_D:
     yJup: |
       qw'zoy oci'
     curves: |
       spun 0  2
       y    0  0
       x    0  0.02
       zoom 0.1 0.5
       curve 0.1 -0.4
     up: |
       Rw Jhead;
       Jn('shelf', 0.1, {pi=>'shelfo'}, {bo=>'3px solid 8df'});
       
       G.oin = Rw zoybracken $afterid:u.at.id;
 - K: pi/shelfo #c mhmm
   D: |
     say "Hello";
     Jn('yop', 0.8, 'top');
 - K: zoybracken #c
   D: |
     sayyl "HI";
     my $J = Rw JJ $name=join;
     Jn('/', 0.9, {},
     "{tag:ww,bo:3em solid df3,height:3em,width:2em,idly:1}");
     Jn(FELA => 0.3, 'wakkas wakka');
     
     Rw tent $J geo;
     Rw the $J curves $oJ:J.geo;
       # V
       Rw geolo $J;
     Rw phairo $J;
     
     Rw outhere $J;
     
     
     my $h = Rw maka $J;
     my $s = " \$('#$afterid').after(".ejson($h).");";
     #my $sc = 
     # eat bees
     say $s;
     $H->JS($s);
     $J
 - K: join/yJup #c
   D: |
     'clingleftwall'
 - K: clingleftwall/curves #c
   D: |
       spun 0  2
       y    0  0.4
       x    0  0.02
Juping: |
  # anything in j.t should be fine
  # parse j.r in one regex, tightened at the right (cv) end
  # First need a top level J for holding all the others while they are alive, 8ing
  # 
Jo: # fills the rhymth dispatcher J
 -
  - oyo
  - ''
  - curves: clingleftwall # sets x+y like zoy
  - comb: # ambient rhythm to dispatch up (passive), pha con still
Then: |
   the J.d.c ^ suJways:
     - curves hooks up, but we have the compression living in the J for reinit
    # somewhere to:
      find the W M V I top level index of things...
      unfold from there
      tinier Jhead
     intersplice maka replacement

