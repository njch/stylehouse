C may:
 -
  - args
  - 5
  - |
    # elswhere
 - # ompu
  - jsc
  - 5
  - |
    my $args = d.cs.args || 'A,C,G,T';
    if (0) {
        at.tag =  'script';
        at.type ||= 'text/javascript';
        at.src = d.cs.src if d.cs.src;
    }
    at.c = 'e';
    # etc
    d.s =  "a.".j.l." = function (".$args.") {\n".d.s."};\n";
    #sayre "Javascript compression: j.r        ";
    #saygr "Some j.l :::: ". join' ', split /\s+/, d.s;
 - # ompu
  - js
  - 5
  - |
    at.c = 'o';
    d.s =   [J.id, 'do', d.s]; 
 - # ompu
  - ps
  - 5
  - |
    at.c = 'o'; # etc
    d.s = [J.id, 'ps', d.s];
R_Jz:
 - K: ym/cc #c
   D: |
     if (ref n.c && !ref n.sc) {
         (n.c,n.sc) = (n.sc,n.c);
     }
     n.sc->{$v} ||= 'y';
 - K: ym/jswith #c
   D: |
     #say "JSWITH: ".slim 50, n.c;
     # wants to mod Mn
 - K: scr/canvas #c
   D: 
   - MZ: cc:ps # paperscope (with (paper) {...}) spines!
   -
    - funstuff
    - 7
    - |
      project.clear(); 
      a.pzl();
      a.pso();
   - MZ: cc:jsc jswith:paper #c paper blocks
   -
    - doya # animation frame
    - 1
    - args: e
    - |
      console.log('de rock'); 
      // etc https://github.com/tweenjs/tween.js/blob/master/docs/user_guide.md
   -
    - pzl #
    - 3
    - |
      with(paper){
      var shape = new Path.RegularPolygon(new Point(180, 170),3, 100);
      
      shape.fillColor = '#8C8A00';
      shape.animate(2, paper.uplg, true)
          .translate(new Point(200,100))
          .rotate(60)
          .scale(3);
      }
   -
    - pso #
    - 4
    - |
      with(paper){
      var mousePoint = view.center;
      var amount = 30;
      var colors = ['red', 'black', 'blue', 'black'];

      for (var i = 0; i < amount; i++) {
          var rect = new Rectangle([5, 0], [25, 25]);
          rect.center = mousePoint;
          var path = new Path.Rectangle(rect, 6);
          path.fillColor = colors[i % 4];
          var scale = (1 - i / amount) * 15;
          path.scale(scale);
      }

      view.onMouseMove = function (event) {
          mousePoint = event.point;
      }

      var children = project.activeLayer.children;
      view.onFrame = function (event) {
          paper.uplg.update(event);
          
          for (var i = 1, l = children.length; i < l; i++) {
              var item = children[i];
              var delta = (mousePoint - item.position) / (i + 5);
              item.rotate((Math.sin((event.count + i) / 10)+1.617) * 3);
              if (delta.length > 0.1)
                  item.position += delta;
              item.fillColor.hue += 1;
          }
      }
      }
      
 - K: scr/comprsc #c
   D:
   - MZ: cc:jsc
   -
    - wu # ww append a thing, cancel its Wid before
    - 1
    - args: wwid, Wid, s
    - |
     $('ww#'+wwid+' > #'+Wid).fadeOut(1000, function() { $(this).remove(); });
     
     $('ww#'+wwid).append(s);
   -
    - WW # contextualise to W
    - 1
    - args: Wid
    - |
      var W = ww[Wid];
      if (!W) {
          W = ww[Wid] = {};
          W.Wid = Wid;
          
          W.A = {};
          //W.A.p = new paper.Project();
          W.A.W = W;
      }
      //W.A.p.activate();
      
      return W;
   -
     - o #
     - 1
     - args: Wid, K, C
     - |
       var W = a.WW(Wid);
       var A = W.A;
       var C = C;
       if (C.constructor == 'Array') {
           var M = C;
           C = {};
           C.t = M[0];
           C.y = M[1];
           C.c = M[2];
           C.sc = M[3];
       }
       if (typeof C == 'string') {
           var s = C;
           C = {};
           C.c = s;
       }
       var G = a; // should be receiver, W.G, auto locals + uni
       // looks in W.G, W.G.incs, a
       // passes ACGT
       var T = {};
       
       a[K](A, C, G, T);
   -
    - do
    - 3
    - |
      eval(C.c);
   -
    - ps
    - 3
    - |
      with (paper) {
          eval(C.c);
      }
   -
    - el
    - 3
    - |
       // gets (A,C,G,T)
       // should 
       // the index t, tag?
       // 
       // c thingy
       // sc styley

