name: Lyricoso writoro
hooks:
  fresh_init: |
    G TT ->G("T/splat");
    G TT ->G("T/crawl");
    G TT ->G("Ϡ");
    
    
    G TT ->G("L/follow");
    G TT ->G("L/ob");
    w set_follow;
    $G->{H} = $H;
    w getstarted;
  recoded_init: |
    w getstarted;
    
    timer 1 { w set_follow };
  any_child_recoded_init: |
    w splat_wormholes;
  set_follow: |
    G follow ->RW;
    
    my $dfs = w default_somewhere;
    G follow Tw narr[$dfs];
    my $djdj =  [ grep { $_->{name} =~ /Ϡ/ } @{ $H->data->{Ghost} } ];
    G follow T $djdj;
    G follow T G ob;
    my $flabb = sub {
        w somewhere(thing => [@Flab]);
    };
    G follow T $flabb;
    G follow T $H;
    G follow T $O;
    G follow T G(follow)->W;
    G follow T \@F;
    
    G splat Tw Splat(wing => G(follow)->W);
  default_somewhere: |
    $H->data->{Ghost}
  getstarted: |
    $G->unrush('getstarted') || return;
    Say "ẞ";
    w somewhere(thing => w default_somewhere);
  somewhere: |
    my $thing = $ar->{thing};
    if ($ar->{nothing}) {
        Say "nothing...";
        Gf Ϡ Tw arr(%$ar);
        return;
    }
    if ($ar->{wormhole}) {
        w wormholify;
        return;
    }
    
    my $Cr = G crawl;
    #$Cr->{db} = 1;
    $Cr->{_ob} = G ob;
    say "" for 1..5;
    say join"", ("       ẞ           ")x38;
    start_timer();
    
    
    $Cr->RW;

    $Cr->T($thing, undef, $G->nw()->from({print=>'"L0sw "',F => [@F]}));
    
    my $wormhole = $G->{some_W} = $Cr->W;
    my $crawltime = show_delta();

    w splat_wormholes;
    
    Say "ẞ W $wormhole->{n}x".scalar(@{$wormhole->{script}})." for ".($wormhole->{G}->{name}||"$thing")."\n$crawltime   ".show_delta();
  splat_wormholes: |
    return unless G(crawl);
    G splat Tw Splat(somewhere => $G->{some_W});
  wormholify: |
    G splat Tw Splat(worm => $wormhole);
  splat_splatW: |
    G splat Tw Splat(splatW   => {script=>G(splat)->W->CS}   );
    #timer 2.5 { w splat_splatW };
    
  splatmenues: |
    my $ob = G(ob)->W;
    ob => sub { 
    
    w somewhere(wormhole => $ob) };

