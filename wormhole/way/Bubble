u allacgts
n Done

usage:
    # make C & feed atom
    # Ays to classify for search
    # theres a lot of abstract stuff happening
    # balanced int time atop repeating particles
    # usually an At can borrow above A.c to set itself up in time as a vector
    # in five we get to use the things own mind (if befour it)
    # in four we get a wad of language about its mind, (allowing)
    # in three we create new parts, Js however reuse.
    # J staples together
    # other A makes 3 like entering synapse
    # that 6 redraws if change always
    # you can draw conclusions at stdoc
    #  ^ knows how to reach in to eg A.c.aim.tw
    # can you see the moon towing the weather around
    #  ^ skip J action pathways, which are times you/something aimed at
    #  ^ know T.i is input pattern matches
    #    & facilitate anything pointing at the time itself
    # like u, i intervenes # natures recipe and execution specifics
    # i can come from u as well
    # as-in software that superimposes other types of gear
    # but meant as the stick that is permanently as unpermanent
    # the thing that wiggles things into place, superimposed C inflexionometer
    # probably not there in finished, non-different states of art
    # a keepalive patchbay
    # the liveness projected loosely through space on top of whats things
    # we are playing the survivors
    # everything in its right place
    #
# prongy return difference mashi, merge many indexes
supe:
    my $l = shift @Me;
    $l--;
    while (@Me) {
        my $m = shift @Me;
        my @k = keys %$m;
        for my $k (@k) {
            my $v = $m->{$k};
            if ($l) {
                my $x = $s->{$k} ||= {};
                G&supe,$x,$l,$v;
            }
            else {
                $s->{$k} = $v;
            }
        }
    }

ylo:
    my @o = $C;
    while (1) {
        my $o = $o[0];
        unshift @o, o.y->{$s} || last;
    }
    @o


C:
    my $z = G&At,$s,@Me;
    sayyl "Extract Cs from A: ". wdump 3, $s;
    @{z.M}

At: %com:#c
    $s = G&Aw,$s,@Me;
    G&o,$s;
    $s;
# more plays on words than content
# persons&things oscillation, last one to be mo
# A tossed in with get a new mind wrapped around it
wdef:
    my $per = {};
    my @z; # bits of mind
    my @p = (@Me);
    my @s;
    while (@p) {
        my $e = shift @p;
        $e || last;
        ref $e || push(@s, $e) && next;
        push @s, $s if !@s; # default person
        push @z, G&Aw,@s,$e;
        @s = ();
    }
    @z;

# ref$s||atom receives t? cv? ov?, N=[refs]
Aw:
    my $z = ref $s ? $s : do { unshift @Me, $s; G&atom };
    my @to = qw't cv ov';
    while (@Me && !ref $Me[0]) {
        my $s = shift @Me;
        my $t = shift @to;
        $t || die "No t $s";
        $s = G&ecv,$s if $t eq 'cv';
        $z->{$t} = $s;
    }
    z.N = \@Me;
    $z

atom:
    my $z = {A=>$A};
    z.om = A.om || $A; # last most I together - Any can upgrade itself network
    # z.m is the bunch of persons person
    # z.mo is the way out of the loop, acquired on in
    # z.y self vis non C hash
    z.y = $z;
    $z;

ecv:
    $s /= 10 while $s >= 1 || $s <= -1;
    $s
acv:
    ($s =~ /^.*?([1-9])/)[0]

# attain wholifier
# fairly trans parent A.II al readier
# G&At,Vev=>3,[C] # shells out new Vev A->Cs until 3
# the time difference, eg for 
# 
n o =>'',<<''
    s.1 ||= G&i,$s;
    ($s,$A,$C,$G,$T) = ($A,$s,s.C,s.G||$G,s.T||$T);
    #G&tex,$s;
    $A

# find unities by name
# forever spiral langality beyond the stick pouch mechanics
n ui =>'',<<''
    my @d = grep {ref eq 'ARRAY'} @Me;
    my $ts = join ' +_ ', map {join ' + ', @$_} @d;
    if (my $D = G.ui->{$ts}) {
        return $D
    }
    G&C,$s,@Me;

# rest to invigorate over the top
# the u7 2d into produces the origins structure, index can be applied anywhere
# u7 skinniest (made), talks about the origin its from, patches scs
# wants to do width first qq stretches, this stuff finally t-ugged complete
# host stat pops, 
n i =>'',<<''
    # s=A
    # get spiral to one, rest is a qq J 9 s=desc, z=u7[] u=u8{}
    s.u = G.sus;
    @Me = G&ui,u=>8,[s.u];
    # person u creates sc.u, S has v=u spiral opener
    # which Zs things into R,
    #  but after they're there & 1 (or skippy insert at if >) do now if ov
    #  returns the Cs 

    # each R C may %for:N,vis:u, going to A.mo.N where sc.u
    # and it sets itself up for going onto s

    # pointers to stream S, many toplevel
    # weave itself a kind and connect up with this
    #  back and forth curse, slip in/out space play
    # attach rambling try this-er
    # and all con screen slinked listens

    # adapts apart maps
    my $mup = [u=>{
        ug => 'scof ycv t',
        via => 'spir', # selects N sc.$C.t, spirals ug into R 
        nines => 1,
    }];

    my $t = s.4.u ||= G&tC,$mup;
    my $o = G&S,$s,C=>[$s],R=>$t,[@Me];
    $o;
