u allacgts
n Plugs

shouldWe:
    my $tr = 1;
    my $i = T.isle;
    $i && c&isle && C.t || die "Cno isle/t ".ki $C;

    i.f = G&getW,c&isle,C.t;
    unless (i.stop) {
        i.j = G&geT,s.c.isle,s.t,C.t;
        G&puTsj,$i;
    }
    else {
        say "Top level: s.t -> C.t (c&isle)";
        return 1;
    }
    if (0 && !i.j.y) {
        $tr = 1;
        say "pJoint noy: ".ki i.j;
    }
    elsif (keys %{i.j.c}) {
        $tr = 1;
        say "pJoint weighs: ".ki i.j;
    }
    else {
        $tr = 0;
        say "pJ easy ".ki i.j;
    }
    if (!i.f || !keys %{i.f.c}) {
        $tr = 1;
        say "pJoint ".ki(i.j)." must make ".ki i.f;
    }
    elsif (!-f 'w/'.i.f.c.yam) {
        $tr = 1;
        say "pJoint i.f.c.yam MISSING, make it";
    }
    $tr

jound:
    #say "Found! ".ki s.f;
    s.j.y = 0.1;
    G&puTsj,$s;


fli:
    my $f = s.f.c.yam || die "Yanotcyam ".ki s.f;
    LoadFile('w/'.$f);

fown:
    s.f.isle && s.f.t || die "fown: ".wdump 3, s.f;
    my $f = s.f.c.yam ||= s.f.isle.'/'.s.f.t;
    my $X = C.sc.X || die "get X ".ki$C;
    G&xery,s.f.sc,$X,{Ii=>'i'};
    !-d "w/s.f.isle" && `mkdir w/s.f.isle`;
    # drops ooI, scrubs Ii: (saves file)
    Rw down $f $s:X;
    G&putW,s.f;

joined:
    return if s.stop;
    #!s.j.c.todo && sayre "How was todo to sleep travel: ".ki s.j;
    delete s.j.c.todo;
    G&puTsj,$s;
