u alljs
#
# first is only resumed e
Time:
    A.W.Time ||= {};
    var i = A.W.Time;
    i[s] == 2 and delete i[s]; return 1
    i[s] and return 0
    i[s] = 1;
    a.yl(d, &{
        i[s] = 2;
        G&$s
    });
    return 0

# rassimilato
# needs to put in background and do before dealings
# maybe the Cs become for compression somehow
rasunify:
    s and A.mo.rasgo = s;
    !G&Time,'rasunify',700 and return
    s ||= A.mo.rasgo;

    var de = [];
    var li = [];
    $.each(s, &i,r{
        r.alive and li.push(r)
        else { de.push(r) }
    });
    while (li.length > 9) {
        ~liingot
        de.push(li.shift());
    }
    if (0) {
    $.each(li, &i,r{ r.liopacity = r.opacity; r.opacity = 0 });
    var m = s[0].canvas.toDataURL('image/jpeg');
    $.each(de, &i,r{ r.remove() });
    $.each(li, &i,r{ r.opacity = r.liopacity; delete r.liopacity });

    a.om(A.up,['cmb',9,{el:2},{src:m,pa:'R'}],a,{});
    }

    s.splice(0,s.length);
    $.each(li, &i,r{ s.push(r) });
    var go = &i,r{
        delete A.W.Rs[r.Ct];
        r.remove();
    };
    $.each(de, go);
    var rzl = s.length;
    while (rzl > 9) {
        var v = s.shift();
        ~rasquishout: v
        go(1,v);
        rzl--;
    }

u alljse
# take some photo
tism 36:
    var h = $('canvas#display').get()[0];
    var m = h.toDataURL('image/jpeg');
    $.ajax({url: '/tism',type: 'PUT',data: m});

0&&
notism:
    $('body').append('<a id="tism" download="ti_'+s+'_sm.jpg">o</a>');
    var l = $('body > a#tism:last');
    l.attr('href',m);
    l.click();
    //$('body > a#tism:last').remove();
    var ov = $('body > a#tism').length;
    while (ov > 99) {
        $('body > a#tism:first').remove();
        ov--;
    }

pa 34:
    with (paper) {
        var src;
        var r;
        C&typ ||= 'R';
        !(c&el <3) and r = A.b.pa; !r && a.c("no rasmeemmber "+C.t);
        else if (C&typ === 'R') {
            C&src and src = C&src;
            !src && C.t.length < 4 and src = G&pull,'Viow';
            !src && C.t.length < 4 and src = G&pull,'Viow';
            src ||= 'th/'+C.t;
            if (!src) {
                C&jfi ||= 'img';
                var find = $(C&jfi);
                !find.length and a.c('no find '+C&jfi);
                src = $(find).last().attr('src');
            }
            r = new Raster({
                crossOrigin: 'anonymous',
                source: src
            });
        } 
        else if (C&typ === 'T') {
            r = new PointText(view.center);
            r.fillColor = 'white';
            r.justification = 'center';
        }
        if (C&typ==='T') {
            c&s and r.content = c&s;
            c&el <3 && !C&fs and C&fs = '30';
            C&fs and r.fontSize = C&fs;
        }
        C&src && C&src != r.image.src and r.image.src = C&src;
        C&an && a.uplg and n = r.animate(C&an, a.uplg);
        c&el <3 and r.position = view.center;
        C&pxp and r.position.x += C&pxp;
        C&pyp and r.position.y += C&pyp;
        C&sca and r.scale = C&sca;
        C&b and r.blendMode = C&b;
        C&r and r.rotate(C&r);
        C&opa and r.opacity = C&opa;
        !A.W and ~die~panoW: A
        A.W ||= {};
        if (c&el <3) {
            var ha = C&typ+'s';
            var ar = C&typ+'z';
            A.W[ha] ||= {};
            A.W[ha][C.t] = r;
            A.W[ar] ||= [];
            var raz = A.W[ar];
            raz.push(r);
            if (0) {
                raz.length > 5 and G&rasunify,raz
            }
            else {
                a.lim(raz,9, &r{
                    delete A.W.Rs[r.Ct];
                    r.remove();
                });
            }
            r.Ct = C.t;
            r.omily = 1;
            r.alive = 1;
        }
        if (c&el == '9') {
            r.omily and delete r.alive
            else { r.remove() }
        }
        ~pa: r.image.src
        A.b.pa = r;
    }
