u allovse
n \'%of:Sev'
# togethered with force=el or so
# tee to 4 sc ^T.* to T looks compinkgk 6, throaty
# this alternating data, which brings in middle terms
# all T.d is a divable rhythm like:
#   T.d.$nk (o/v of nk) .T.d.$gk (o/v of gk) .T.d.$wk (o/v of gk)
# lives in pools and across pools,
# being beside it notes a kind of transience for it
# for string nk the gk would be s, same o/v as nk, and also has wk
# oseverato carte copies T.d to A.T.d 
#     which AZ back into new T (usu most transient part)
#     except for this shape of consciousness
# ex to note Td acks, perhaps on T.d.*, $d, so it wanders
# arf on anything we dont eventually understand in T.d
# - total options tho
# other flywheel stuff for lv.op button presses
# wk = still is fine (usu)

n tsnew =>4311=><<'',{Td=>'t/s/new'}
    lv.op.t = 1;

n ysnew =>4312=><<'',{Td=>'y/s/new'}
    lv.op.y = 1;



n cnew =>4321=><<'',{Td=>'c/*/new'}
    sayre "how inject a c $gk" if $vl;
    lv.op.c.>$gk = 9;

n cgone =>4321=><<'',{Td=>'c/*/gone'}
    sayre "how delete a c $gk";
    lv.op.c.>$gk = 9;

n cqdiff =>4323=><<'',{Td=>'c/q/diff'}
    lv.pur.c.>$gk = 1;

n csdiff =>4323=><<'',{Td=>'c/s/diff'}
    lv.pur.c.>$gk = 1;
    lv.pur.c.ht = 1 if at.c.ht;

# ^ should avoid v (matched paths)
n cdiff =>4324=><<'',{Td=>'c/*/diff'}
    sayre "how to c dif $gk".slim(30,$v)." <--- ".slim(30,$o);
    lv.op.c.>$gk = 9;

n cstill =>4324=><<'',{Td=>'c/*/still'}
    # ya



n scnew =>4331=><<'',{Td=>'sc/*/new'}
    lv.pur.sc.>$gk = 1;

n scgone =>4332=><<'',{Td=>'sc/*/gone'}
    sayre "how delete a sc $gk";
    lv.op.sc.>$gk = 9;

n scdiff =>4333=><<'',{Td=>'sc/*/diff'}
    lv.pur.sc.>$gk = 1;

n scstill =>4334=><<'',{Td=>'sc/*/still'}
    # ya
