u allovse
n '','','%of:O'

n tycsc =>31=><<''
    A.Subtle.Art = 1;
    A.t&Art,33,18;
    at.t = C.t;
    at.y.cv = C.y.cv;
    V.ids->{C.sc.id} = $C if C.sc.id;
    if (ref C.c.s eq 'HASH' && C.c.s.bb) {
        # an other that is holding this
        at.c.S = C.c.s eq A.J && C.sc.W ? ''
            : C.c.s.name || "unamed";
        # makes link
    }
    elsif (exists C.c.s) {
        at.c.s = C.c.s
    }

n Jin =>36=><<''
    # so osci ^ can C.sc. > at.sc.bla
    at.sc = {%{C.sc}};
    delete at.sc->{$_} for qw'idly nspc path yspc';
    # haps to be crate later somewhere if we oWl/S
    delete ta.V if ref ta.V eq 'HASH' && !keys %{ta.V};
    .
    if (my $v = at.sc.J) { # J unifies -
        at.sc.J = v.name;
        .
        return if C.sc.qz;
        return if C.sc.W && Y.root.sc.oWl;
        return if Y.root.sc.oJl;
        return if C.sc.W && defined at.c.S && at.c.S eq '';
        .
        my $nV = v.El->{V.name};
        return sayre "no V.name on v.name $v: El: "
            .join', ',sort keys %{v.El}
            if !$nV;
        .
        my $rv = nV.rv || {LIES=>"from v.name"};
        return sayre "no rv V.name on v.name"
            if !nV.rv;
        .
        lv.do->{V.name} = $rv;
        at.V->{V.name} = rv.i;
        .
        delete at.c.s # words about what its looking
            if at.sc.pi && exists at.c.s && (Y.root.sc.ux || at.sc.qs);
    }
    A.t&Art,6,33;

n Josl =>37=><<''
    if (C.c.root) { # / unifies  <
        J.at ||= {} if J.name eq 'qq';
        J.at || die"You must make Jat for J.name";
        %{J.at} = %{C.sc};
        if (at.sc.pi && exists at.c.s && Y.root.sc.ux) {
            delete at.c.s if @{V.os}; # itself, 'pi'
        }
        lv.voso = 1;
        for my $ik (@{V.os}) {
            my $iv = V.lv->{$ik};
            my $C = iv.C;
            do { sayre("Skip C.t: self in self") for 1..6 } && next
                if C.sc.J && C.sc.J eq A.J;
            lv.do->{$ik} = $iv;
            at.V->{$ik} = iv.i;
        }
    }

# G@Art,8,6; -> G&t,'Art'...,  access introspective universe
n sel =>38=><<''
    A.t&Art,8,6;
    at.y = at.y.cv if keys %{at.y} == 1 && exists at.y.cv;
    # ^ to imply outsideness
    delete at.sc.>$_ for qw'ux oWl qs sq';
    # ^ important noises remain on C
    at.c.>$_ = delete at.sc.>$_
        for grep { exists at.sc.>$_ }
        qw'Wid Mid tag id ht cod',
        split',',delete at.sc.pc;
    # ^ some sc upgrade to c

    delete at.c.s if at.c.s eq 'pi' && C.t eq 'pi' && C.y.cv == 0.9;
    if (ref at.c.s && J.mo.J && J.mo.J.at.ux) {
        my $was = delete at.c.s;
        at.c.q = "$was";
        if (!at.sc.J) {
            at.c.s = at.c.q;
            at.c.q = 's';
        }
    }
