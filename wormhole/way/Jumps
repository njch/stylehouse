u allvse
n '','','%of:oJ'
# https://www.youtube.com/watch?v=tL8N_3tln0Y
# have the timesack, Subtle means even wide N J completely per C
# bumps within decide servi
# like being ones selves
n J =>61,<<''
    T.alk = "A.talk  TT  A.ztime";
    Atime(6) || return do {
        say "SKive! T.alk" if A.V&skive;
        T.nose = 1;
    };
    sayyl "J6 ! T.alk" unless !A.V&sixes || C.sc.pi || T.alk =~ /^all/;
    A.Subtle.J = 1;
    A.t&J,9,1;

# if T.same and no J action, rv says if concealed J action
# with some clues maybe, and a thin foundation W that leads to more
# W you may have around, for the dependency file
# there would be idly stuff, pi protocols registered to subscribe notifies
# wants to check Js for action
# pi columns could be optimised # A light leaks
#return sayre "same T.alk" if T.same;
n J =>71,<<''
    T.nose && return A.V&nose && sayre "nose T.alk";
    if (!J.A.II.Sev) {
        my $A = {J=>$J,G=>$G};
        Rw collaspII $A;
    }
    J.most.eo = 'Sev' if J.A.II.Sev;
    say "oJ77 77 T.alk     -> J.most.eo"
        unless J.most.eo ne 'Sev' || !A.V&sevens
            || J.yt.quiet || C.sc.pi || T.alk =~ /^all/;
    Rw J.most.eo $J $A;
