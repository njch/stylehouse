u allact
n Sugdev =>3143,<<'','%code:U,v:scJ'
    J.ev.o ||= 'indoc';
    # dubimport
    J.ev.tr = 1;
    J.uzk ||= [qw'mean onto etc'];
    J.UG ||= [];

# n MuSt # instance must have storage (AmPg)

# between pin and M:
n Sugdev =>33,<<'','%code:U,v:scJ'
    @{J.UG} = grep {keys %$_} @{J.UG};
    my $y = J.oy;
    y.in = 0.1;
    y.out = 0.5;
    y.ert = 3;
    G&Sugour,$J;
    J.VV.N = 1;

u allacgts
n Sugour =>'',<<''
    my $J = $s;
    my $pi = {};
    for my $u (@{J.UG}) {
        my $k = join(' ', map{u.sc->{$_}}@{J.uzk});
        push @{$pi->{$k}||=[]}, $u;
    }
    my $M = J.oy.o.M;
    for my $k (sort keys %$pi) {
        my $v = $pi->{$k};
        my $ts = {};
        for my $u (@$v) {
            my $ses = u.sc->{ts.k};
            push @{$ts->{$ses}||=[]}, $u;
        }
        if (keys %$ts > 1) {
            my @o = sort {@{$ts->{$a}} <=> @{$ts->{$b}}} keys %$ts;
            ts.win = $ts->{$_} for pop @o;
            ts.k = 'doct';
        }
        Mn($k=>-ean=>{s=>$v,ts=>$ts});
    }
