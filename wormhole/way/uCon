my $qq = Rw Elj $J qq;
# low frequencies atop high frequencies
# travels/foli/foldout vs in-pin u..n..u..n..s
if (my $los = qq.A.los) {
    my $Yb = qq.A.los.lbbst; # last qq bb (post-this)
    %{qq.bb} = (
        %{qq.A.keep.bb||{}}, # from beginning of time
        %{qq.A.hqq.bb||{}}, # 6y inject before pin
        %{los.bb||{}}, # non-first iterration of uing
    );
    los.end->();
}

Rw Sev $J:qq;

my $oo = Rw Elj $J oo;

my $Y = qq.El.Duv || die "No Duvon ".wdump 3, $qq; # really V
my $rv = Y.rv;
if (@{rv.sc}) {
    J.on_usc->() if J.on_usc;
    Rw UnPreDuv $J:qq;
    return Rw uCon;
}

if (J.A.Ii eq rv.i) {
    say "uCon same A.talk: ".F_delta() if J.V;
}
else {
    my $N = [@{rv.c}];

    J.A.Ii ?
        J.A.Ii ne rv.i ?
            sayre "A.talk: Diff o J.A.Ii -> rv.i"
          : return J.V && say "A.talk: Same J.A.Ii"
      : J.V && sayre "A.talk: New uCon ! rv.i";

    Rw uThree $A $J $Y $qq $oo $rv $N;

    say "uCon ch: J.name: ".F_delta() if J.V;
}
if (J.A.I.U) {
    my $N = [J.C];
    my $v = {cut=>[qw'U 4 1']};
    Rw humms $J $N $v time;
}
qq.A.los = Rw pha $J:qq los;
qq.A.los.lbbst = {%{qq.bb}};
#losI.d&pha,los;
