u trows
y.in=y.out=0.3;
J.VV.N = 1;
my @c = map {"Ghost/c/$_"} qw'2 5 99 47 7 48 8*';# 1* 8* à¶¬ 11 61 43'; #####!###
$A=
n C.t=>9=>{}
# #
my $cmd = "ls -rt --full-time --inode @c";
J.fast ||= do {
    Rw recur $d=0.5 $cb:_ for sub {
        my $stuff = G&batik,$cmd;
        return if J.fast_stuff eq $stuff;
        my $fir = !J.fast_stuff;
        J.fast_stuff = $stuff;
        return sayre " - - First!" if $fir;
        Rw waito $J;
    };
    1
};
my @z = grep {!/(?!8)\d\d\d$/} G&batik,$cmd;
# #
$A=
n sha=>1=>slm(20,dig(join"\n",@z))
my ($sha) = @{A.M};
#
if (sha.c.s eq J.wz.sha.c.s) {
    J.lies = 1; # 
    y.ope = T.nose = 1;
    return saybl"------- C.t    sha.c.s";
}
else {
    saygr "ls sha off:\n sha.c.s \n J.wz.sha.c.s"; ##
}
# !!!! !! !!! # # # # # # #
for (@z) {
    chomp;
    s/^\s+|\s+$//sg;
    my ($ino,$mo,$qua,$use,$grp,$size,$date,$time,$tz,$file)
        = split /\s+/, $_, 11;
    $time =~ s/\.?0+$//g;
    my $o = {
        ts=>"$date $time $tz",
        ino=>$ino,
        size=>$size
    };
    my $oC = J.wz.>$file;
    my $was = 1 && $oC;
    $was || say "No find $file amung: ".join ', ', sort keys %{J.wz};
    o.hard = 1 if !$was;

    my @dif = G&hesl,oC.sc,$o;

    if ($was && !@dif) {
        y.ope = 1;
        J.lie.>$file = 1;
        say "Nexting  /  lie $file";
        next;

    }
    #
    m $file=>-Ghost=>$o
}
y.ope = 1;
