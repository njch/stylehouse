u allvse

n '','','%of:Mo'

n J =>3211,<<''
    C.c.W = $J unless ref C.c.W;
    ref C.c.W || !ref $J || C.c.W eq J.name || die "J.name isn't".ki(C.c);
    !ref C.c.W || !ref $J || C.c.W eq $J || die "nzoWJ".ki(C.c);
    # avoid 6ing, its doubling orso
    A.ztime = 3 if A.J.name ne 'qq'; # break off

# crunch gravel, spreaders
n pi =>3213,<<''
    # - c. language is map to some u before 6ing
    ref $pi && die"refpi: ".wdump 2, $pi;
    C.sc.pi = $pi || 'guess';
    C.c.J = 'pi';
    my $oJ = A.J;
    $oJ = C.y.o.J if C.y.o && C.y.o.J;
    A.jr = Rw Ajr $J:oJ $C;

# Weave wires protocol, host pools
n W =>3214,<<''
    my $t = $W;
    $t = W.name if ref $t;
    my $jr = Rw Ajr $J:G.oin $t $cv=0.3;
    .
    return C.c.W = die "SOIDNG RESEAR(pi with W)".ki $C
        if C.c.pi; # doing research
    A.jr = $jr; # being
    .
    C.sc.W = $t;
    C.sc.J = ref $W ? $W : $t;
    # going over J should be same...
    C.c.J ||= $W;
    C.t = $t;
    C.y.cv ||= 0.3;
    # and where the thrust (J.A?)
    if (C.c.vv) {
        A.ztime = delete C.c.vv;
        A.jr&vv,'',9
    }
