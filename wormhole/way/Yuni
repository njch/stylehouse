u allvse
n '','','%of:Sev'

# time impersonator
n JYV =>2=><<'',{rg=>'J,V',v=>'Y'}
    for my $K ('Y','V') {
        my $name = C.c->{$K};
        $name || die "No $K";
        C.c->{$K} = I.d&Elj,$J,$name;
    }

# exchange        
n dElvis =>21=><<'',{rg=>'J,V',v=>'Y'}
    I.d&Elvis,$J,$Y;
    .
    V.os = [];
    A.mo.retu && die "J.name's  V.name: Already is  A.mo.retu.name";
    A.mo.retu = $V;

# root of etc (yin)
n root =>22=><<'',{rg=>'J,V',v=>'Y'}
    my $rC = Y.tv->{"0.9\t/"}
        || Y.tv->{"0.9\t".J.name}
        || Y.tv->{"0.9\t".J.uname}
        || die " noroot J.name: showing 0.9s: "
            .wdump [map{ki $_}values %{Y.v->{0.9}}];
    rC.c.root = 1;
    Y.root = $rC;
    my $N = [grep { $_ ne $rC } @{Y.vs}];
    $N = [] if rC.sc.dark;
    unshift @$N, $rC;
    # T.Z.$incv = 1||$setAcv makes A,Celf, 
    # A.mo.re array others (yarN) which may Acquire
    push @{A.mo.re->{0.22}||=[]}, map{
        my $CC = I.d&hup,$_;
        # all spreads out to play Y/V
        I.d&xot,$CC,{c=>C.c};
        [undef,$CC]
    }grep{!_.sc_nosc}@$N;
    # Make root.c.N = new Cs ^ (Zelike)
    T.not = 1; # or more 78ism

n Y =>23=><<'',{rg=>'J,V'}
    C.y.k = C.y.cv."\t".C.t;
    push @{V.os}, C.y.k unless C.c.root;
    Y.root = $C if C.c.root;
    # how happening to thingk
    # must ,,,, A.t to gain perception (not mid ex but should)
    # but yeah add things as lines rejoin
    A.Iso.O = 1; # also ex O as I (whoever we are)
    A.Subtle.S = 1; # only-S ex slips through time unwide

n Y =>231=><<'',{rg=>'J,V'}
    return if C.c.root;
    T.to = 0;
    A.t&S,6,2;
    T.not = 1 if !delete T.to;

n Y =>289=><<'',{rg=>'J,V,yk'}
    V.alv->{$k} = C.y.lv = {k=>$k,C=>$C};
    C.y.at = {};
    C.y.ta = V.ta->{$k};
    C.y.vl = V.lv->{$k};

# / continues from 345 when everything's 6
n root =>345=><<'',{rg=>'J,Y,V'}
    if (C.c.root) { 
        Y.root = $C;
        T.Z->{0.6} = 0.345;
        T.not = 1;
    }

n Y =>49=><<'',{rg=>'J,V,yk,yat'}
    V.ta->{$k} = I.d&hup,$at;
    V.tv->{$k} = I.d&hup,$C;

n Y =>58=><<'',{rg=>'J,V,yk,ylv,yvl'}
    V.lv->{$k} = $lv;
    if (C.c.root) {
        V.rl = $vl;
        V.rv = $lv;
        Rw TNews $J $talk:A.talk $rl:V.rl $rv:V.rv
            if J.V || A.V&N;
    }
