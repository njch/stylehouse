my $J;
J.id = mkuid;
J.name = ar.t || ar.name || shift @{delete ar.m};
J.bb = {};

J.le = ar.le if ar.le; # nonpi Jiter
J.mo.s = G.s;
J.most = J.mo;
J.most.J = $J; # pi change Jiterest
J.most.wq = 1;
J.A.IIII = [@{G.IIII||['G/T/Wild']}];
J.A.Indo = 2;

# Nbz
J.tt = 1;
J.bz = sub { # the cv=>t=>style r
   my $m = [@_];
   sayre "bz not 2 @$m" if @$m != 2;
   my $j={};
   while (@$m) {
       my ($r, $v) = (shift @$m, shift @$m);
       if ($r =~ /^%(\S+)/) {
           j.style = $1;
       }
       else {
           # to ivertake in here
           $j = Rw r2j $r $J;
       }
       defined j.cv || die "NOSEYV: j.cv".wdump[$j,[@_],[$r, $v]];

       j.r = join "\t", j.cv, j.t, j.style;
       j.s = $v;
       my @Js = $J;
       push @Js, values %{J.phy} if J.phy;
       for my $jj (@Js) {
           jj.bb->{j.r} = j.s;
           push @{jj.ord}, {%$j} if jj.ord;
           jj.tim->{j.r} = hitime() if jj.tim;
           jj.ap->($j) if jj.ap; # <<<
       }
  }
};

# Viu
my $eu = sub { J.uS = 1 };
my $unu = sub {
    my ($A) = @_;
    A.mo && A.talk || die "Not A? ".wdump 2, $A;
    J.uS || return;
    my $y = J.oy;
    Rw Jamroot $J $y if y.at;
    J.uS = 0;
    Rw uCon $J $A;
};
# 6 shul start u pha
J.u = sub {
    my ($A,$C,$G,$T,@M) = @_;
   pop @M while @M && $M[-1] eq '';
   $eu->($A);
   my $J = Rw Elj $J qq;
   G&In,$J,\@M;
};
J.n = sub {
    my ($A,$C,$G,$T,@M) = @_;
   pop @M while @M && $M[-1] eq '';
   $unu->($A);
   G&In,$J,\@M;
};
J.m = J.M = sub {
    my ($A,$C,$G,$T,@M) = @_;
   pop @M while @M && $M[-1] eq '';
   $unu->($A);
   my $M = shift @M;
   G&In,$J,\@M,$M;
};


my $sc = {id=>J.id};
Rw jamsc $J $t=J.name $cv=0.9 $s=J.name $sc;
J.uname = J.name;
J.A.keep.bb = {%{J.bb}};

return $J;
