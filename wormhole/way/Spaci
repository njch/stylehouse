u allvy
n '','','%of:Mo';
# space foyay calcium
# also lum + bal mingle space
# distribute display particles
# could spiral much space away from spine

# build wave plot manifold
# solar systems
# 1 things big, 0.9 ended implies to many
yin 23:
    y.cv ||= 0.1 if !defined y.cv && !defined y.in;
    y.in = y.cv if defined y.cv;
    y.in ||= 0.1;
    y.out = y.in + y.space if defined y.space;
    y.out ||= 0.9;
    y.thi ||= 1;
    if (my $mk = y.ert) {
        $mk += y.ert while y.thi > $mk;
        y.thi = $mk;
    }
    y.space = y.out - y.in;
    y.space *= -1 unless y.space > 0;
    y.aspace = y.space / y.thi;

# twist, lay into segment
# y.u. shares av, y. separates
# difference pours out of y.bal via y.i in 32
yarN 26:
    ref $y eq 'HASH' || die "Notash: ".wdump 2, $C;
    !defined y.u || ref y.u eq 'HASH' || die "Nou : y.u ".wdump 2, $y;
    y.u.v = defined y.cv ? y.cv
        : defined y.in ? y.in
        : die "no yiny".ki$y;
    y.thi || die "Whythi".ki$C;
    die ":idify" if $y ne C.y;
    my @lot = map {
        my $C = eval { I.d&xot,{},$C };
        C.y.i = $_-1;
        $@ && die "Tpp ".wdump 2, $C;
        $C
    } 1..y.thi;
    if (@lot > 1) {
        push @{A.mo.re->{0.29}||=[]}, map{[undef,$_]}@lot;
        T.not = 1;
    }
    else {
        my ($CC) = @lot;
        ref $CC eq 'HASH' || die "not one? $CC";
        %$C = %$CC;
    }

yinvout 3:
    y.mu = 1;

# * bend mu since ^
# render microdots
black 34:
    my $was = y.u.v;
    defined $was || die"noAv".ki$C;
    # in:
    y.cv = 0+sprintf '%.6f', y.u.v unless y.cvil && defined y.cv;
    y.pcv = 0+sprintf '%.6f', y.i / C.y.thi;
    # over:
    my $in = y.aspace * y.mu;
    y.u.v += $in;
    # out: 
    y.ov = sprintf '%.6f', y.u.v;
    y.spc = y.ov - y.cv;
    #
    sayyl "Bend: C.t   $was += $in       y.aspace * y.mu       muav:y.u.muav"
        if A.J.V && y.u.muav && y.u.muav != 1;

ent 37:
    $y->{$_} = 0+sprintf('%.6f',$y->{$_}) for qw'cv ov aspace spc';
    C.sc.yspc = y.spc if C.sc.nspc;
    C.sc.ml = (C.y.over * 40)."%" if y.over;

pin 77:
    return if delete T.oke;
    my $oJ = A.J;
    my $J = C.y.o && C.y.o.J || $oJ;
    my $ar = {};
    ar.s = C.c.s if exists C.c.s;
    Rw jamsc + $J $oJ $C $sc:C.sc;
    sayyl "Hamsc! A.talk: C.t C.y.cv     ".ki(1,{c=>C.c,sc=>C.sc})
        if A.J.V;
