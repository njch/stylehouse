C.sc.dos = 'pileJup';
y.ert = 32;
my $dir = $s;
-d $dir || die "No $dir";
n Join=>0.0001=>$dir,'%decor,hs:388'
my $jes = J.mo.jes = $J;
(my $rd,C.c.isley) = ($1,$2) if $dir =~ /^(.+)\/(.+?)$/
    || die "DirJ not k ended: $dir";

# should Atime(2) from a globby ls + this J pins

my $geese = sub {
    my $f = shift;
    my $way = $1 if $f =~ /.+\/(.+?)$/;
    $way || die "noqway $f";
    my $mt = (stat $f)[9];
    my $fi = $f;
    $fi =~ s/\//-/g;
    my $wf = "w/way/$way";
    my $wt = (stat $wf)[9] if -f $wf;
    $wt > $mt
};

my $li = {map{$_=>1}glob("$dir/*")};
delete $li->{$_} for qw'.git .gitignore';
my @n;
my $jf = "$dir/J";
if (delete $li->{$jf}) {
    Rw trowil $J $s:jf;
    #Mn($jf=>-gejo=>{}=>'%dis');
}
else {
    sayre "No $jf in ".wdump 2, $li;
}
my $tow = jes.tower || die "no tower";
my $wt = jes.trowl || die "no trowl";
my $tal;$tal = sub {
    my ($d,$wt) = @_;
    map {
        my $v = $wt->{$_};
        my @M;
        push @M, [$_=>''=>{s=>$_,ind=>$d}];
        push @M, $tal->($d+1, $v) if keys %$v;
        @M
    } sort keys %$wt;
};
my $N = do { #G&NM
    my $M = [];
    my $N = [$tal->(0,$wt)];
    Mn($N);
    $M;
};

my $was = {};
for (@$N) {
    my $s = $tow->{_.t}->{e} || next;
    _.c.isley = s.src if s.src;
    'src' ne join(' ', sort keys %$s) &&
        sayre "elvis noise: ".ki $s;
}
for (@$N) {
    my $f = _.c.isley ? "$rd/_.c.isley/_.t" : "$dir/_.t";
    if (delete($li->{$f}) || $was->{$f} || _.c.isley) {
        -f $f || die "NO isley C.t thiong $f" if _.c.isley;
        _.c.s = $f;
        _.sc.ml = _.c.ind * 3;
        if ($geese->($f)) {
            _.c.pi = 'gee';
        }
        else {
            _.c.pi = 'bl';
        }
        if (my $aw = $was->{$f}) {
            if (aw.c.ind <= _.c.ind) {
                _.c.pi = 'gefore';
            }
            else {
                aw.c.pi = 'gefore';
                $was->{$f} = $_;
            }
        }
        elsif (_.c.isley) {
            _.c.pi = 'gefore';
        }
        else {
            $was->{$f} = $_;
        }
        _.sc.id = $f;
        _.sc.hs = '255';
    }
    else {

        _.sc.hs = '339';
    }
    _.sc.dis = 1;
}

my $i;
_.sc.id .= 'geef'.$i++ for grep { _.c.pi eq 'gefore' } @$N;
my $la;
for (1..3) {
    for (@$N) {
        _.c.dropi++ if _.c.pi eq 'gefore' && $la && la.c.pi eq 'gefore'
            && la.c.ind != _.c.ind;
        $la = $_;
    }
    @$N = grep{ keys %$_ } grep { !_.c.dropi } @$N;
}
my $ee = jes.teeps = {};
my $un = {};
my @ins = grep {_.c.pi ne 'gefore'} @$N;
$ee->{_.t} = $_ for @ins;
$un->{_.t}++ for @ins;
my @to = grep { $un->{$_} > 1 } keys %$un;
sayre wdump [ "things showed up too many;", @to] if @to;

Mn($N);

keys %$li &&
    Mn(unc=>''=>"Uncounted: $_\n",'%ws,dis')
        for sort keys %$li;

n o=>62=>"sÒ‰",'%fs:60,blr:1,opa:3';
# and so
