@$N = Rw humms $J:oo $N wongui _;
my @o = grep {_.sc.Wf} @$N;
J.A.III.qqth = [map {
    -f $_ || die "No $_ exist! from  qq   le   J.name";
    /^w\/(.+)$/ ? "G/T/$1" : die "$_ no w/ dir";
} map {_.sc.Wf} @o];

@$N = Rw humms $J:oo $N notnotcode _;
my $hup = sub {
    my $s = shift;
    my $CC = {%$s};
    $CC->{$_} = {%{$CC->{$_}}} for grep {ref $CC->{$_} eq 'HASH'} keys %$CC;
    $CC;
};
@$N = map { $hup->($_) } @$N;
my $sc = [@$N];
my $s = Rw humms $J:oo $N concoi;
#Rw humms $J:oo $N talky;

# as the i,i,i coalesces, later
J.A.Ii = rv.i;
J.A.I = $s if %$s;
delete J.A.I if !%$s;

# then A.Ii sees J.A.I (+more, concat) hashrefs i aj like
# which is a stilled wave of vectors
# the wave can catch up to itself
# the usual plywood spiral peel
# made {s=>$s,ply=>'K/cv/t:D',grp=>'K/cv&c,sc,gr'}
# climb the limbs in falling A.mo.y./..
# you are suggesting I use more noisey code
#saygr Rw TreeD $s $scby=gro;
