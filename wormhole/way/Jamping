u allvse

n '','','%of:Mo'

n time =>436,<<''
    A.ztime = delete C.c.time;

n '','','%of:oJ'

# time out
n J =>434,<<''
    $J = C.c.J = C.sc.J;
    J.name || die "WNO ".wdump 4, $C;
    # TODO: soft acuminy over \d esp. until .bb or something
    A.mo.Js->{J.name} = $J;
    # A falls
    # A.mo exits
    # J.A persists
    J.A.first ||= hitime();
    if (C.sc.W && G.oin ne $J) {
        my $lev = G.oin.A.tid;
        if (J.A.tidi && (J.A.tidi + 3) > $lev) {
            A.ztime ||= 4;
        }
        else {
            J.A.tidi = $lev;
        }
    }
    sayre "same A.J.name inside J.name" if A.J eq $J;
    if (exists C.sc.pi) {
        sayre "JiternotAJ J.Jiter.name ne A.J.name" if J.Jiter ne A.J;
        die 'pimostJ'if J.most.J eq $J;
    }
    else {
        die 'esel'.wdump [J.C, J.most.J.C] if J.most.J ne $J;
    }
    A.ztime ||= 6;
    A.time && sayre "Had atime";
    A.time = sub { # A.t& cover, serve single digit ad hocs, like 2
        my ($JJ,$q) = @_; die"JTIMEJ" if $JJ ne $J;
        A.ztime >= $q
    };
    if (C.sc.pi) {
        J.A.d = J.Jiter.A.d + 1;
        J.ind = join '  ', ('') x J.A.d;
        J.name = "J.A.d. C.c.pi*C.t";
        J.d = $C;
        A.ztime = 6 if A.ztime < 6;
    }
    J.C = $C;
    A.talk .= " J: J.name";
