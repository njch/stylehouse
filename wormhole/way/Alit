u allvse
n \'of:umun'

n cs =>2,<<'','%code:C'
    ref $s eq 'HASH' || die "notos";

n slipout=>3,<<''
    my $Ii = join " + ", map{"_.t:_.c.s"} @C;
    $Ii eq II.Ii && return;


n spII=>'',<<''
    if (my $TI = G.TT->{$Ii}) {
        %$II = %$TI;
        TI.Ii ne $Ii || die "Hiked GTT TI.Ii ne $Ii";
        return G.protV && sayyl "Hiked GTT $Ii";
    }
    else {
        G.TT->{$Ii} = $II;
    }
    II.Ii = $Ii;

    my $N = [@C];
    my $s = {};
    my $say = 
    Rw spIII $A $II $N K/cv/t $s

n spIII =>3,<<''
    my $ooI = ar.ooI;
    $ooI ||= II.ooI ||= {};
    ooI.mo ||= $ooI;
    delete ooI.st if ooI.mo eq $ooI;
    my $m = [@{ar.m}];
    @$m = split '/', $m->[0] if @$m == 1;
    my $n = shift @$m;
    $n||die "Non? $n @$m ooI.ins";
    @$N||die"noNsp";

    my $Ii = join " + ", map{"_.t:_.c.s"} @$N;
    return "ooI.ins stabilised" if $Ii eq ooI.Ii;
    ooI.Ii = $Ii;

    my $E = {%$II};
    %$II = ();

# for N
n tw =>4,<<'','%v:N,ha:sh'
    C.c.tw = {map{$_=>1} map{ keys %{_.c.s} } @$N};

# ^ wants of variantsl 
# can comission stillness
# we all look like each other's Jesuses
# must in N order move in changed hashes
# but our awareness of
n tw =>5,<<''
    for my $K (sort keys %$tw) {
        next if $K eq 'Ii' || $K eq 'ooI';
        if (@$m) {
            my $III = $II->{$K} = $E->{$K} ||= {};
            my $oI = ooI.K->{$K} ||= {mo=>ooI.mo};
            my $S = $s->{$K} ||= {};
            # ^ thse particles
            oI.ins = (ooI.ins&&"ooI.ins/")."$K";
            my $N = [
                map { {t=>_.t,c=>{s=>_.c.s->{$K}}} }
                grep {exists _.c.s->{$K}}
                @$N
            ];
            my $d = ar.d + 1;
            push @say,
            Rw spIII $A $II:III $ooI:oI $N $m $d $s:S;
        }z
        else {
            my @C = grep {exists _.c.s->{$K}} @$N;
            # say "manyC for $K" if @C > 1;
            for (@C) {
                $s->{$K} =
                ooI.mo.st->{ooI.ins}->{_.t}->{$K} =
                    $II->{$K} = _.c.s->{$K};
            } 

        }
    }
    delete ooI.K->{$_} for grep {!$tw->{$_}} keys %{ooI.K};

    if ($ooI eq ooI.mo) {
        II.Ii = $Ii;
        II.ooI = $ooI;
    }
    join "\n",grep{defined}@say;






#
