--- 
I: 
  "0.1": 
    Tut: 
      c: 
        from: Seven/Yools
        s: "A.I.Tut = sub {\nmy ($A,$C,$G,$T,$s,@Me) = @_;\nmy $I = A.I;\nmy $ut = T.ut;\nif (ut.matchTd) {\n    my $d = s.d || die \"confuse\";\n    d.od.s.T.q->{d.e.k} ||= $d;\n    d.od.s.T.m->{d.e.k} ||= $d\n        unless delete T.noTd;\n}\nelse { die\"utrowhat \".wdump 2, $ut }\n};"
      sc: 
        acgt: s
        args: A,C,G,T,s
        code: I
        dige: 22c10e1849d8
        of: I
      t: Tut
      "y": 
        cv: '0.1'
    ajam: 
      c: 
        from: Seven/SevWo
        s: "A.I.ajam = sub {\nmy ($A,$C,$G,$T,$s,@Me) = @_;\nmy $I = A.I;\n\" \\$.ajax('$s').done(function(v) {\"\n    .\" var m = v\".'.split(\"\\n\");'\n    .\" \\$.each(m,function(k,v){ a\\.m(v); }); });\";\n};"
      sc: 
        acgt: s
        args: A,C,G,T,s
        code: I
        dige: d74c0fd04e0e
        of: I
      t: ajam
      "y": 
        cv: '0.1'
    atom: 
      c: 
        from: GeoSo
        s: "A.I.atom = sub {\nmy ($A,$C,$G,$T,@M)=@_;\nmy ($last,$here,@Me) = @M;\nmy $I = A.I;\n# spacin\nhere.dist = here.cv - last.cv;\n# twistin spin inherit\nhere.spin += last.spin;\n# scale local-local change\nhere.rad += here.spin * here.dist * 10;\n# builds rad on rad\nhere.rad += last.rad;\n# distort space + more ways, orbital\n# chuck skeletons for mods\n# adapt M meta for what kinda places things want\n# into constellations of high level things\n# atomised hairs\nhere.zoom ||= last.zoom;\nhere.dist *= here.zoom if here.zoom;\n# and move\nhere.x = last.x + (here.rad ? cos(here.rad) : 0) * here.dist;\nhere.y = last.y + (here.rad ? sin(here.rad) : 1) * here.dist;\n};"
      sc: 
        acgt: last,here
        args: A,C,G,T,last,here
        code: I
        dige: 3771101ba2f7
        of: I
      t: atom
      "y": 
        cv: '0.1'
    convog: 
      c: 
        from: Seven/Yools
        s: "A.I.convog = sub {\nmy ($A,$C,$G,$T,@M)=@_;\nmy ($in,$Q,@Me) = @M;\nmy $I = A.I;\nQ.path && Q.onpa || die \"learn more\";\nfor my $pin (@{Q.path}) {\n    for my $pTn (@{Q.onpa}) {\n        I.d&pass,$pTn,$in;\n    }\n    I.d&pass,$pin,$in;\n}\n};"
      sc: 
        acgt: in,Q
        args: A,C,G,T,in,Q
        code: I
        dige: 1c2079808022
        of: I
      t: convog
      "y": 
        cv: '0.1'
    dlin: 
      c: 
        from: Seven/SevWo
        s: "A.I.dlin = sub {\nmy ($A,$C,$G,$T,@M)=@_;\nmy ($dir,$to,$it,@Me) = @M;\nmy $I = A.I;\nreturn readlink $dir if !defined $to;\nmy $l = \"$dir/$it\";\nmy $is = -l $l;\nreturn if $is && readlink($l) eq $to;\n`unlink $l` if $is;\n`cd $dir; ln -s $to $it`;\n};"
      sc: 
        acgt: dir to it
        args: A,C,G,T,dir,to,it
        code: I
        dige: 8b21164df2a5
        of: I
      t: dlin
      "y": 
        cv: '0.1'
    geo2lin: 
      c: 
        from: GeoSo
        s: "A.I.geo2lin = sub {\nmy ($A,$C,$G,$T,@M)=@_;\nmy ($geo,@Me) = @M;\nmy $I = A.I;\n# shove com toeget\n# OR SOMETHING\n# loses its compressibility as csz\nmy @am = qw'a? ab  x x  y y  r radial  s scale';\nmy @l;\nwhile (@am) {\n    my $k = shift @am;\n    my $v = shift @am;\n    my $sens = $k =~ s/\\?$//;\n    push @l, ($sens && $k).$geo->{$v} if exists $geo->{$v};\n}\nmy $l = join ' ', @l;\n$l\n};"
      sc: 
        acgt: geo
        args: A,C,G,T,geo
        code: I
        dige: b862f494b512
        of: I
      t: geo2lin
      "y": 
        cv: '0.1'
    heq: 
      c: 
        from: Seven/Yools
        s: "A.I.heq = sub {\nmy ($A,$C,$G,$T,@M)=@_;\nmy ($o,$t,@Me) = @M;\nmy $I = A.I;\nif (ref $o && ref $t) {\n    keys %$o == keys %$t && !grep{$o->{$_} ne $t->{$_}}keys %$o\n}\nelsif (!ref $o && !ref $t) {\n    $o eq $t\n}else{0}\n};"
      sc: 
        acgt: o,t
        args: A,C,G,T,o,t
        code: I
        dige: 29e589a1b0cd
        of: I
      t: heq
      "y": 
        cv: '0.1'
    here2geo: 
      c: 
        from: GeoSo
        s: "A.I.here2geo = sub {\nmy ($A,$C,$G,$T,@M)=@_;\nmy ($here,@Me) = @M;\nmy $I = A.I;\nmy $geo = {};\ngeo.rad = here.rad;\n# unwind (into...)\nmy $o = $G::RADIAN*4;\nmy $swish = $o;\n$swish *= -1 if geo.rad < 0;\nmy $i = 0;\ngeo.rad -= $swish until\n    do {$i++>5&&die\"$i muchwind\".ki$here;0}\n    ||\n    $o*-1 < geo.rad && geo.rad < $o;\n# pan to hemisphere...\n# from O- is it in the left hemisphere etc\nmy $rad = geo.rad;\nmy $radleg = -$G::RADIAN;\n$radleg *= -1 unless $rad < -$G::RADIAN && $rad > $G::RADIAN;\n$rad -= $radleg;\ngeo.radial = I.d&ron,$rad;\ngeo.x = here.x;\ngeo.y = here.y;\ngeo.ab = '100' if 1; # w=h=100,ab=1\ngeo.ab = '1' if here.swy eq 'atom';\n# transform about\ngeo.tro = '0 0.5'; # midleft\ngeo.tro = '0 0' if 0; # topleft\n#\nmy $fo = sub { (shift() * 100).'%' };\ngeo.tro = join' ',map{$fo->($_)}split' ',geo.tro;\n\nI.d&geo2lin,$geo;\n};"
      sc: 
        acgt: here
        args: A,C,G,T,here
        code: I
        dige: 1d242d3c5a8a
        of: I
      t: here2geo
      "y": 
        cv: '0.1'
    last2here: 
      c: 
        from: GeoSo
        s: "A.I.last2here = sub {\nmy ($A,$C,$G,$T,@M)=@_;\nmy ($last,$r,$here,@Me) = @M;\nmy $I = A.I;\nhere.x  = last.x = r.x if exists r.x;\nhere.y = last.y = r.y if exists r.y;\nhere.rad = 4*$G::RADIAN * r.spun if exists r.spun;\nhere.zoom = r.zoom if defined r.zoom;\n\nI.d&atom,$last,$here;\n\nhere.spin = r.curve if exists r.curve; # on the level\n#\nhere.x = I.d&ron,here.x;\nhere.y = I.d&ron,here.y;\nhere.rad = I.d&ron,here.rad;\n};"
      sc: 
        acgt: last,r,here
        args: A,C,G,T,last,r,here
        code: I
        dige: 527d4812bb36
        of: I
      t: last2here
      "y": 
        cv: '0.1'
    norp: 
      c: 
        from: Goodat
        s: "A.I.norp = sub {\nmy ($A,$C,$G,$T,@M)=@_;\nmy ($pin,@Me) = @M;\nmy $I = A.I;\nI.pwin || die \"nopwin from pin\";\nsort { I.pwin->($pin,$a) <=> I.pwin->($pin,$b) } @Me;\n};"
      sc: 
        acgt: pin
        args: A,C,G,T,pin
        code: I
        dige: 4629e7c723bc
        of: I
      t: norp
      "y": 
        cv: '0.1'
    oleak: 
      c: 
        from: Seven/Yools
        s: "A.I.oleak = sub {\nmy ($A,$C,$G,$T,@M)=@_;\nmy ($s,$n,@Me) = @M;\nmy $I = A.I;\nlength(wdump $n,$s) < length(wdump $n+1,$s);\n};"
      sc: 
        acgt: s,n
        args: A,C,G,T,s,n
        code: I
        dige: 5eefa2c1ef37
        of: I
      t: oleak
      "y": 
        cv: '0.1'
    pas: 
      c: 
        from: Seven/Yools
        s: "A.I.pas = sub {\nmy ($A,$C,$G,$T,@M)=@_;\nmy ($pin,$d,@Me) = @M;\nmy $I = A.I;\nmy $s = d.s;\nmy $e = d.e;\nmy @ks = $pin eq '*' ? sort keys %$s\n    : exists $s->{$pin} ? $pin\n    : ();\nmap {\n    my $dd;\n    dd.e.k = $_;\n    dd.s = $s->{$_};\n    dd.d = d.d if d.d;\n    $dd;\n} @ks\n};"
      sc: 
        acgt: pin,d
        args: A,C,G,T,pin,d
        code: I
        dige: 03f05738f442
        of: I
      t: pas
      "y": 
        cv: '0.1'
    pass: 
      c: 
        from: Seven/Yools
        s: "A.I.pass = sub {\nmy ($A,$C,$G,$T,@M)=@_;\nmy ($pin,$s,@Me) = @M;\nmy $I = A.I;\n@$s = grep{defined} map { I.d&pas,$pin,$_ } grep{defined} @$s;\n};"
      sc: 
        acgt: pin,s
        args: A,C,G,T,pin,s
        code: I
        dige: c9c0a7ed5036
        of: I
      t: pass
      "y": 
        cv: '0.1'
    pin: 
      c: 
        from: Goodat
        s: "A.I.pin = sub {\nmy ($A,$C,$G,$T,@M)=@_;\nmy ($pin,$way,@Me) = @M;\nmy $I = A.I;\nI.pwin || die \"nopwin from pin\";\nI.pwin->($pin,$way);\n};"
      sc: 
        acgt: pin,way
        args: A,C,G,T,pin,way
        code: I
        dige: 92bca4ae5de7
        of: I
      t: pin
      "y": 
        cv: '0.1'
    pon: 
      c: 
        from: Goodat
        s: "A.I.pon = sub {\nmy ($A,$C,$G,$T,@M)=@_;\nmy ($pin,$way,$s,@Me) = @M;\nmy $I = A.I;\nI.pwin || die \"nopwin from pin\";\nI.pwin->($pin,$way,{et=>$s});\n};"
      sc: 
        acgt: pin,way,s
        args: A,C,G,T,pin,way,s
        code: I
        dige: 52a8b3012945
        of: I
      t: pon
      "y": 
        cv: '0.1'
    pwin: 
      c: 
        from: Goodat
        s: "A.I.pwin = sub {\nmy ($pin,$way,$set,@Me) = @_;\nmy $I = A.I;\nif (exists $way->{$pin}) {\n      my $o = $way->{$pin};\n    $way->{$pin} = set.et if exists set.et;\n    delete $way->{$pin} if set.de;\n    return $o;\n}\nmy @path = split /\\//, $pin;\nmy $h = $way;\nmy $last;\nfor my $p (@path) {\n    if (ref $h ne 'HASH' && ref $h ne 'G') {\n        undef $last;\n        undef $h;\n        last;\n    }\n    $last = [$h,$p];\n    $h = $h->{$p};\n}\nif ($last) {\n    my ($he,$pi) = @$last;\n    $he->{$pi} = set.et if exists set.et;\n    delete $he->{$pi} if set.de;\n}\nreturn $h if defined $h;\n \nreturn undef unless $pin =~ /\\*/;\ndie \"sat rs findy $pin\";\n};"
      sc: 
        acgt: s
        args: pin,way,set
        code: I
        dige: eb1d6545728a
        of: I
      t: pwin
      "y": 
        cv: '0.1'
    ron: 
      c: 
        from: GeoSo
        s: "A.I.ron = sub {\nmy ($A,$C,$G,$T,$s,@Me) = @_;\nmy $I = A.I;\n0.0001 * int(10000*$s)\n};"
      sc: 
        acgt: s
        args: A,C,G,T,s
        code: I
        dige: dcff73406abd
        of: I
      t: ron
      "y": 
        cv: '0.1'
    scIfs: 
      c: 
        from: Seven/Yools
        s: "A.I.scIfs = sub {\nmy ($A,$C,$G,$T,$s,@Me) = @_;\nmy $I = A.I;\nmy @is;\nfor my $k (keys %$s) {\n    my $Q = $s->{$k};\n    my $tot = @{Q.path};\n    my $star = grep{$_ eq '*'} @{Q.path};\n    Q.weig = $tot - $star;\n    \n    my $in = [{s=>{T=>$T}}];\n    my $pi = 0;\n    for my $pin (@{Q.path}) {\n        for my $pTn (@{Q.onpa}) {\n            I.d&pass,$pTn,$in;\n        }\n        I.d&pass,$pin,$in;\n        @$in = map {\n            if (_.d) { # nonroot pattern mutable (into/on/off origin s)\n                _.od ||= _.d;\n                if (my $su = _.od.s.T.q->{_.e.k}) {\n                    $_ = $su;\n                    # deeper knowish\n                }\n            }\n            _.d = $_;\n            _.e.lk = Q.atar->[$pi]||die\"no idea what $pi is\";\n            $_\n        } grep{defined} @$in;\n        $pi++;\n        last if !@$in;\n    }\n    \n    for my $d (@$in) {\n        # now inmost, .od leads above (without pTn inway)\n        # and each d.e.lk calls it something $nk $gk and $wk\n            # and avoid less specific after more specific\n            # or just avoid repeats\n            #   \n            # shaky but index\n            # the fish is shaking but on the deck\n        my $arg;\n        my $up = $d;\n        my $last = $up;\n        my $i = 0;\n        while ($up) {\n            $i++ > 8 && die \"LAST WANDERS\";\n            $arg->{up.e.lk} = up.e.k;\n            if (Q.caps) {\n                for my $k (grep{Q.caps->{$_}} keys %$up) {\n                    $arg->{$k} ||= $up->{$k};\n                }\n            }\n            $last = $up;\n            $up = up.od;\n            if ($up eq $last) {\n                sayre \"C.t (?) refers to itself as .od: \".wdump $last;\n                last;\n            }\n        }\n        \n        arg.d = $d;\n        \n        for my $k (keys %{d.s}) {\n            next if $k eq 'T';\n            $arg->{$k} && die \"Already $k arg of \".wdump[$d,$arg];\n            $arg->{$k} = d.s->{$k};\n        }\n        \n        my $path = \"@{Q.path}\";\n        arg.talk = \"C.t  ($k:$path) C.t C.y.cv\"\n            .\":\\t\".join '/', map{$arg->{$_}} @{Q.atar};\n        d.weig ||= Q.weig;\n        d.path ||= $path;\n        if (d.weig > Q.weig) {\n            say \"Later $path  Q.weig < d.weig  d.path\" if A.J.V > 1;\n            next;\n        }\n        elsif (d.path ne $path) {\n            say \"Moreo $path  Q.weig > d.weig  d.path\" if A.J.V > 1;\n            d.weig = Q.weig;\n            d.path = $path;\n        }\n        push @is, $arg;\n        T.ut.matchTd = 1;\n        # Z/D wad of multiplicity\n        # D args $d and arg, $nk/$ov etc things plucked\n        # they must stay present to later Ds as well\n        # stored T.d path subtlates\n        # 6 ^\n        sayre(ki($arg)) if A.J.V > 1;\n    }\n}\n@is\n};"
      sc: 
        acgt: s
        args: A,C,G,T,s
        code: I
        dige: ded9f3e983ee
        of: I
      t: scIfs
      "y": 
        cv: '0.1'
    slnk: 
      c: 
        from: Seven/SevWo
        s: "A.I.slnk = sub {\nmy ($A,$C,$G,$T,$s,@Me) = @_;\nmy $I = A.I;\nmy $i = readlink $s;\nreturn $i if !@Me;\nmy $e = $Me[0];\nreturn if $i eq $e;\n`unlink $s` if -l $s;\n`ln -s $e $s`;\n};"
      sc: 
        acgt: s
        args: A,C,G,T,s
        code: I
        dige: 9112d4a33f56
        of: I
      t: slnk
      "y": 
        cv: '0.1'
    sorp: 
      c: 
        from: Goodat
        s: "A.I.sorp = sub {\nmy ($A,$C,$G,$T,@M)=@_;\nmy ($pin,@Me) = @M;\nmy $I = A.I;\nI.pwin || die \"nopwin from pin\";\nsort { I.pwin->($pin,$a) cmp I.pwin->($pin,$b) } @Me;\n};"
      sc: 
        acgt: pin
        args: A,C,G,T,pin
        code: I
        dige: 6a54267d00c0
        of: I
      t: sorp
      "y": 
        cv: '0.1'
    wraf: 
      c: 
        from: Seven/SevWo
        s: "A.I.wraf = sub {\nmy ($A,$C,$G,$T,@M)=@_;\nmy ($f,$s,$noappend,@Me) = @M;\nmy $I = A.I;\n$s =~ s/\\n?$/\\n/s if !ref $s;\nG&writef,$f,$s,!$noappend\n};"
      sc: 
        acgt: f s noappend
        args: A,C,G,T,f,s,noappend
        code: I
        dige: d8b449120e40
        of: I
      t: wraf
      "y": 
        cv: '0.1'
    writef: 
      c: 
        from: Seven/SevWo
        s: "A.I.writef = sub {\nmy ($A,$C,$G,$T,@M)=@_;\nmy ($f,$s,$append,@Me) = @M;\nmy $I = A.I;\n(my $d = $f) =~ s/\\/[^\\/]+?$//;\nunless (-d $d) {\n    `mkdir -p $d`;\n}\n\n$s = [$s] if !ref $s;\nmy $li = ref $s eq 'ARRAY' ? join(\"\",map{/\\n$/?$_:\"$_\\n\"}@$s)\n    : die \"Wsome other $f type: $s\";\n\nmy $wa = {};\nwa.append = 1 if $append;\nwrite_file($f,$wa,$li);\nreturn length $li;\n};"
      sc: 
        acgt: f s append
        args: A,C,G,T,f,s,append
        code: I
        dige: 5f790739e82e
        of: I
      t: writef
      "y": 
        cv: '0.1'
Ii: GeoSo vers:HASH + Goodat vers:HASH + Seven vers:HASH + qqlaces vers:HASH + threJ vers:HASH
J: 
  "0.632114": 
    J_632114142: 
      c: 
        from: threJ
        s: "A.I.J_632114142 = sub {\nmy ($A,$C,$G,$T,$s,@Me) = @_;\nmy $I = A.I;\nmy $c = C.c;\nmy $J = C.c.J;\nreturn if exists C.sc.pi;\nA.time = sub {\n    my ($JJ,$q) = @_;\n    $J eq $JJ || die \"wtfJure  J.name   vs JJ.name\";\n    my $r = 1;\n    if ($q == 2) {\n        A.Subtle.time = 1;\n        A.t&time,3,19;\n        $r = 0 if T.pos == 0; # def 1, 0 if no change\n        return $r;\n    }\n    \n    warn \"T.alk other $q\";\n    if ($q == 8) {\n        # until J.most coord attention evaporates\n        # as in pulling on a list\n    }\n    $r\n}\n};"
      sc: 
        acgt: s
        act: 1
        args: A,C,G,T,s
        code: J
        dige: c59b4414eed2
        gk: J
        nk: c
        of: J
        v: cJ
      t: J_632114142
      "y": 
        cv: '0.632114'
Mo: 
  "0.321323": 
    W_321323: 
      c: 
        from: qqlaces
        s: "A.I.W_321323 = sub {\nmy ($A,$C,$G,$T,$s,@Me) = @_;\nmy $I = A.I;\nmy $c = C.c;\nmy $W = C.c.W;\nmy $J = A.J;\nreturn unless J.name eq 'qq';\nmy $f = \"w/u/$W\";\nreturn unless -f $f;\nC.sc.wW = delete C.c.W;\nC.sc.Wf = $f;\n};"
      sc: 
        acgt: s
        act: 1
        args: A,C,G,T,s
        code: Mo
        dige: e3b1d0103a60
        gk: W
        nk: c
        of: Mo
        v: cW
      t: W_321323
      "y": 
        cv: '0.321323'
O: 
  "0.31": 
    tycsc_31: 
      c: 
        from: Seven/Yosc
        s: "A.I.tycsc_31 = sub {\nmy ($A,$C,$G,$T,$s,@Me) = @_;\nmy $I = A.I;\nmy $c = C.c;\nmy $Y = C.c.Y;\nmy $J = C.c.J;\nmy $V = C.c.V;\nmy $k = C.y.k;\nmy $at = C.y.at;\nmy $ta = C.y.ta;\nmy $lv = C.y.lv;\nmy $vl = C.y.vl;\nA.Subtle.Art = 1;\nA.t&Art,33,18;\nat.t = C.t;\nat.y.cv = C.y.cv;\nV.ids->{C.sc.id} = $C if C.sc.id;\nif (ref C.c.s eq 'HASH' && C.c.s.bb) {\n    # an other that is holding this\n    at.c.S = C.c.s eq A.J && C.sc.W ? ''\n        : C.c.s.name || \"unamed\";\n    # makes link\n}\nelsif (exists C.c.s) {\n    at.c.s = C.c.s\n}\n};"
      sc: 
        acgt: s
        act: 1
        args: A,C,G,T,s
        code: O
        dige: 3ee4a43aef1b
        gk: 'Y'
        nk: c
        of: O
        rg: cJ,cV,yk,yat,yta,ylv,yvl
        v: cY
      t: tycsc_31
      "y": 
        cv: '0.31'
  "0.35": 
    J_35: 
      c: 
        from: Seven/SevWo
        s: "A.I.J_35 = sub {\nmy ($A,$C,$G,$T,$s,@Me) = @_;\nmy $I = A.I;\nmy $c = C.c;\nmy $Y = C.c.Y;\nmy $J = C.c.J;\nmy $V = C.c.V;\nmy $k = C.y.k;\nmy $at = C.y.at;\nmy $ta = C.y.ta;\nmy $lv = C.y.lv;\nmy $vl = C.y.vl;\ndelete at.sc.J if C.c.S;\n};"
      sc: 
        acgt: s
        act: 1
        args: A,C,G,T,s
        code: O
        dige: 06a35a3ada53
        gk: 'Y'
        nk: c
        of: O
        rg: cJ,cV,yk,yat,yta,ylv,yvl
        v: cY
      t: J_35
      "y": 
        cv: '0.35'
  "0.36": 
    Jin_36: 
      c: 
        from: Seven/Yosc
        s: "A.I.Jin_36 = sub {\nmy ($A,$C,$G,$T,$s,@Me) = @_;\nmy $I = A.I;\nmy $c = C.c;\nmy $Y = C.c.Y;\nmy $J = C.c.J;\nmy $V = C.c.V;\nmy $k = C.y.k;\nmy $at = C.y.at;\nmy $ta = C.y.ta;\nmy $lv = C.y.lv;\nmy $vl = C.y.vl;\n# so osci ^ can C.sc. > at.sc.bla\nat.sc = {%{C.sc}};\ndelete at.sc->{$_} for qw'idly nspc path yspc';\n# haps to be crate later somewhere if we oWl/S\ndelete ta.V if ref ta.V eq 'HASH' && !keys %{ta.V};\n\nif (my $v = at.sc.J) { # J unifies -\n    at.sc.J = v.name;\n    \n    return if C.sc.qz;\n    return if C.sc.W && Y.root.sc.oWl;\n    return if Y.root.sc.oJl;\n    return if C.sc.W && defined at.c.S && at.c.S eq '';\n    \n    my $nV = v.El->{V.name};\n    return sayre \"no V.name on v.name $v: El: \"\n        .join', ',sort keys %{v.El}\n        if !$nV;\n    \n    my $rv = nV.rv || {LIES=>\"from v.name\"};\n    return sayre \"no rv V.name on v.name\"\n        if !nV.rv;\n    \n    lv.do->{V.name} = $rv;\n    at.V->{V.name} = rv.i;\n    \n    delete at.c.s # words about what its looking\n        if at.sc.pi && exists at.c.s && (Y.root.sc.ux || at.sc.qs);\n}\nA.t&Art,6,33;\n};"
      sc: 
        acgt: s
        act: 1
        args: A,C,G,T,s
        code: O
        dige: 184119058b96
        gk: 'Y'
        nk: c
        of: O
        rg: cJ,cV,yk,yat,yta,ylv,yvl
        v: cY
      t: Jin_36
      "y": 
        cv: '0.36'
  "0.37": 
    Josl_37: 
      c: 
        from: Seven/Yosc
        s: "A.I.Josl_37 = sub {\nmy ($A,$C,$G,$T,$s,@Me) = @_;\nmy $I = A.I;\nmy $c = C.c;\nmy $Y = C.c.Y;\nmy $J = C.c.J;\nmy $V = C.c.V;\nmy $k = C.y.k;\nmy $at = C.y.at;\nmy $ta = C.y.ta;\nmy $lv = C.y.lv;\nmy $vl = C.y.vl;\nif (C.c.root) { # / unifies  <\n    J.at ||= {} if J.name eq 'qq';\n    J.at || die\"You must make Jat for J.name\";\n    %{J.at} = %{C.sc};\n    if (at.sc.pi && exists at.c.s && Y.root.sc.ux) {\n        delete at.c.s if @{V.os}; # itself, 'pi'\n    }\n    lv.voso = 1;\n    for my $ik (@{V.os}) {\n        my $iv = V.lv->{$ik};\n        my $C = iv.C;\n        do { sayre(\"Skip C.t: self in self\") for 1..6 } && next\n            if C.sc.J && C.sc.J eq A.J;\n        lv.do->{$ik} = $iv;\n        at.V->{$ik} = iv.i;\n    }\n}\n};"
      sc: 
        acgt: s
        act: 1
        args: A,C,G,T,s
        code: O
        dige: a236c10cc79a
        gk: 'Y'
        nk: c
        of: O
        rg: cJ,cV,yk,yat,yta,ylv,yvl
        v: cY
      t: Josl_37
      "y": 
        cv: '0.37'
  "0.38": 
    sel_38: 
      c: 
        from: Seven/Yosc
        s: "A.I.sel_38 = sub {\nmy ($A,$C,$G,$T,$s,@Me) = @_;\nmy $I = A.I;\nmy $c = C.c;\nmy $Y = C.c.Y;\nmy $J = C.c.J;\nmy $V = C.c.V;\nmy $k = C.y.k;\nmy $at = C.y.at;\nmy $ta = C.y.ta;\nmy $lv = C.y.lv;\nmy $vl = C.y.vl;\nA.t&Art,8,6;\nat.y = at.y.cv if keys %{at.y} == 1 && exists at.y.cv;\n# ^ to imply outsideness\ndelete at.sc.>$_ for qw'ux oWl qs sq';\n# ^ important noises remain on C\nat.c.>$_ = delete at.sc.>$_\n    for grep { exists at.sc.>$_ }\n    qw'Wid Mid tag id ht cod',\n    split',',delete at.sc.pc;\n# ^ some sc upgrade to c\n\ndelete at.c.s if at.c.s eq 'pi' && C.t eq 'pi' && C.y.cv == 0.9;\nif (ref at.c.s && J.mo.J && J.mo.J.at.ux) {\n    my $was = delete at.c.s;\n    at.c.q = \"$was\";\n    if (!at.sc.J) {\n        at.c.s = at.c.q;\n        at.c.q = 's';\n    }\n}\n};"
      sc: 
        acgt: s
        act: 1
        args: A,C,G,T,s
        code: O
        dige: bde787a369e0
        gk: 'Y'
        nk: c
        of: O
        rg: cJ,cV,yk,yat,yta,ylv,yvl
        v: cY
      t: sel_38
      "y": 
        cv: '0.38'
S: 
  "0.24": 
    Y_24: 
      c: 
        from: Seven/Ysleep
        s: "A.I.Y_24 = sub {\nmy ($A,$C,$G,$T,$s,@Me) = @_;\nmy $I = A.I;\nmy $c = C.c;\nmy $Y = C.c.Y;\nmy $J = C.c.J;\nmy $V = C.c.V;\nif (my $di = Y.lo->{C.y.k}) {\n    if (keys %$di == 1 && di.diff) {\n        my $CC = V.tv->{C.y.k};\n        if (!$CC) {\n            sayre \"never heard of (V_tv) diff J.name : C.y.k \";\n            return 1;\n        }\n        for my $tk (keys %{di.diff}) {\n            if ($tk eq 'geo') {\n                T.to = 1 if !I.d&heq,C.sc.geo,CC.sc.geo;\n            }\n            elsif ($tk eq '') {\n                T.to = 1 unless ref C.c.s && C.sc.dige && C.sc.dige eq CC.sc.dige;\n            }\n            else {\n                #saybl \"J.name C.y.k has diffre: $tk\";\n                T.to = 1;\n            }\n        }\n    }\n    else {\n        T.to = 1;\n    }\n}\nT.whack = 1 if T.to;\n};"
      sc: 
        acgt: s
        act: 1
        args: A,C,G,T,s
        code: S
        dige: a9af61f0407a
        gk: 'Y'
        nk: c
        of: S
        rg: J,V
        v: cY
      t: Y_24
      "y": 
        cv: '0.24'
  "0.25": 
    Y_25: 
      c: 
        from: Seven/Ysleep
        s: "A.I.Y_25 = sub {\nmy ($A,$C,$G,$T,$s,@Me) = @_;\nmy $I = A.I;\nmy $c = C.c;\nmy $Y = C.c.Y;\nmy $J = C.c.J;\nmy $V = C.c.V;\nif (my $JJ = C.sc.J) {\n    my $ta = V.ta->{C.y.k};\n    if (my $nV = JJ.El->{V.name}) {\n        my $iv = nV.rv;\n        my $oi = ta.V->{V.name};\n        if ($oi ne iv.i) {\n            T.to = 1;\n        }\n    }\n    else {\n        sayre \"no El V.name on JJ.name\";\n    }\n}\nT.whack = 1 if T.to;\n};"
      sc: 
        acgt: s
        act: 1
        args: A,C,G,T,s
        code: S
        dige: 5459cdae3ff7
        gk: 'Y'
        nk: c
        of: S
        rg: J,V
        v: cY
      t: Y_25
      "y": 
        cv: '0.25'
Sev: 
  "0.1": 
    hup: 
      c: 
        from: Seven/Yools
        s: "A.I.hup = sub {\nmy ($A,$C,$G,$T,$s,@Me) = @_;\nmy $I = A.I;\nmy $CC = {%$s};\n$CC->{$_} = {%{$CC->{$_}}} for grep {ref $CC->{$_} eq 'HASH'} keys %$CC;\n$CC;\n};"
      sc: 
        acgt: s
        args: A,C,G,T,s
        code: Sev
        dige: 51f3a1aa316a
        of: Sev
      t: hup
      "y": 
        cv: '0.1'
  "0.2": 
    JYV_2: 
      c: 
        from: Seven/Yuni
        s: "A.I.JYV_2 = sub {\nmy ($A,$C,$G,$T,$s,@Me) = @_;\nmy $I = A.I;\nmy $c = C.c;\nmy $Y = C.c.Y;\nmy $J = C.c.J;\nmy $V = C.c.V;\nfor my $K ('Y','V') {\n    my $name = C.c->{$K};\n    $name || die \"No $K\";\n    C.c->{$K} = I.d&Elj,$J,$name;\n}\n};"
      sc: 
        acgt: s
        act: 1
        args: A,C,G,T,s
        code: Sev
        dige: 7f9be12e32a9
        gk: 'Y'
        nk: c
        of: Sev
        rg: J,V
        v: cY
      t: JYV_2
      "y": 
        cv: '0.2'
  "0.21": 
    dElvis_21: 
      c: 
        from: Seven/Yuni
        s: "A.I.dElvis_21 = sub {\nmy ($A,$C,$G,$T,$s,@Me) = @_;\nmy $I = A.I;\nmy $c = C.c;\nmy $Y = C.c.Y;\nmy $J = C.c.J;\nmy $V = C.c.V;\nI.d&Elvis,$J,$Y;\n\nV.os = [];\nA.mo.retu && die \"J.name's  V.name: Already is  A.mo.retu.name\";\nA.mo.retu = $V;\n};"
      sc: 
        acgt: s
        act: 1
        args: A,C,G,T,s
        code: Sev
        dige: b85863667e13
        gk: 'Y'
        nk: c
        of: Sev
        rg: J,V
        v: cY
      t: dElvis_21
      "y": 
        cv: '0.21'
  "0.22": 
    root_22: 
      c: 
        from: Seven/Yuni
        s: "A.I.root_22 = sub {\nmy ($A,$C,$G,$T,$s,@Me) = @_;\nmy $I = A.I;\nmy $c = C.c;\nmy $Y = C.c.Y;\nmy $J = C.c.J;\nmy $V = C.c.V;\nmy $rC = Y.tv->{\"0.9\\t/\"}\n    || Y.tv->{\"0.9\\t\".J.name}\n    || Y.tv->{\"0.9\\t\".J.uname}\n    || die \" noroot J.name: showing 0.9s: \"\n        .wdump [map{ki $_}values %{Y.v->{0.9}}];\nrC.c.root = 1;\nY.root = $rC;\nmy $N = [grep { $_ ne $rC } @{Y.vs}];\n$N = [] if rC.sc.dark;\nunshift @$N, $rC;\n# T.Z.$incv = 1||$setAcv makes A,Celf, \n# A.mo.re array others (yarN) which may Acquire\npush @{A.mo.re->{0.22}||=[]}, map{\n    my $CC = I.d&hup,$_;\n    # all spreads out to play Y/V\n    I.d&xot,$CC,{c=>C.c};\n    [undef,$CC]\n}grep{!_.sc_nosc}@$N;\n# Make root.c.N = new Cs ^ (Zelike)\nT.not = 1; # or more 78ism\n};"
      sc: 
        acgt: s
        act: 1
        args: A,C,G,T,s
        code: Sev
        dige: c35a2cac19d0
        gk: 'Y'
        nk: c
        of: Sev
        rg: J,V
        v: cY
      t: root_22
      "y": 
        cv: '0.22'
  "0.23": 
    Y_23: 
      c: 
        from: Seven/Yuni
        s: "A.I.Y_23 = sub {\nmy ($A,$C,$G,$T,$s,@Me) = @_;\nmy $I = A.I;\nmy $c = C.c;\nmy $Y = C.c.Y;\nmy $J = C.c.J;\nmy $V = C.c.V;\nC.y.k = C.y.cv.\"\\t\".C.t;\npush @{V.os}, C.y.k unless C.c.root;\nY.root = $C if C.c.root;\n# how happening to thingk\n# must ,,,, A.t to gain perception (not mid ex but should)\n# but yeah add things as lines rejoin\nA.Iso.O = 1; # also ex O as I (whoever we are)\nA.Subtle.S = 1; # only-S ex slips through time unwide\n};"
      sc: 
        acgt: s
        act: 1
        args: A,C,G,T,s
        code: Sev
        dige: 4fede416feb6
        gk: 'Y'
        nk: c
        of: Sev
        rg: J,V
        v: cY
      t: Y_23
      "y": 
        cv: '0.23'
  "0.231": 
    Y_231: 
      c: 
        from: Seven/Yuni
        s: "A.I.Y_231 = sub {\nmy ($A,$C,$G,$T,$s,@Me) = @_;\nmy $I = A.I;\nmy $c = C.c;\nmy $Y = C.c.Y;\nmy $J = C.c.J;\nmy $V = C.c.V;\nreturn if C.c.root;\nT.to = 0;\nA.t&S,6,2;\nT.not = 1 if !delete T.to;\n};"
      sc: 
        acgt: s
        act: 1
        args: A,C,G,T,s
        code: Sev
        dige: d89780f65222
        gk: 'Y'
        nk: c
        of: Sev
        rg: J,V
        v: cY
      t: Y_231
      "y": 
        cv: '0.231'
  "0.289": 
    Y_289: 
      c: 
        from: Seven/Yuni
        s: "A.I.Y_289 = sub {\nmy ($A,$C,$G,$T,$s,@Me) = @_;\nmy $I = A.I;\nmy $c = C.c;\nmy $Y = C.c.Y;\nmy $J = C.c.J;\nmy $V = C.c.V;\nmy $k = C.y.k;\nV.alv->{$k} = C.y.lv = {k=>$k,C=>$C};\nC.y.at = {};\nC.y.ta = V.ta->{$k};\nC.y.vl = V.lv->{$k};\n};"
      sc: 
        acgt: s
        act: 1
        args: A,C,G,T,s
        code: Sev
        dige: 5e5b886c408d
        gk: 'Y'
        nk: c
        of: Sev
        rg: J,V,yk
        v: cY
      t: Y_289
      "y": 
        cv: '0.289'
  "0.345": 
    root_345: 
      c: 
        from: Seven/Yuni
        s: "A.I.root_345 = sub {\nmy ($A,$C,$G,$T,$s,@Me) = @_;\nmy $I = A.I;\nmy $c = C.c;\nmy $root = C.c.root;\nmy $J = C.c.J;\nmy $Y = C.c.Y;\nmy $V = C.c.V;\nif (C.c.root) { \n    Y.root = $C;\n    T.Z->{0.6} = 0.345;\n    T.not = 1;\n}\n};"
      sc: 
        acgt: s
        act: 1
        args: A,C,G,T,s
        code: Sev
        dige: 13edc743e022
        gk: root
        nk: c
        of: Sev
        rg: J,Y,V
        v: croot
      t: root_345
      "y": 
        cv: '0.345'
  "0.41": 
    force_41: 
      c: 
        from: Seven/Yeomp
        s: "A.I.force_41 = sub {\nmy ($A,$C,$G,$T,$s,@Me) = @_;\nmy $I = A.I;\nmy $c = C.c;\nmy $Y = C.c.Y;\nmy $J = C.c.J;\nmy $V = C.c.V;\nmy $k = C.y.k;\nmy $at = C.y.at;\nmy $ta = C.y.ta;\nmy $lv = C.y.lv;\nmy $vl = C.y.vl;\nat.c.el = 1;\nlv.force = 'el';\nlv.selfs = 1;\nlv.grab = [at.t, at.y, {el=>8}];\nlv.rmnsc = [at.t, at.y, {el=>9}];\n# ID makes possible to throw into the W\n#    (most J) tiniest specs of change\n# receiving with ID means most.J knows ID to Jpath (bottom up easy)\n#   also wants to know originating light cone \n# - figure that once things on screen again!\n# maybe 8regate\n# greg annotates the flyby\n};"
      sc: 
        acgt: s
        act: 1
        args: A,C,G,T,s
        code: Sev
        dige: 512e623f12f7
        gk: 'Y'
        nk: c
        of: Sev
        rg: cJ,cV,yk,yat,yta,ylv,yvl
        v: cY
      t: force_41
      "y": 
        cv: '0.41'
  "0.42": 
    mkTd_42: 
      c: 
        from: Seven/Yod
        s: "A.I.mkTd_42 = sub {\nmy ($A,$C,$G,$T,$s,@Me) = @_;\nmy $I = A.I;\nmy $c = C.c;\nmy $Y = C.c.Y;\nmy $J = C.c.J;\nmy $V = C.c.V;\nmy $k = C.y.k;\nmy $at = C.y.at;\nmy $ta = C.y.ta;\nmy $lv = C.y.lv;\nmy $vl = C.y.vl;\nfor my $nk (qw't y c sc V') {\n    my $v = $at->{$nk};\n    my $o = $ta->{$nk};\n    I.d&heq,$v,$o && next;\n    my $d;\n    d.v = $v;\n    d.o = $o;\n    if (ref $v eq 'HASH') {\n        my $wt = Rw wtfch $Jb:v $Yb:o;\n        for my $wk (qw'gone diff new still') {\n            for my $gk (sort keys %{$wt->{$wk}}) {\n                my $dd = {};\n                dd.v = $at->{$nk}->{$gk};\n                dd.o = $ta->{$nk}->{$gk};\n                d.T.d->{$gk} && die \"C.t: $nk,$gk ($v) rep.\";\n                d.T.d->{$gk} =\n                    dd.T.d->{$wk} = $dd;\n                sayyl \"C.t  $nk $gk is $wk    (dd.v <=-=- dd.o)\" if A.V&od;\n            }\n        }\n    }\n    else {\n        my $wk = !$vl ? \"new\"\n            : !exists $at->{$nk} ? \"gone\"\n            : \"diff\";\n        my $dd = {%$d};\n        sayyl \"C.t  $nk is  $wk (dd.v <=-=- dd.o)\" if A.V&od;\n        d.T.d.s =\n            dd.T.d->{$wk} = $dd;\n    }\n    T.d->{$nk} = $d;\n}\n};"
      sc: 
        acgt: s
        act: 1
        args: A,C,G,T,s
        code: Sev
        dige: eb98f12be3a7
        gk: 'Y'
        nk: c
        of: Sev
        rg: cJ,cV,yk,yat,yta,ylv,yvl
        v: cY
      t: mkTd_42
      "y": 
        cv: '0.42'
  "0.4311": 
    tsnew_4311: 
      c: 
        from: Seven/Ydo
        s: "A.I.tsnew_4311 = sub {\nmy ($A,$C,$G,$T,$s,@Me) = @_;\nmy $I = A.I;\nmy $d = s.d;\nmy $o = s.o;\nmy $v = s.v;\nmy $talk = s.talk;\nmy $nk = s.nk;\nmy $gk = s.gk;\nmy $wk = s.wk;\nmy $c = C.c;\nmy $Y = C.c.Y;\nmy $J = C.c.J;\nmy $V = C.c.V;\nmy $k = C.y.k;\nmy $at = C.y.at;\nmy $ta = C.y.ta;\nmy $lv = C.y.lv;\nmy $vl = C.y.vl;\nlv.op.t = 1;\n};"
      sc: 
        Ifs: 
          Td: 
            atar: 
              - nk
              - gk
              - wk
            onpa: 
              - T
              - d
            path: 
              - t
              - s
              - new
        Td: t/s/new
        acgt: s
        act: 1
        args: A,C,G,T,s
        code: Sev
        dige: e46803308771
        gk: 'Y'
        nk: c
        of: Sev
        rg: cJ,cV,yk,yat,yta,ylv,yvl
        sr: d,o,v,talk,nk,gk,wk
        v: cY
      t: tsnew_4311
      "y": 
        cv: '0.4311'
  "0.4312": 
    ysnew_4312: 
      c: 
        from: Seven/Ydo
        s: "A.I.ysnew_4312 = sub {\nmy ($A,$C,$G,$T,$s,@Me) = @_;\nmy $I = A.I;\nmy $d = s.d;\nmy $o = s.o;\nmy $v = s.v;\nmy $talk = s.talk;\nmy $nk = s.nk;\nmy $gk = s.gk;\nmy $wk = s.wk;\nmy $c = C.c;\nmy $Y = C.c.Y;\nmy $J = C.c.J;\nmy $V = C.c.V;\nmy $k = C.y.k;\nmy $at = C.y.at;\nmy $ta = C.y.ta;\nmy $lv = C.y.lv;\nmy $vl = C.y.vl;\nlv.op.y = 1;\n};"
      sc: 
        Ifs: 
          Td: 
            atar: 
              - nk
              - gk
              - wk
            onpa: 
              - T
              - d
            path: 
              - 'y'
              - s
              - new
        Td: y/s/new
        acgt: s
        act: 1
        args: A,C,G,T,s
        code: Sev
        dige: df313ca26bf9
        gk: 'Y'
        nk: c
        of: Sev
        rg: cJ,cV,yk,yat,yta,ylv,yvl
        sr: d,o,v,talk,nk,gk,wk
        v: cY
      t: ysnew_4312
      "y": 
        cv: '0.4312'
  "0.4321": 
    cgone_4321: 
      c: 
        from: Seven/Ydo
        s: "A.I.cgone_4321 = sub {\nmy ($A,$C,$G,$T,$s,@Me) = @_;\nmy $I = A.I;\nmy $d = s.d;\nmy $o = s.o;\nmy $v = s.v;\nmy $talk = s.talk;\nmy $nk = s.nk;\nmy $gk = s.gk;\nmy $wk = s.wk;\nmy $c = C.c;\nmy $Y = C.c.Y;\nmy $J = C.c.J;\nmy $V = C.c.V;\nmy $k = C.y.k;\nmy $at = C.y.at;\nmy $ta = C.y.ta;\nmy $lv = C.y.lv;\nmy $vl = C.y.vl;\nsayre \"how delete a c $gk\";\nlv.op.c.>$gk = 9;\n};"
      sc: 
        Ifs: 
          Td: 
            atar: 
              - nk
              - gk
              - wk
            onpa: 
              - T
              - d
            path: 
              - c
              - "*"
              - gone
        Td: c/*/gone
        acgt: s
        act: 1
        args: A,C,G,T,s
        code: Sev
        dige: 00b856c61433
        gk: 'Y'
        nk: c
        of: Sev
        rg: cJ,cV,yk,yat,yta,ylv,yvl
        sr: d,o,v,talk,nk,gk,wk
        v: cY
      t: cgone_4321
      "y": 
        cv: '0.4321'
    cnew_4321: 
      c: 
        from: Seven/Ydo
        s: "A.I.cnew_4321 = sub {\nmy ($A,$C,$G,$T,$s,@Me) = @_;\nmy $I = A.I;\nmy $d = s.d;\nmy $o = s.o;\nmy $v = s.v;\nmy $talk = s.talk;\nmy $nk = s.nk;\nmy $gk = s.gk;\nmy $wk = s.wk;\nmy $c = C.c;\nmy $Y = C.c.Y;\nmy $J = C.c.J;\nmy $V = C.c.V;\nmy $k = C.y.k;\nmy $at = C.y.at;\nmy $ta = C.y.ta;\nmy $lv = C.y.lv;\nmy $vl = C.y.vl;\nsayre \"how inject a c $gk\" if $vl;\nlv.op.c.>$gk = 9;\n};"
      sc: 
        Ifs: 
          Td: 
            atar: 
              - nk
              - gk
              - wk
            onpa: 
              - T
              - d
            path: 
              - c
              - "*"
              - new
        Td: c/*/new
        acgt: s
        act: 1
        args: A,C,G,T,s
        code: Sev
        dige: 6aba43bc8bf4
        gk: 'Y'
        nk: c
        of: Sev
        rg: cJ,cV,yk,yat,yta,ylv,yvl
        sr: d,o,v,talk,nk,gk,wk
        v: cY
      t: cnew_4321
      "y": 
        cv: '0.4321'
  "0.4323": 
    cqdiff_4323: 
      c: 
        from: Seven/Ydo
        s: "A.I.cqdiff_4323 = sub {\nmy ($A,$C,$G,$T,$s,@Me) = @_;\nmy $I = A.I;\nmy $d = s.d;\nmy $o = s.o;\nmy $v = s.v;\nmy $talk = s.talk;\nmy $nk = s.nk;\nmy $gk = s.gk;\nmy $wk = s.wk;\nmy $c = C.c;\nmy $Y = C.c.Y;\nmy $J = C.c.J;\nmy $V = C.c.V;\nmy $k = C.y.k;\nmy $at = C.y.at;\nmy $ta = C.y.ta;\nmy $lv = C.y.lv;\nmy $vl = C.y.vl;\nlv.pur.c.>$gk = 1;\n};"
      sc: 
        Ifs: 
          Td: 
            atar: 
              - nk
              - gk
              - wk
            onpa: 
              - T
              - d
            path: 
              - c
              - q
              - diff
        Td: c/q/diff
        acgt: s
        act: 1
        args: A,C,G,T,s
        code: Sev
        dige: 49895516d469
        gk: 'Y'
        nk: c
        of: Sev
        rg: cJ,cV,yk,yat,yta,ylv,yvl
        sr: d,o,v,talk,nk,gk,wk
        v: cY
      t: cqdiff_4323
      "y": 
        cv: '0.4323'
    csdiff_4323: 
      c: 
        from: Seven/Ydo
        s: "A.I.csdiff_4323 = sub {\nmy ($A,$C,$G,$T,$s,@Me) = @_;\nmy $I = A.I;\nmy $d = s.d;\nmy $o = s.o;\nmy $v = s.v;\nmy $talk = s.talk;\nmy $nk = s.nk;\nmy $gk = s.gk;\nmy $wk = s.wk;\nmy $c = C.c;\nmy $Y = C.c.Y;\nmy $J = C.c.J;\nmy $V = C.c.V;\nmy $k = C.y.k;\nmy $at = C.y.at;\nmy $ta = C.y.ta;\nmy $lv = C.y.lv;\nmy $vl = C.y.vl;\nlv.pur.c.>$gk = 1;\nlv.pur.c.ht = 1 if at.c.ht;\n};"
      sc: 
        Ifs: 
          Td: 
            atar: 
              - nk
              - gk
              - wk
            onpa: 
              - T
              - d
            path: 
              - c
              - s
              - diff
        Td: c/s/diff
        acgt: s
        act: 1
        args: A,C,G,T,s
        code: Sev
        dige: 1743478d0c2c
        gk: 'Y'
        nk: c
        of: Sev
        rg: cJ,cV,yk,yat,yta,ylv,yvl
        sr: d,o,v,talk,nk,gk,wk
        v: cY
      t: csdiff_4323
      "y": 
        cv: '0.4323'
  "0.4324": 
    cdiff_4324: 
      c: 
        from: Seven/Ydo
        s: "A.I.cdiff_4324 = sub {\nmy ($A,$C,$G,$T,$s,@Me) = @_;\nmy $I = A.I;\nmy $d = s.d;\nmy $o = s.o;\nmy $v = s.v;\nmy $talk = s.talk;\nmy $nk = s.nk;\nmy $gk = s.gk;\nmy $wk = s.wk;\nmy $c = C.c;\nmy $Y = C.c.Y;\nmy $J = C.c.J;\nmy $V = C.c.V;\nmy $k = C.y.k;\nmy $at = C.y.at;\nmy $ta = C.y.ta;\nmy $lv = C.y.lv;\nmy $vl = C.y.vl;\nsayre \"how to c dif $gk\".slim(30,$v).\" <--- \".slim(30,$o);\nlv.op.c.>$gk = 9;\n};"
      sc: 
        Ifs: 
          Td: 
            atar: 
              - nk
              - gk
              - wk
            onpa: 
              - T
              - d
            path: 
              - c
              - "*"
              - diff
        Td: c/*/diff
        acgt: s
        act: 1
        args: A,C,G,T,s
        code: Sev
        dige: 9a858e23de67
        gk: 'Y'
        nk: c
        of: Sev
        rg: cJ,cV,yk,yat,yta,ylv,yvl
        sr: d,o,v,talk,nk,gk,wk
        v: cY
      t: cdiff_4324
      "y": 
        cv: '0.4324'
    cstill_4324: 
      c: 
        from: Seven/Ydo
        s: "A.I.cstill_4324 = sub {\nmy ($A,$C,$G,$T,$s,@Me) = @_;\nmy $I = A.I;\nmy $d = s.d;\nmy $o = s.o;\nmy $v = s.v;\nmy $talk = s.talk;\nmy $nk = s.nk;\nmy $gk = s.gk;\nmy $wk = s.wk;\nmy $c = C.c;\nmy $Y = C.c.Y;\nmy $J = C.c.J;\nmy $V = C.c.V;\nmy $k = C.y.k;\nmy $at = C.y.at;\nmy $ta = C.y.ta;\nmy $lv = C.y.lv;\nmy $vl = C.y.vl;\n# ya\n};"
      sc: 
        Ifs: 
          Td: 
            atar: 
              - nk
              - gk
              - wk
            onpa: 
              - T
              - d
            path: 
              - c
              - "*"
              - still
        Td: c/*/still
        acgt: s
        act: 1
        args: A,C,G,T,s
        code: Sev
        dige: e85e4ed23bb6
        gk: 'Y'
        nk: c
        of: Sev
        rg: cJ,cV,yk,yat,yta,ylv,yvl
        sr: d,o,v,talk,nk,gk,wk
        v: cY
      t: cstill_4324
      "y": 
        cv: '0.4324'
  "0.4331": 
    scnew_4331: 
      c: 
        from: Seven/Ydo
        s: "A.I.scnew_4331 = sub {\nmy ($A,$C,$G,$T,$s,@Me) = @_;\nmy $I = A.I;\nmy $d = s.d;\nmy $o = s.o;\nmy $v = s.v;\nmy $talk = s.talk;\nmy $nk = s.nk;\nmy $gk = s.gk;\nmy $wk = s.wk;\nmy $c = C.c;\nmy $Y = C.c.Y;\nmy $J = C.c.J;\nmy $V = C.c.V;\nmy $k = C.y.k;\nmy $at = C.y.at;\nmy $ta = C.y.ta;\nmy $lv = C.y.lv;\nmy $vl = C.y.vl;\nlv.pur.sc.>$gk = 1;\n};"
      sc: 
        Ifs: 
          Td: 
            atar: 
              - nk
              - gk
              - wk
            onpa: 
              - T
              - d
            path: 
              - sc
              - "*"
              - new
        Td: sc/*/new
        acgt: s
        act: 1
        args: A,C,G,T,s
        code: Sev
        dige: 614490596c0f
        gk: 'Y'
        nk: c
        of: Sev
        rg: cJ,cV,yk,yat,yta,ylv,yvl
        sr: d,o,v,talk,nk,gk,wk
        v: cY
      t: scnew_4331
      "y": 
        cv: '0.4331'
  "0.4332": 
    scgone_4332: 
      c: 
        from: Seven/Ydo
        s: "A.I.scgone_4332 = sub {\nmy ($A,$C,$G,$T,$s,@Me) = @_;\nmy $I = A.I;\nmy $d = s.d;\nmy $o = s.o;\nmy $v = s.v;\nmy $talk = s.talk;\nmy $nk = s.nk;\nmy $gk = s.gk;\nmy $wk = s.wk;\nmy $c = C.c;\nmy $Y = C.c.Y;\nmy $J = C.c.J;\nmy $V = C.c.V;\nmy $k = C.y.k;\nmy $at = C.y.at;\nmy $ta = C.y.ta;\nmy $lv = C.y.lv;\nmy $vl = C.y.vl;\nsayre \"how delete a sc $gk\";\nlv.op.sc.>$gk = 9;\n};"
      sc: 
        Ifs: 
          Td: 
            atar: 
              - nk
              - gk
              - wk
            onpa: 
              - T
              - d
            path: 
              - sc
              - "*"
              - gone
        Td: sc/*/gone
        acgt: s
        act: 1
        args: A,C,G,T,s
        code: Sev
        dige: 6e0b38489caa
        gk: 'Y'
        nk: c
        of: Sev
        rg: cJ,cV,yk,yat,yta,ylv,yvl
        sr: d,o,v,talk,nk,gk,wk
        v: cY
      t: scgone_4332
      "y": 
        cv: '0.4332'
  "0.4333": 
    scdiff_4333: 
      c: 
        from: Seven/Ydo
        s: "A.I.scdiff_4333 = sub {\nmy ($A,$C,$G,$T,$s,@Me) = @_;\nmy $I = A.I;\nmy $d = s.d;\nmy $o = s.o;\nmy $v = s.v;\nmy $talk = s.talk;\nmy $nk = s.nk;\nmy $gk = s.gk;\nmy $wk = s.wk;\nmy $c = C.c;\nmy $Y = C.c.Y;\nmy $J = C.c.J;\nmy $V = C.c.V;\nmy $k = C.y.k;\nmy $at = C.y.at;\nmy $ta = C.y.ta;\nmy $lv = C.y.lv;\nmy $vl = C.y.vl;\nlv.pur.sc.>$gk = 1;\n};"
      sc: 
        Ifs: 
          Td: 
            atar: 
              - nk
              - gk
              - wk
            onpa: 
              - T
              - d
            path: 
              - sc
              - "*"
              - diff
        Td: sc/*/diff
        acgt: s
        act: 1
        args: A,C,G,T,s
        code: Sev
        dige: 12f023c33f21
        gk: 'Y'
        nk: c
        of: Sev
        rg: cJ,cV,yk,yat,yta,ylv,yvl
        sr: d,o,v,talk,nk,gk,wk
        v: cY
      t: scdiff_4333
      "y": 
        cv: '0.4333'
  "0.4334": 
    scstill_4334: 
      c: 
        from: Seven/Ydo
        s: "A.I.scstill_4334 = sub {\nmy ($A,$C,$G,$T,$s,@Me) = @_;\nmy $I = A.I;\nmy $d = s.d;\nmy $o = s.o;\nmy $v = s.v;\nmy $talk = s.talk;\nmy $nk = s.nk;\nmy $gk = s.gk;\nmy $wk = s.wk;\nmy $c = C.c;\nmy $Y = C.c.Y;\nmy $J = C.c.J;\nmy $V = C.c.V;\nmy $k = C.y.k;\nmy $at = C.y.at;\nmy $ta = C.y.ta;\nmy $lv = C.y.lv;\nmy $vl = C.y.vl;\n# ya\n};"
      sc: 
        Ifs: 
          Td: 
            atar: 
              - nk
              - gk
              - wk
            onpa: 
              - T
              - d
            path: 
              - sc
              - "*"
              - still
        Td: sc/*/still
        acgt: s
        act: 1
        args: A,C,G,T,s
        code: Sev
        dige: 85dbc2765275
        gk: 'Y'
        nk: c
        of: Sev
        rg: cJ,cV,yk,yat,yta,ylv,yvl
        sr: d,o,v,talk,nk,gk,wk
        v: cY
      t: scstill_4334
      "y": 
        cv: '0.4334'
  "0.434": 
    Vsup_434: 
      c: 
        from: Seven/YdoV
        s: "A.I.Vsup_434 = sub {\nmy ($A,$C,$G,$T,$s,@Me) = @_;\nmy $I = A.I;\nmy $d = s.d;\nmy $o = s.o;\nmy $v = s.v;\nmy $talk = s.talk;\nmy $nk = s.nk;\nmy $gk = s.gk;\nmy $wk = s.wk;\nmy $c = C.c;\nmy $Y = C.c.Y;\nmy $J = C.c.J;\nmy $V = C.c.V;\nmy $k = C.y.k;\nmy $at = C.y.at;\nmy $ta = C.y.ta;\nmy $lv = C.y.lv;\nmy $vl = C.y.vl;\nd.iv = lv.do->{$gk};\nd.ov = vl.do->{$gk};\nd.ov && d.ov.i && (d.ov.i eq $o || warn \"no ovi ogk  d.ov.i eq $o\");\nT.noTd = 1;\n};"
      sc: 
        Ifs: 
          Td: 
            atar: 
              - nk
              - gk
              - wk
            onpa: 
              - T
              - d
            path: 
              - V
              - "*"
              - "*"
        Td: V/*/*
        acgt: s
        act: 1
        args: A,C,G,T,s
        code: Sev
        dige: 38b7620dbad0
        gk: 'Y'
        nk: c
        of: Sev
        rg: cJ,cV,yk,yat,yta,ylv,yvl
        sr: d,o,v,talk,nk,gk,wk
        v: cY
      t: Vsup_434
      "y": 
        cv: '0.434'
  "0.4341": 
    Vnew_4341: 
      c: 
        from: Seven/YdoV
        s: "A.I.Vnew_4341 = sub {\nmy ($A,$C,$G,$T,$s,@Me) = @_;\nmy $I = A.I;\nmy $d = s.d;\nmy $o = s.o;\nmy $v = s.v;\nmy $talk = s.talk;\nmy $nk = s.nk;\nmy $gk = s.gk;\nmy $wk = s.wk;\nmy $iv = s.iv;\nmy $ov = s.ov;\nmy $c = C.c;\nmy $Y = C.c.Y;\nmy $J = C.c.J;\nmy $V = C.c.V;\nmy $k = C.y.k;\nmy $at = C.y.at;\nmy $ta = C.y.ta;\nmy $lv = C.y.lv;\nmy $vl = C.y.vl;\n# may like to grab the element before it\n# like a curve continuing\n$iv || sayre(\"News cap no iv: \".wdump $s) && return;\nlv.od.new->{$gk} = $iv;\n};"
      sc: 
        Ifs: 
          Td: 
            atar: 
              - nk
              - gk
              - wk
            caps: 
              iv: 1
              ov: 1
            onpa: 
              - T
              - d
            path: 
              - V
              - "*"
              - new
        Td: V/*/new
        Tdarge: iv,ov
        acgt: s
        act: 1
        args: A,C,G,T,s
        code: Sev
        dige: e2137d1849a0
        gk: 'Y'
        nk: c
        of: Sev
        rg: cJ,cV,yk,yat,yta,ylv,yvl
        sr: d,o,v,talk,nk,gk,wk,iv,ov
        v: cY
      t: Vnew_4341
      "y": 
        cv: '0.4341'
  "0.4342": 
    Vgone_4342: 
      c: 
        from: Seven/YdoV
        s: "A.I.Vgone_4342 = sub {\nmy ($A,$C,$G,$T,$s,@Me) = @_;\nmy $I = A.I;\nmy $d = s.d;\nmy $o = s.o;\nmy $v = s.v;\nmy $talk = s.talk;\nmy $nk = s.nk;\nmy $gk = s.gk;\nmy $wk = s.wk;\nmy $iv = s.iv;\nmy $ov = s.ov;\nmy $c = C.c;\nmy $Y = C.c.Y;\nmy $J = C.c.J;\nmy $V = C.c.V;\nmy $k = C.y.k;\nmy $at = C.y.at;\nmy $ta = C.y.ta;\nmy $lv = C.y.lv;\nmy $vl = C.y.vl;\nif (!ov.rmnsc) {\n    #\n    lv.op.V->{$gk} = 'oio';\n    return sayre \"no rm: A.J.name => (C.t C.y.cv) C.sc.J.name\";\n    #\n    #    .wdump 3, [$at,$ta,\"Cfor $gk pmtp\", $vl,'','',$lv,\"ESS:\", $s];\n}\n!$iv || die \"gone had iv\";\n# ^ sc plumb its destruction\n# can void if our c reframes by implicitly clearing\nlv.od.go->{$gk} = $ov;\n};"
      sc: 
        Ifs: 
          Td: 
            atar: 
              - nk
              - gk
              - wk
            caps: 
              iv: 1
              ov: 1
            onpa: 
              - T
              - d
            path: 
              - V
              - "*"
              - gone
        Td: V/*/gone
        Tdarge: iv,ov
        acgt: s
        act: 1
        args: A,C,G,T,s
        code: Sev
        dige: fc96d1428857
        gk: 'Y'
        nk: c
        of: Sev
        rg: cJ,cV,yk,yat,yta,ylv,yvl
        sr: d,o,v,talk,nk,gk,wk,iv,ov
        v: cY
      t: Vgone_4342
      "y": 
        cv: '0.4342'
  "0.4343": 
    Vdiff_4343: 
      c: 
        from: Seven/YdoV
        s: "A.I.Vdiff_4343 = sub {\nmy ($A,$C,$G,$T,$s,@Me) = @_;\nmy $I = A.I;\nmy $d = s.d;\nmy $o = s.o;\nmy $v = s.v;\nmy $talk = s.talk;\nmy $nk = s.nk;\nmy $gk = s.gk;\nmy $wk = s.wk;\nmy $iv = s.iv;\nmy $ov = s.ov;\nmy $c = C.c;\nmy $Y = C.c.Y;\nmy $J = C.c.J;\nmy $V = C.c.V;\nmy $k = C.y.k;\nmy $at = C.y.at;\nmy $ta = C.y.ta;\nmy $lv = C.y.lv;\nmy $vl = C.y.vl;\nif (iv.c eq ov.c) {\n    iv.sc eq ov.sc && do {\n        sayre \"SAME FLUC SC $gk\";\n        die \"same c fluc sc $gk\";\n    };\n    my $in = @{iv.sc};\n    my $out = @{ov.sc};\n    if (@{iv.sc} > @{ov.sc}) {\n        saybl \"$talk GROWS\" if J.V > 2;\n        lv.od.gr->{$gk} = $iv;\n    }\n    else {\n        warn \"WTFF \".wdump 2,[$iv,$ov];\n    }\n}\nelse {\n    saybl \"$talk  REPLACES c\";\n    lv.od.over->{$gk} = $iv;\n}\n};"
      sc: 
        Ifs: 
          Td: 
            atar: 
              - nk
              - gk
              - wk
            caps: 
              iv: 1
              ov: 1
            onpa: 
              - T
              - d
            path: 
              - V
              - "*"
              - diff
        Td: V/*/diff
        Tdarge: iv,ov
        acgt: s
        act: 1
        args: A,C,G,T,s
        code: Sev
        dige: 28228454c7fe
        gk: 'Y'
        nk: c
        of: Sev
        rg: cJ,cV,yk,yat,yta,ylv,yvl
        sr: d,o,v,talk,nk,gk,wk,iv,ov
        v: cY
      t: Vdiff_4343
      "y": 
        cv: '0.4343'
  "0.4344": 
    Vstill_4344: 
      c: 
        from: Seven/YdoV
        s: "A.I.Vstill_4344 = sub {\nmy ($A,$C,$G,$T,$s,@Me) = @_;\nmy $I = A.I;\nmy $d = s.d;\nmy $o = s.o;\nmy $v = s.v;\nmy $talk = s.talk;\nmy $nk = s.nk;\nmy $gk = s.gk;\nmy $wk = s.wk;\nmy $iv = s.iv;\nmy $ov = s.ov;\nmy $c = C.c;\nmy $Y = C.c.Y;\nmy $J = C.c.J;\nmy $V = C.c.V;\nmy $k = C.y.k;\nmy $at = C.y.at;\nmy $ta = C.y.ta;\nmy $lv = C.y.lv;\nmy $vl = C.y.vl;\nlv.od.ll->{$gk} = $iv;\n};"
      sc: 
        Ifs: 
          Td: 
            atar: 
              - nk
              - gk
              - wk
            caps: 
              iv: 1
              ov: 1
            onpa: 
              - T
              - d
            path: 
              - V
              - "*"
              - still
        Td: V/*/still
        Tdarge: iv,ov
        acgt: s
        act: 1
        args: A,C,G,T,s
        code: Sev
        dige: 3d89de02f749
        gk: 'Y'
        nk: c
        of: Sev
        rg: cJ,cV,yk,yat,yta,ylv,yvl
        sr: d,o,v,talk,nk,gk,wk,iv,ov
        v: cY
      t: Vstill_4344
      "y": 
        cv: '0.4344'
  "0.48": 
    doTd_48: 
      c: 
        from: Seven/Yod
        s: "A.I.doTd_48 = sub {\nmy ($A,$C,$G,$T,$s,@Me) = @_;\nmy $I = A.I;\nmy $c = C.c;\nmy $Y = C.c.Y;\nmy $J = C.c.J;\nmy $V = C.c.V;\nmy $k = C.y.k;\nmy $at = C.y.at;\nmy $ta = C.y.ta;\nmy $lv = C.y.lv;\nmy $vl = C.y.vl;\n# pick T bones, dot Is\n# a 9 for the Td (ill 8) consciousness rendezvou\nfor my $nk (sort keys %{T.d}) {\n    my $d = T.d->{$nk};\n    for my $gk (sort keys %{d.T.d}) {\n        my $dd = d.T.d->{$gk};\n        if (dd.T.m) {\n            #say \"Answers  $nk $gk: \".wdump 4, $dd;\n        }\n        elsif (dd.T.q) {\n            #say \"probly $nk $gk\";\n        }\n        else {\n            sayre \"Unclear $nk $gk:  \". ki $dd;\n        }\n    }\n}\ndelete T.d;\n};"
      sc: 
        acgt: s
        act: 1
        args: A,C,G,T,s
        code: Sev
        dige: 0e2fc66f2fda
        gk: 'Y'
        nk: c
        of: Sev
        rg: cJ,cV,yk,yat,yta,ylv,yvl
        v: cY
      t: doTd_48
      "y": 
        cv: '0.48'
  "0.49": 
    Y_49: 
      c: 
        from: Seven/Yuni
        s: "A.I.Y_49 = sub {\nmy ($A,$C,$G,$T,$s,@Me) = @_;\nmy $I = A.I;\nmy $c = C.c;\nmy $Y = C.c.Y;\nmy $J = C.c.J;\nmy $V = C.c.V;\nmy $k = C.y.k;\nmy $at = C.y.at;\nV.ta->{$k} = I.d&hup,$at;\nV.tv->{$k} = I.d&hup,$C;\n};"
      sc: 
        acgt: s
        act: 1
        args: A,C,G,T,s
        code: Sev
        dige: 559f92385507
        gk: 'Y'
        nk: c
        of: Sev
        rg: J,V,yk,yat
        v: cY
      t: Y_49
      "y": 
        cv: '0.49'
  "0.52": 
    OlOMP_52: 
      c: 
        from: Seven/Yeomp
        s: "A.I.OlOMP_52 = sub {\nmy ($A,$C,$G,$T,$s,@Me) = @_;\nmy $I = A.I;\nmy $c = C.c;\nmy $Y = C.c.Y;\nmy $J = C.c.J;\nmy $V = C.c.V;\nmy $k = C.y.k;\nmy $at = C.y.at;\nmy $ta = C.y.ta;\nmy $lv = C.y.lv;\nmy $vl = C.y.vl;\nRw OMP $J $A $I $C $k $Y $V $at $ta $lv $vl;\n};"
      sc: 
        acgt: s
        act: 1
        args: A,C,G,T,s
        code: Sev
        dige: ee8a4456bc58
        gk: 'Y'
        nk: c
        of: Sev
        rg: cJ,cV,yk,yat,yta,ylv,yvl
        v: cY
      t: OlOMP_52
      "y": 
        cv: '0.52'
  "0.58": 
    Y_58: 
      c: 
        from: Seven/Yuni
        s: "A.I.Y_58 = sub {\nmy ($A,$C,$G,$T,$s,@Me) = @_;\nmy $I = A.I;\nmy $c = C.c;\nmy $Y = C.c.Y;\nmy $J = C.c.J;\nmy $V = C.c.V;\nmy $k = C.y.k;\nmy $lv = C.y.lv;\nmy $vl = C.y.vl;\nV.lv->{$k} = $lv;\nif (C.c.root) {\n    V.rl = $vl;\n    V.rv = $lv;\n    Rw TNews $J $talk:A.talk $rl:V.rl $rv:V.rv\n        if J.V || A.V&N;\n}\n};"
      sc: 
        acgt: s
        act: 1
        args: A,C,G,T,s
        code: Sev
        dige: ea9d41e73b18
        gk: 'Y'
        nk: c
        of: Sev
        rg: J,V,yk,ylv,yvl
        v: cY
      t: Y_58
      "y": 
        cv: '0.58'
  "0.582": 
    root_582: 
      c: 
        from: Seven/SevWo
        s: "A.I.root_582 = sub {\nmy ($A,$C,$G,$T,$s,@Me) = @_;\nmy $I = A.I;\nmy $c = C.c;\nmy $root = C.c.root;\nmy $lv = C.y.lv;\nmy $vl = C.y.vl;\nreturn unless A.J.most.J eq A.J || A.J.C.c.Wo;\nmy $r = G&scd,$lv,$vl;\nreturn unless @{r.z};\nA.bangdesk.bang.sevwoe = sub {\n    sayre \" was in em section: \".wdump 5, $r;\n};\nC.c.em && die'wtf';\n\nmy $em = C.c.em = {};\nem.lines = r.z;\nem.i = @{r.oldz};\n\nA.Subtle.em = 1;\nA.t&em,6,2;\n};"
      sc: 
        acgt: s
        act: 1
        args: A,C,G,T,s
        code: Sev
        dige: ed9e989dba5a
        gk: root
        nk: c
        of: Sev
        rg: ylv,yvl
        v: croot
      t: root_582
      "y": 
        cv: '0.582'
em: 
  "0.21": 
    em_21: 
      c: 
        from: Seven/SevWo/Meta
        s: "A.I.em_21 = sub {\nmy ($A,$C,$G,$T,$s,@Me) = @_;\nmy $I = A.I;\nmy $c = C.c;\nmy $em = C.c.em;\nem.lines || die \"Not lines\";\nem.hitime = hitime();\nem.is.W = C.sc.Wid || A.J.id;\nem.is.M = C.sc.Mid || A.J.name;\nem.id = em.is.W.'.'.(0+em.i);\n};"
      sc: 
        acgt: s
        act: 1
        args: A,C,G,T,s
        code: em
        dige: e66800053d42
        gk: em
        nk: c
        of: em
        v: cem
      t: em_21
      "y": 
        cv: '0.21'
  "0.24": 
    sq_24: 
      c: 
        from: Seven/SevWo/Meta
        s: "A.I.sq_24 = sub {\nmy ($A,$C,$G,$T,$s,@Me) = @_;\nmy $I = A.I;\nmy $sc = C.sc;\nmy $sq = C.sc.sq;\nmy $em = C.c.em;\nem.lines = Rw $sq $N:em.lines $em $J:A.J;\n};"
      sc: 
        acgt: s
        act: 1
        args: A,C,G,T,s
        cg: em
        code: em
        dige: 17abc19ebcc9
        gk: sq
        nk: sc
        nov: 1
        nv: scsq
        of: em
        rg: em
        v: scsq
      t: sq_24
      "y": 
        cv: '0.24'
  "0.3": 
    jslines_3: 
      c: 
        from: Seven/SevWo/Meta
        s: "A.I.jslines_3 = sub {\nmy ($A,$C,$G,$T,$s,@Me) = @_;\nmy $I = A.I;\nmy $sc = C.sc;\nmy $jslines = C.sc.jslines;\nmy $J = C.c.J;\nmy $em = C.c.em;\nRw EmJSlines $A $J $em $C $T;\n};"
      sc: 
        acgt: s
        act: 1
        args: A,C,G,T,s
        cg: J,em
        code: em
        dige: 9c47bab70c61
        gk: jslines
        nk: sc
        nov: 1
        nv: scjslines
        of: em
        rg: J,em
        v: scjslines
      t: jslines_3
      "y": 
        cv: '0.3'
    ressur_3: 
      c: 
        from: Seven/SevWo/Meta
        s: "A.I.ressur_3 = sub {\nmy ($A,$C,$G,$T,$s,@Me) = @_;\nmy $I = A.I;\nmy $sc = C.sc;\nmy $ressur = C.sc.ressur;\nmy $J = C.c.J;\nmy $em = C.c.em;\nsaybl \"Ressurrecting $ressur ...\";\ndie \"zomp $ressur\" if $ressur =~ /\\W/;\nmy $resu = \"life/W/$ressur\";\ndie \"bno JSlines\" unless -e $resu;\nif (G.Jsem) {\n    my $q = G&ajam,$resu;\n    say \"Sending $resu via Jsem\";\n    return G.Jsem->($q);\n}\n`cd life; ln -s ../W/$ressur J/em.id\\.c`;\nmy $catch = sjson {y=>J=>id=>em.id};\nI.d&writef,\"life/J\\.s\",$catch,1;\nT.whack = 1; # out of em\n};"
      sc: 
        acgt: s
        act: 1
        args: A,C,G,T,s
        cg: J,em
        code: em
        dige: 5ba05f2fb6b4
        gk: ressur
        nk: sc
        nov: 1
        nv: scressur
        of: em
        rg: J,em
        v: scressur
      t: ressur_3
      "y": 
        cv: '0.3'
    ux_3: 
      c: 
        from: Seven/SevWo/Meta
        s: "A.I.ux_3 = sub {\nmy ($A,$C,$G,$T,$s,@Me) = @_;\nmy $I = A.I;\nmy $sc = C.sc;\nmy $ux = C.sc.ux;\nmy $em = C.c.em;\nif (ref em.lines) {\n    my $M = em.lines;\n    if ($ux < 2) {\n        $M = ['','',{W=>G.t},{z=>$M}]\n    }\n    em.lines = [sjson($M)];\n}\nC.sc.Wc = 1;\nreturn sayyl \"Was router for G.W.name\" if C.c.J eq G.W;\nmy $J = G.oin;\nn GW\n#\n};"
      sc: 
        acgt: s
        act: 1
        args: A,C,G,T,s
        cg: em
        code: em
        dige: 4dd4f3a02ae3
        gk: ux
        nk: sc
        nov: 1
        nv: scux
        of: em
        rg: em
        v: scux
      t: ux_3
      "y": 
        cv: '0.3'
  "0.446": 
    Wc_446: 
      c: 
        from: Seven/SevWo/Wuts
        s: "A.I.Wc_446 = sub {\nmy ($A,$C,$G,$T,$s,@Me) = @_;\nmy $I = A.I;\nmy $sc = C.sc;\nmy $Wc = C.sc.Wc;\nmy $J = C.c.J;\nmy $em = C.c.em;\nsaybl join\"\\n\",\"Downing em.is.M: em.is.W: \",\n    map{!ref $_ ? $_ : wdump 5,$_} @{em.lines}\n    if A.V&W;\nI.d&writef,\"life/W/em.is.W\\.c\",em.lines,em.i;\n\nC.c.as = !C.c.os;\nC.c.As = C.c.as;\nC.sc.meta = 1;\nC.sc.speak = 1 if C.c.as;\nC.sc.takeover = 1 if C.c.As;\nsaybl \"WHITESPACE S em.is.M\" if C.c.os;\n};"
      sc: 
        acgt: s
        act: 1
        args: A,C,G,T,s
        cg: J,em
        code: em
        dige: 491ccd2fc8a3
        gk: Wc
        nk: sc
        nov: 1
        nv: scWc
        of: em
        rg: J,em
        v: scWc
      t: Wc_446
      "y": 
        cv: '0.446'
  "0.47": 
    meta_47: 
      c: 
        from: Seven/SevWo/Wuts
        s: "A.I.meta_47 = sub {\nmy ($A,$C,$G,$T,$s,@Me) = @_;\nmy $I = A.I;\nmy $sc = C.sc;\nmy $meta = C.sc.meta;\nmy $em = C.c.em;\nG.M->{em.is.M} = A.J;\nG.Wh->{em.is.W} && return;\nG.Wh->{em.is.W} = A.J;\nmy $me = I.d&hup,$em;\ndelete me.lines;\nI.d&writef,\"life/W/em.is.W\\.i\",sjson($me);\n};"
      sc: 
        acgt: s
        act: 1
        args: A,C,G,T,s
        cg: em
        code: em
        dige: 72e0fe23dbb2
        gk: meta
        nk: sc
        nov: 1
        nv: scmeta
        of: em
        rg: em
        v: scmeta
      t: meta_47
      "y": 
        cv: '0.47'
  "0.48": 
    speak_48: 
      c: 
        from: Seven/SevWo/Wuts
        s: "A.I.speak_48 = sub {\nmy ($A,$C,$G,$T,$s,@Me) = @_;\nmy $I = A.I;\nmy $sc = C.sc;\nmy $speak = C.sc.speak;\nmy $em = C.c.em;\nreturn if G.Jlone;\n\nmy $jf = \"life/J/em.id\\.c\";\nmy $l = I.d&writef,$jf,em.lines;\nif (G.Jsem) {\n    if ($l > 4000) {\n        sayre \"Big em.is.M: $l\";\n        my $q = G&ajam,$jf;\n        sayyl \"Sending in $q\";\n        G.Jsem->($q);\n    }\n    else {\n        G.Jsem->($em);\n    }\n}\n\nI.d&writef,\"life/J\\.s\",sjson({y=>'J',id=>em.id}),1;\n};"
      sc: 
        acgt: s
        act: 1
        args: A,C,G,T,s
        cg: em
        code: em
        dige: 1d8ce23c0a44
        gk: speak
        nk: sc
        nov: 1
        nv: scspeak
        of: em
        rg: em
        v: scspeak
      t: speak_48
      "y": 
        cv: '0.48'
  "0.49": 
    takeover_49: 
      c: 
        from: Seven/SevWo/Wuts
        s: "A.I.takeover_49 = sub {\nmy ($A,$C,$G,$T,$s,@Me) = @_;\nmy $I = A.I;\nmy $sc = C.sc;\nmy $takeover = C.sc.takeover;\nmy $em = C.c.em;\nG&dlin,'life/W',\"em.is.W\\.c\",\"em.is.M\";\n};"
      sc: 
        acgt: s
        act: 1
        args: A,C,G,T,s
        cg: em
        code: em
        dige: 3f588750befb
        gk: takeover
        nk: sc
        nov: 1
        nv: sctakeover
        of: em
        rg: em
        v: sctakeover
      t: takeover_49
      "y": 
        cv: '0.49'
oJ: 
  "0.344": 
    J_344: 
      c: 
        from: threJ
        s: "A.I.J_344 = sub {\nmy ($A,$C,$G,$T,$s,@Me) = @_;\nmy $I = A.I;\nmy $c = C.c;\nmy $J = C.c.J;\nmy $ins = sub { my $J = shift; $J ne J.mo.J ? \"J.mo.J.name ' J.name\" : J.name };\nif (C.c.e) {\n    my $new = !J.A.first ? \"(first!)\":\"\";\n    A.V&E &&\n    say $ins->(A.J).\"   is elvising to  \".$ins->($J).\" $new\\n    \"\n        .\" C.t  \".ki(C.c).\"     \".ki(C.sc);\n    C.c.elv = delete C.c.e if $new;\n    # do over after osc (or time2 could in middle)\n    # donow, may wat\n    A.Iso.th = 1;\n}\nelse {\n    A.J eq $J && die sayre \"THreJ does Celt A.J.name   \".(C.c.e && ki C.c.e);\n    #saybl $ins->(A.J).\" can create -----> \".$ins->($J);\n    if (J.ev.amb) {\n        Rw J.ev.amb $J;\n    }\n}\n};"
      sc: 
        acgt: s
        act: 1
        args: A,C,G,T,s
        code: oJ
        dige: ebaa64a40530
        gk: J
        nk: c
        of: oJ
        v: cJ
      t: J_344
      "y": 
        cv: '0.344'
  "0.76": 
    elv_76: 
      c: 
        from: threJ
        s: "A.I.elv_76 = sub {\nmy ($A,$C,$G,$T,$s,@Me) = @_;\nmy $I = A.I;\nmy $c = C.c;\nmy $elv = C.c.elv;\nmy $J = C.c.J;\nC.c.e = delete C.c.elv;\n\nRw hevt $J elv76;\n\nif (T.oke) {\n    die \"76 thoughtself J.name\" if A.J eq $J;\n    say \"Tanking 76 into J.name\";\n    Rw waited $J;\n    return;\n}\nT.pos = 1 unless defined T.pos;\nT.pos &&\n    Rw waito $J $C;\n};"
      sc: 
        acgt: s
        act: 1
        args: A,C,G,T,s
        code: oJ
        dige: 8a5f475d0e75
        gk: elv
        nk: c
        of: oJ
        rg: J
        v: celv
      t: elv_76
      "y": 
        cv: '0.76'
th: 
  "0.36": 
    e_36: 
      c: 
        from: threJ
        s: "A.I.e_36 = sub {\nmy ($A,$C,$G,$T,$s,@Me) = @_;\nmy $I = A.I;\nmy $c = C.c;\nmy $e = C.c.e;\nmy $J = C.c.J;\n$J || warn \"e no J\";\n# no J being tricks for handulation, event energy, unless T.oke\ndelete A.Iso.oJ;\n\nRw hevt $J e36;\n\nif (T.oke) {\n    die \"thoughts of a thous J.name\" if A.J eq $J;\n    delete A.Iso.th;\n    A.Iso.oJ = 1;\n    A.ztime = 6;\n    return say \"Tanking into J.name\";\n}\nT.pos = 1 unless defined T.pos;\nT.pos &&\n    Rw waito $J $C;\n};"
      sc: 
        acgt: s
        act: 1
        args: A,C,G,T,s
        code: th
        dige: e372a9abcbf0
        gk: e
        nk: c
        of: th
        rg: J
        v: ce
      t: e_36
      "y": 
        cv: '0.36'
  "0.4": 
    J_4: 
      c: 
        from: threJ
        s: "A.I.J_4 = sub {\nmy ($A,$C,$G,$T,$s,@Me) = @_;\nmy $I = A.I;\nmy $c = C.c;\nmy $J = C.c.J;\nreturn;\n};"
      sc: 
        acgt: s
        act: 1
        args: A,C,G,T,s
        code: th
        dige: 9e08d12fdb54
        gk: J
        nk: c
        of: th
        v: cJ
      t: J_4
      "y": 
        cv: '0.4'
  "0.769": 
    e_769: 
      c: 
        from: threJ
        s: "A.I.e_769 = sub {\nmy ($A,$C,$G,$T,$s,@Me) = @_;\nmy $I = A.I;\nmy $c = C.c;\nmy $e = C.c.e;\nmy $J = C.c.J;\nT.oke = 1; # unpin\n};"
      sc: 
        acgt: s
        act: 1
        args: A,C,G,T,s
        code: th
        dige: 83d6bf60ff98
        gk: e
        nk: c
        of: th
        rg: J
        v: ce
      t: e_769
      "y": 
        cv: '0.769'
time: 
  "0.2": 
    elv_2: 
      c: 
        from: threJ
        s: "A.I.elv_2 = sub {\nmy ($A,$C,$G,$T,$s,@Me) = @_;\nmy $I = A.I;\nmy $c = C.c;\nmy $elv = C.c.elv;\nmy $J = C.c.J;\nC.c.e = delete C.c.elv;\n\nRw hevt $J elv2;\n\nT.pos = 1 unless defined T.pos;\n# time true, complete vector, unless we cat a list\n};"
      sc: 
        acgt: s
        act: 1
        args: A,C,G,T,s
        code: time
        dige: 988db357aba7
        gk: elv
        nk: c
        of: time
        rg: J
        v: celv
      t: elv_2
      "y": 
        cv: '0.2'
