--- 
I: 
  "0.1": 
    mkD: 
      c: 
        el: 1
        s: "A.I.mkD = sub {\n    my ($A,$C,$G,$T,@M)=@_;\n    my ($pin,$ar,@Me) = @M;\n    my $I = A.I;\n    my $D;\n    D.point = $pin;\n    if (my $C = ar.__D) {\n        delete ar.__D;\n        D.bab = C.c.s || die \"N s\".ki $C;\n        D.noise .= C.sc.dige if C.sc.dige;\n        D.babnon = 1 if C.sc.bab eq 'non';\n        D.Verb = 1;\n    }\n    D.ar = $ar;\n    D.name = join ' ', D.point, sort keys %{D.ar};\n    D.sign = \"Z\";\n    D.talk = join' ',grep{defined}map{$D->{$_}}qw'sign name noise';\n    $D;\n};\n"
      sc: 
        acgt: pin,ar
        args: A,C,G,T,pin,ar
        code: I 1
        dige: 974b297c1911
        gro: Goodat
      t: mkD
      "y": 
        cv: '0.3'
        cvt: 0.3	C.t
        p: qq/Goodat/Goodat
    pin: 
      c: 
        el: 1
        s: "A.I.pin = sub {\n    my ($A,$C,$G,$T,@M)=@_;\n    my ($pin,$way,@Me) = @M;\n    my $I = A.I;\n    I.pwin || die \"nopwin from pin\";\n    I.pwin->($pin,$way);\n};\n"
      sc: 
        acgt: pin,way
        args: A,C,G,T,pin,way
        code: I 1
        dige: 82803a8c20f2
        gro: Goodat
      t: pin
      "y": 
        cv: '0.3'
        cvt: 0.3	C.t
        p: qq/Goodat/Goodat
    pon: 
      c: 
        el: 1
        s: "A.I.pon = sub {\n    my ($A,$C,$G,$T,@M)=@_;\n    my ($pin,$way,$s,@Me) = @M;\n    my $I = A.I;\n    I.pwin || die \"nopwin from pin\";\n    I.pwin->($pin,$way,{et=>$s});\n};\n"
      sc: 
        acgt: pin,way,s
        args: A,C,G,T,pin,way,s
        code: I 1
        dige: e37d81abf9f1
        gro: Goodat
      t: pon
      "y": 
        cv: '0.3'
        cvt: 0.3	C.t
        p: qq/Goodat/Goodat
    pwin: 
      c: 
        el: 1
        s: "A.I.pwin = sub {\n    my ($pin,$way,$set,@Me) = @_;\n    my $I = A.I;\n    if (exists $way->{$pin}) {\n          my $o = $way->{$pin};\n        $way->{$pin} = set.et if exists set.et;\n        delete $way->{$pin} if set.de;\n        return $o;\n    }\n    my @path = split /\\/|\\./, $pin;\n    my $h = $way;\n    my $last;\n    for my $p (@path) {\n        if (ref $h ne 'HASH' && ref $h ne 'G') {\n            undef $last;\n            undef $h;\n            last;\n        }\n        $last = [$h,$p];\n        $h = $h->{$p};\n        # ref = T makes it look for jointed rest of path in tiedinto {}\n        # then T collapses the feely data mesh\n    }\n    if ($last) {\n        my ($he,$pi) = @$last;\n        $he->{$pi} = set.et if exists set.et;\n        delete $he->{$pi} if set.de;\n    }\n    return $h if defined $h;\n    \n    return undef unless $pin =~ /\\*/;\n    die \"sat rs findy $pin\";\n};\n"
      sc: 
        acgt: s
        args: pin,way,set
        code: I 1
        dige: 41ad5cef7aed
        gro: Goodat
      t: pwin
      "y": 
        cv: '0.3'
        cvt: 0.3	C.t
        p: qq/Goodat/Goodat
J: 
  "0.6211": 
    J_6211: 
      c: 
        el: 1
        s: "A.I.J_6211 = sub {\n    my ($A,$C,$G,$T,$s,@Me) = @_;\n    my $I = A.I;\n    my $c = C.c;\n    my $J = C.c.J;\n    my $M = [];\n    my $y = {o=>$M};\n    J.oy = $y;\n    \n    return if exists C.c.pi;\n    \n    if (A.ztime < 9) {\n        if (A.jr&bol) {\n            sayre \"STOPPING \".ki($C) for 1..3;\n            # TODO stop\n        }\n        A.bangdesk.aft.unblocknine = A.jr&bol,9;\n    }\n    A.bangdesk.bang.bang_ts = sub {\n        A.jr&bang_ts,hitime\n    };\n    \n    C.c.pin = J.name;\n};\n"
      sc: 
        acgt: s
        act: 1
        args: A,C,G,T,s
        code: J 6211
        dige: 5ddc711a102e
        gk: J
        gro: Jiterbug
        nk: c
        v: cJ
      t: J_6211
      "y": 
        cv: '0.6211'
        cvt: 0.6211	C.t
        p: qq/Jiterbug/Jiterbug
  "0.6211211": 
    J_6211211: 
      c: 
        el: 1
        s: "A.I.J_6211211 = sub {\n    my ($A,$C,$G,$T,$s,@Me) = @_;\n    my $I = A.I;\n    my $c = C.c;\n    my $J = C.c.J;\n    my $x = A.J.pix || J.mo.J.pix || return;\n    Rw Foldout $x $A $C $J $T $y:J.oy;\n};\n"
      sc: 
        acgt: s
        act: 1
        args: A,C,G,T,s
        code: J 6211211
        dige: 5d27efc43d08
        gk: J
        gro: Foli
        nk: c
        v: cJ
      t: J_6211211
      "y": 
        cv: '0.621121'
        cvt: 0.621121	C.t
        p: qq/Foli/Foli
  "0.6212": 
    J_6212: 
      c: 
        el: 1
        s: "A.I.J_6212 = sub {\n    my ($A,$C,$G,$T,$s,@Me) = @_;\n    my $I = A.I;\n    my $c = C.c;\n    my $J = C.c.J;\n    return unless exists C.c.pi;\n    \n    die'csnod' if $C ne J.C;\n    J.cv = (C.c.gp && C.c.gp.cv) || C.c.cv || 0.6;\n    my $path = C.sc.pi||die'nopi';\n    if (J.A.d > 9) {\n        $path = 'text';\n        warn \"J.name J.A.d limit to text\";\n    }\n    C.c.pin = \"pi/$path\";\n};\n"
      sc: 
        acgt: s
        act: 1
        args: A,C,G,T,s
        code: J 6212
        dige: dd3968d99abd
        gk: J
        gro: Jiterbug
        nk: c
        v: cJ
      t: J_6212
      "y": 
        cv: '0.6212'
        cvt: 0.6212	C.t
        p: qq/Jiterbug/Jiterbug
  "0.631": 
    J_631: 
      c: 
        el: 1
        s: "A.I.J_631 = sub {\n    my ($A,$C,$G,$T,$s,@Me) = @_;\n    my $I = A.I;\n    my $c = C.c;\n    my $J = C.c.J;\n    A.coi = I.d&pha,$J,'ako';\n};\n"
      sc: 
        acgt: s
        act: 1
        args: A,C,G,T,s
        code: J 631
        dige: 59b0dc2b2481
        gk: J
        gro: Jiterbug
        nk: c
        v: cJ
      t: J_631
      "y": 
        cv: '0.631'
        cvt: 0.631	C.t
        p: qq/Jiterbug/Jiterbug
  "0.66": 
    J_66: 
      c: 
        el: 1
        s: "A.I.J_66 = sub {\n    my ($A,$C,$G,$T,$s,@Me) = @_;\n    my $I = A.I;\n    my $c = C.c;\n    my $J = C.c.J;\n    my $ar = {%{C.c}};\n    ar.s = '' if !exists ar.s;\n    ar.u = ar.s;\n    ar.pin = C.c.pin || die \"nopin\";\n    my $y = J.oy;\n    my $M = y.o;\n    \n    Rw ar.pin + $A $C $G $T $I $J $M $y;\n    \n    if (T.iM) {\n        J.Oy || die \"no JOy J.name\";\n        ref J.Oy.o eq 'HASH' || die \"J.name oYo not hash/picked up\";\n        ref J.Oy.o.M eq 'ARRAY' || die \"J.name oYoM not array\";\n        push @{J.oy.o}, @{J.Oy.o.M};\n    }\n    J.Oy = $y;\n    if (@$M) {\n        n z=>$y=>{}\n    }\n    Rw Jamroot $C $J $y if y.at;\n};\n"
      sc: 
        acgt: s
        act: 1
        args: A,C,G,T,s
        code: J 66
        dige: a5370c4c8b94
        gk: J
        gro: Jiterbug
        nk: c
        v: cJ
      t: J_66
      "y": 
        cv: '0.66'
        cvt: 0.66	C.t
        p: qq/Jiterbug/Jiterbug
  "0.677": 
    J_677: 
      c: 
        el: 1
        s: "A.I.J_677 = sub {\n    my ($A,$C,$G,$T,$s,@Me) = @_;\n    my $I = A.I;\n    my $c = C.c;\n    my $J = C.c.J;\n    if (J.oy.ope) {\n        sayyl \"Leaving J.name open pha...\" if A.V&ope;\n        I.d&end,A.coi;\n        return;\n    }\n    A.coi.qui = 1;\n    my $wt = I.d&exactl,A.coi;\n    if (wt.same) {\n        if (++J.A.wch > 4) {\n            J.A.wch = 0;\n            # ^ rate to avoid v see J 632 eighthnot\n        }\n        else {\n           sayre \"SAME T.alk\" if A.V&SAME;\n           T.same = 1;\n        }\n    }\n};\n"
      sc: 
        acgt: s
        act: 1
        args: A,C,G,T,s
        code: J 677
        dige: fe51018f11a7
        gk: J
        gro: Jiterbug
        nk: c
        v: cJ
      t: J_677
      "y": 
        cv: '0.677'
        cvt: 0.677	C.t
        p: qq/Jiterbug/Jiterbug
Mo: 
  "0.21": 
    yo_: 
      c: 
        el: 1
        s: "A.I.yo_ = sub {\n    my ($A,$C,$G,$T,$s,@Me) = @_;\n    my $I = A.I;\n    my $y = C.y;\n    my $o = C.y.o;\n        $o = $C->{y}->{o} = {M=>$o} if ref $o eq 'ARRAY';\n        $o->{M} ||= [$C];\n        # 4d jelly slower-downer\n        # so we should acquire many $A->{t}&\n        # this is an EC into our C's $T->{oM}, as $s->{M} now\n        # stackable A with stitchable others interleaved in time\n        # 6 FLIES\n        $o->{M} = [grep{defined}map{\n            my $d;\n            ref $_ || die \"oM nonhashi \".wdump 2, $o->{M};\n            $d->{t} = $_->{t};\n            $d->{y} = {%{$_->{y}}};\n            $d->{c} = {%{$_->{c}}};\n            delete $d->{y}->{cv} if $y->{ecv};\n            # allow any cv to wander from yarNgrid:\n            #$y->{cvil} = 1 if defined $d->{y}->{cv};\n            $d->{sc} = {%{$_->{sc}||{}}};\n            # TRansituio, soul spread\n            if ($o->{ou}) {\n                # inside our, change slightly how we see\n                # spread compound\n                $d->{c}->{pi} = $o->{ou};\n                $d->{c}->{s} = $_;\n            }\n            $d->{sc}->{oJ} = $o->{oJ} if $o->{oJ};\n            # travel agent ^\n            # traveli\n            $G->{w}->(\"C14\", {I => $I, A => $A, C => $d}, $G);\n            #\n            $A->{J}->{V} && say \"AH $A->{J}->{name}  ::: $d->{t}   \".ki $d->{sc};\n            keys %$d ? $d : undef\n        }@{$o->{M}}];\n};\n"
      sc: 
        acgt: s
        act: 1
        args: A,C,G,T,s
        code: Mo 21
        dige: 2179053cd325
        gk: o
        gro: Space
        nk: 'y'
        v: yo
      t: yo_
      "y": 
        cv: '0.3'
        cvt: 0.3	C.t
        p: qq/Space/Space
  "0.22": 
    yon_: 
      c: 
        el: 1
        s: "A.I.yon_ = sub {\n    my ($A,$C,$G,$T,$s,@Me) = @_;\n    my $I = A.I;\n    my $y = C.y;\n    my $o = C.y.o;\n        my $J = $A->{J};\n        my $Jy = $J->{C}->{y}; # pi's sea\n        # surface tesion, lum\n        if (my $lt = $C->{y}->{limn}) {\n            $Jy->{spc} || die \"no space ! $J->{name} - $C->{t} keep more numbers\";\n            my $rl = int(9 * $lt * $Jy->{spc});\n            my $was = @{$o->{M}};\n            if ($was > $rl) {\n                my @um = @{$o->{M}};\n                @um = @um[0..$rl-1];\n                @{$o->{M}} = @um;\n                # space mod\n                my $s = $was;\n                $J->{n}->($J, \"limo\",0.7,\"$was>$rl\",'%fs:7,hs:7487');\n            }\n        }\n        $C->{y}->{bal} = $o->{M} || die\"nomo\";\n        # unless y unlimited...until\n        $o->{J} = $J->{most}->{J} if $Jy && $Jy->{o} && $Jy->{spc} > 0.1;\n        delete $o->{J} if $y->{clos};\n        my $shut = $Jy && $Jy->{o} && !$o->{J};\n        $C->{y}->{over} = ($Jy->{o} && $Jy->{over} && $Jy->{over} || 0) + 0.06 if $y->{o}->{J};\n        #sayre \"Jyspace: spc:  $J->{d}->{y}->{spc}  or aspace: $Jy->{aspace}\" if $Jy;\n        # divvy space inside parent's share most J or in 3-4 of the pi\n        my $sl = $Jy->{spc} * 0.01;\n        $sl = 0.02 if $sl < 0.02;\n        $C->{y}->{in} ||= $shut ? 0.3 : $Jy ? $Jy->{cv} + $sl : 0.1;\n        $C->{y}->{out} ||= $shut ? 0.4 : $Jy ? $Jy->{ov} - $sl : 0.9;\n        $C->{c}->{lumfa} = 1 if $y->{lumfa};\n};\n"
      sc: 
        acgt: s
        act: 1
        args: A,C,G,T,s
        code: Mo 22
        dige: edc5cbc554cd
        gk: o
        gro: Space
        nk: 'y'
        v: yo
      t: yon_
      "y": 
        cv: '0.3'
        cvt: 0.3	C.t
        p: qq/Space/Space
  "0.233": 
    lum_thy_: 
      c: 
        el: 1
        s: "A.I.lum_thy_ = sub {\n    my ($A,$C,$G,$T,$s,@Me) = @_;\n    my $I = A.I;\n    my $y = C.y;\n    my $lum = C.y.lum;\n    my $bal = C.y.bal;\n    # barel! vylum\n    # could put these mys on y.u.thing and loop Nautically in 32...\n    my $roll = 1;\n    $lum ||= 3;\n    my $i = 0;\n    for (@$bal) {\n        _.y.thy+=$lum;\n        $i++;\n        if ($i > $roll) {\n            $lum -= $lum * 0.2 if $lum > 0.1;\n        }\n    }\n};\n"
      sc: 
        acgt: s
        act: 1
        args: A,C,G,T,s
        code: Mo 233
        dige: e2da8f6e3d52
        gk: lum
        gro: lum
        nk: 'y'
        rg: bal
        v: ylum
      t: lum_thy_
      "y": 
        cv: '0.3'
        cvt: 0.3	C.t
        p: qq/lum/lum
  "0.37": 
    spc_lum_: 
      c: 
        el: 1
        s: "A.I.spc_lum_ = sub {\n    my ($A,$C,$G,$T,$s,@Me) = @_;\n    my $I = A.I;\n    my $y = C.y;\n    my $lum = C.y.lum;\n    my $spc = C.y.spc;\n    # feel effects of... f eel\n    my $upt = 0;\n    $spc = $upt if $spc < $upt;\n    # t-rewirey formulae:\n    my $fs = ($spc / 0.02) * 4;\n    C.sc.fs = $fs;# if $fs < 9;\n    C.y.spc = $spc;\n};\n"
      sc: 
        acgt: s
        act: 1
        args: A,C,G,T,s
        code: Mo 37
        dige: 08649b070e27
        gk: lum
        gro: lum
        nk: 'y'
        rg: spc
        v: ylum
      t: spc_lum_
      "y": 
        cv: '0.3'
        cvt: 0.3	C.t
        p: qq/lum/lum
oJ: 
  "0.61": 
    J_61: 
      c: 
        el: 1
        s: "A.I.J_61 = sub {\n    my ($A,$C,$G,$T,$s,@Me) = @_;\n    my $I = A.I;\n    my $c = C.c;\n    my $J = C.c.J;\n        $T->{alk} = \"$A->{talk}  TT  $A->{ztime}\";\n        $A->{time}->($J, 6) || return do {\n            say \"SKive! $T->{alk}\" if $A->{V}->(\"skive\");\n            $T->{nose} = 1;\n        };\n        sayyl \"J6 ! $T->{alk}\" unless !$A->{V}->(\"sixes\") || $C->{sc}->{pi} || $T->{alk} =~ /^all/;\n        $A->{Subtle}->{J} = 1;\n        $A->{t}->(\"J\",9,1);\n};\n"
      sc: 
        acgt: s
        act: 1
        args: A,C,G,T,s
        code: oJ 61
        dige: 7184afd776e4
        gk: J
        gro: Jumps
        nk: c
        v: cJ
      t: J_61
      "y": 
        cv: '0.61'
        cvt: 0.61	C.t
        p: qq/Jumps/Jumps
  "0.71": 
    J_71: 
      c: 
        el: 1
        s: "A.I.J_71 = sub {\n    my ($A,$C,$G,$T,$s,@Me) = @_;\n    my $I = A.I;\n    my $c = C.c;\n    my $J = C.c.J;\n        $T->{nose} && return $A->{V}->(\"nose\") && sayre \"nose $T->{alk}\";\n        if (!$J->{A}->{II}->{Sev}) {\n            my $A = {J=>$J,G=>$G};\n            $G->{w}->(\"collaspII\", {A => $A}, $G);\n            say \"$J->{name} \".($J->{A}->{II}->{Sev} ? \"quietly Sevs\" : 'Yesuis???????????????');\n        }\n        $J->{most}->{eo} = 'Sev' if $J->{A}->{II}->{Sev};\n        say \"oJ77 77 $T->{alk}     -> $J->{most}->{eo}\"\n            unless $J->{most}->{eo} ne 'Sev' || !$A->{V}->(\"sevens\") || $J->{yt}->{quiet} || $C->{sc}->{pi} || $T->{alk} =~ /^all/;\n        $G->{w}->(\"$J->{most}->{eo}\", {J => $J, A => $A}, $G);\n};\n"
      sc: 
        acgt: s
        act: 1
        args: A,C,G,T,s
        code: oJ 71
        dige: 0a8d8347135d
        gk: J
        gro: Jumps
        nk: c
        v: cJ
      t: J_71
      "y": 
        cv: '0.71'
        cvt: 0.71	C.t
        p: qq/Jumps/Jumps
