--- 
I: 
  "0.1": 
    El: 
      c: 
        el: 1
        s: "A.I.El = sub {\n    my ($A,$C,$G,$T,@M)=@_;\n    my ($J,$name) = @M;\n    my $I = A.I;\n    J.El->{$name} ||= {bb=>{},name=>$name};\n};\n"
      sc: 
        acgt: J,name
        args: A,C,G,T,J,name
        code: I 1
        dige: 6a34521b1d60
        gro: Modems/Pha
        l: "#c without a self"
      t: El
      "y": 
        cv: '0.3'
        cvt: 0.3	C.t
        p: qq/Modems/Modems/Pha/Pha
    Elj: 
      c: 
        el: 1
        s: "A.I.Elj = sub {\n    my ($A,$C,$G,$T,@M)=@_;\n    my ($J,$name) = @M;\n    my $I = A.I;\n    J.El->{$name} ||= Rw Jto - $le:J $name;\n};\n"
      sc: 
        acgt: J,name
        args: A,C,G,T,J,name
        code: I 1
        dige: 9fe11b6f8fdd
        gro: Modems/Pha
        l: "#c with a self"
      t: Elj
      "y": 
        cv: '0.3'
        cvt: 0.3	C.t
        p: qq/Modems/Modems/Pha/Pha
    Elvis: 
      c: 
        el: 1
        s: "A.I.Elvis = sub {\n    my ($A,$C,$G,$T,@M)=@_;\n    my ($J,$Y) = @M;\n    my $I = A.I;\n    my $wtf = Rw wtfch $Jb:J.bb $Yb:Y.bb;\n    #I.d&wtfch,J.bb,Y.bb;\n    \n    Y.tw ||= {};\n    Y.lo = {}; # compile\n    \n    for my $mo (qw'gone diff new') {\n        for my $r (keys %{$wtf->{$mo}}) {\n            my $j = Rw r2j $J $r;\n            #I.d&r2j,$J,$r;\n            saybl \"r2j'd $r => \".ki $j if J.name eq 'Dwight';\n            j.r = $r;\n            j.lt = j.cv.\"\\t\".j.t;\n            if (!j.lt=~/\\S/) {\n                die \"Got $r =>   \".ki $j;\n            }\n            if ($mo eq 'gone') {\n                delete Y.bb->{j.r};\n                delete Y.tw->{j.lt}->{j.style};\n            }\n            else {\n                Y.bb->{j.r} = j.s;\n                Y.tw->{j.lt}->{j.style} = j.s;\n            }\n            Y.lo->{j.lt}->{$mo}->{j.style} = j.s;\n        }\n    }\n    \n    Y.tv ||= {};\n    Y.v ||= {};\n    Y.go = {};\n    my $same = 1;\n    for my $k (keys %{Y.lo}) {\n        my $tf = Y.lo->{$k};\n        my $cs = Y.tw->{$k};\n        if (tf.new && !tf.gone && !tf.diff && keys %{tf.new} == keys %$cs) {\n            $same = 0; # new line to make\n        }\n        if (tf.gone && !keys %$cs) {\n            $same = 0; # line to disappear\n            my $C = Y.go->{$k} = delete Y.tv->{$k};\n            my ($cv,$t) = $k =~ /^(.+?)\\t(.*)$/;\n            delete Y.v->{$cv}->{$t};\n            delete Y.v->{$cv} unless keys %{Y.v->{$cv}};\n        }\n        if (tf.diff || tf.new) {\n            keys %$cs || die 'nokeys';\n            my ($cv,$t) = $k =~ /^(.+?)\\t(.*)$/;\n            defined $cv || die \"twas $k\";\n            my $foam = sub {\n                my $C = shift;\n                %$C = (t=>$t,y=>{cv=>$cv},c=>{},sc=>{%$cs});\n                C.c.s = delete C.sc->{''} if exists C.sc->{''};\n            };\n            $foam->(Y.tv->{$k} ||= {});\n            $foam->(Y.v->{$cv}->{$t} ||= {});\n        }\n    }\n    if (!$same) {\n        Y.vs = [];\n        for my $k (sort keys %{Y.tv}) {\n            my $C = Y.tv->{$k} || die \"wtf $k\";\n            push @{Y.vs}, $C;\n        }\n        #sayre \"vs re: \".@{Y.vs};\n    }\n    \n    Y.ra = I.d&ratio,wtf.sami,wtf.tot;\n    Y.rato = wtf.tot;\n    Y.revs = !$same;\n    sayyl \"J.name :::\". wdump 4, Y.lo if J.name eq 'Dwight';\n    \n    $Y;\n};\n"
      sc: 
        acgt: J,Y
        args: A,C,G,T,J,Y
        code: I 1
        dige: aefe48ca597a
        gro: Modems/Pha
        l: "#c"
      t: Elvis
      "y": 
        cv: '0.3'
        cvt: 0.3	C.t
        p: qq/Modems/Modems/Pha/Pha
    as: 
      c: 
        el: 1
        s: "A.I.as = sub {\n    my ($A,$C,$G,$T,$s,$x) = @_;\n    my $I = A.I;\n    for (qw'begin bb ord tim wtf') {\n         exists $x->{$_} || next;\n         my $v = $x->{$_};\n         $v = [@$v] if ref $v eq 'ARRAY';\n         $v = {%$v} if ref $v eq 'HASH';\n         $s->{$_} = $v;\n    }\n};\n"
      sc: 
        acgt: s,x
        args: A,C,G,T,s,x
        code: I 1
        dige: 68275f8dba30
        gro: Modems/Pha
      t: as
      "y": 
        cv: '0.3'
        cvt: 0.3	C.t
        p: qq/Modems/Modems/Pha/Pha
    bandon: 
      c: 
        el: 1
        s: "A.I.bandon = sub {\n    my ($A,$C,$G,$T,$s) = @_;\n    my $I = A.I;\n    delete s.J.phy->{s.name};\n    s.abandoned = 1;\n    if (my $x = s.head) {\n        I.d&as,$s,$x;\n    }\n    I.d&end,$s\n};\n"
      sc: 
        acgt: s
        args: A,C,G,T,s
        code: I 1
        dige: f11d8e18828e
        gro: Modems/Pha
      t: bandon
      "y": 
        cv: '0.3'
        cvt: 0.3	C.t
        p: qq/Modems/Modems/Pha/Pha
    end: 
      c: 
        el: 1
        s: "A.I.end = sub {\n    my ($A,$C,$G,$T,$s) = @_;\n    my $I = A.I;\n    my $y = s.J.phl->{s.name} ||= {name=>s.name, l=>[]};\n    s.ended = hitime();\n    delete s.J.phy->{s.name};\n    shift @{y.l} while @{y.l} > 5;\n    # layers ^ rolling in time index .r -> the y.l\n    # so last phase of $name can be found?\n    push @{y.l}, $s;\n    if (s.bb) {\n        my $w = @{y.l};\n        y.l_bb->{$_} = $w for keys %{s.bb};\n    }\n    # somewhere thinks about what happened\n    $y\n};\n"
      sc: 
        acgt: s
        args: A,C,G,T,s
        code: I 1
        dige: 9be2c29b1c85
        gro: Modems/Pha
      t: end
      "y": 
        cv: '0.3'
        cvt: 0.3	C.t
        p: qq/Modems/Modems/Pha/Pha
    exactl: 
      c: 
        el: 1
        s: "A.I.exactl = sub {\n    my ($A,$C,$G,$T,$s) = @_;\n    my $I = A.I;\n    my $q = shift;\n    my $y = I.d&end,$s;\n    my $cur = y.l->[-1];\n    my $last = y.l->[-2];\n    $cur eq $s || die \"sidf$cur $s\";\n    last.bb ||= {};\n    \n    my $wtf = I.d&wtfch,cur.bb,last.bb;\n    \n    delete s.J.bb->{$_} for keys %{wtf.gone};\n    \n    # see s.extill, time passing interesto...\n    # churn stats like 30% of last disappear, 20% new\n    s.wtf = $wtf;\n    $wtf;\n};\n"
      sc: 
        acgt: s
        args: A,C,G,T,s
        code: I 1
        dige: 4f2ceaf538a8
        gro: Modems/Pha
        l: "#c un-ins things from J"
      t: exactl
      "y": 
        cv: '0.3'
        cvt: 0.3	C.t
        p: qq/Modems/Modems/Pha/Pha
    jamsc: 
      c: 
        el: 1
        s: "A.I.jamsc = sub {\n    my ($A,$C,$G,$T,$s) = @_;\n    my $I = A.I;\n    my $ar = $s;\n    my $sc = ar.sc || {};\n    my $J = ar.J || die \"jamsc noj\".ki$s;\n    ar.C = ar.d if ar.d;\n    my $t = ar.t ? ar.t\n        : ar.j ? ar.j.l\n        : ar.C ? ar.C.t : die'not';\n    my $cv = ar.cv ? ar.cv\n        : ar.j ? ar.j.cv\n        : ar.C ? ar.C.cv || ar.C.y.cv : die'noy';\n    \n    if (ar.oJ && ar.oJ ne ar.J && !ar.noR) {\n        my $J = ar.oJ;\n        if (my $ljm = J.A.ljm) {\n            my $Me = \"ar.oJ.ind ar.J.name \"\n            .\" J.A.ljmo <<< J.name  sends:\"\n            .\" $t\\t$cv  $ljm\";\n            sayyl $Me if J.V || ar.J.V;\n            push @$ljm, {%$ar};\n        }\n    }\n    \n    my @fobz;\n    push @fobz, [$cv,$t,undef,ar.s] if exists ar.s;\n    push @fobz, [$cv,$t,$_,$sc->{$_}] for keys %$sc;\n    my @tobz = map {\n        my ($cv,$t,$s,$v) = @$_;\n        my $r;\n        if (J.tt) { # FUTU\n            $r = $cv.\"\\t\".$t.\"\\t\".$s;\n        }\n        else {\n            my $s = $s;\n            $s = '%'.$s if $s;\n            $r = $t.$s.\"\\t\".$cv;\n        }\n        if ($s) {\n            ar.C.sc->{$s} = $v;\n        }\n        [$r,$v]\n    } @fobz;\n    \n    for (@tobz) {\n        my ($r,$v) = @$_;\n        J.bz->($r,$v);\n    }\n};\n"
      sc: 
        acgt: s
        args: A,C,G,T,s
        code: I 1
        dige: 3423c6b06bb3
        gro: Modems/Jamsc
      t: jamsc
      "y": 
        cv: '0.3'
        cvt: 0.3	C.t
        p: qq/Modems/Modems/Jamsc/Jamsc
    pha: 
      c: 
        el: 1
        s: "A.I.pha = sub {\n    my ($A,$C,$G,$T,@M)=@_;\n    my ($J,$name) = @M;\n    my $I = A.I;\n    # tracked being\n    # temporal phatness, per suJ (encap $M surges within)\n    if (my $x = J.phy->{$name}) {\n        sayre \"J.name 's $name was re entrant\";\n        I.d&end,$x;\n        # end - maybe new stuffright as some random part of this process\n        # hold yay minutes of changes in 10 second groups, etc\n    }\n    # bz multicasts\n    my $x = J.phy->{$name} = {};\n    x.begin = hitime();\n    x.name = $name;\n    x.J = $J;\n    x.bb = {};\n    x.ord = [];\n    #x.tim = {};\n    #x.wtf = {}; # F grab\n    #x.ap = sub{}; # bz do aftering\n    x.qui = 1;\n    x.head = J.phl->{$name}->{l}->[-1] if J.phy->{$name};\n    $x;\n};\n"
      sc: 
        acgt: J,name
        args: A,C,G,T,J,name
        code: I 1
        dige: 02e372c4b95c
        gro: Modems/Pha
        l: "#c"
      t: pha
      "y": 
        cv: '0.3'
        cvt: 0.3	C.t
        p: qq/Modems/Modems/Pha/Pha
    r2j: 
      c: 
        el: 1
        s: "A.I.r2j = sub {\n    my ($A,$C,$G,$T,@M)=@_;\n    my ($r,$J) = @M;\n    my $I = A.I;\n    my $j;\n    my $sing;\n    if (J.tt) {\n        $sing = 'J_tt';\n        (j.cv,j.t,j.style) = $r =~ /^(.*?)\\t(.*)\\t(.*?)$/;\n        if (!j.cv) {\n            sayre \"Hind $r  \" for 1..5;\n            (j.t,j.style,j.cv) = $r =~ /^(.+?)(?:%(.+))?\\s+(.+?)$/;\n        }\n    }\n    else {\n        (j.t,j.style,j.cv) = $r =~ /^(.+?)(?:%(.+))?\\s+(.+?)$/;\n    }\n    defined j.cv || die \"$sing no $r    \".ki $j;\n    j.s = J.bb->{$r} if $J;\n    j.nos = 1 if $J && !exists J.bb->{$r};\n    $j;\n};\n"
      sc: 
        acgt: r,J
        args: A,C,G,T,r,J
        code: I 1
        dige: 142c469590ad
        gro: Modems/Jamsc
      t: r2j
      "y": 
        cv: '0.3'
        cvt: 0.3	C.t
        p: qq/Modems/Modems/Jamsc/Jamsc
    ratio: 
      c: 
        el: 1
        s: "A.I.ratio = sub {\n    my ($A,$C,$G,$T,@M)=@_;\n    my ($o,$t) = @M;\n    my $I = A.I;\n    my $ratio = $o / ($t||1);\n    0.01 * int(100*$ratio);\n};\n"
      sc: 
        acgt: o,t
        args: A,C,G,T,o,t
        code: I 1
        dige: c195879acd18
        gro: Modems/Timing
      t: ratio
      "y": 
        cv: '0.3'
        cvt: 0.3	C.t
        p: qq/Modems/Modems/Timing/Timing
    wtfch: 
      c: 
        el: 1
        s: "A.I.wtfch = sub {\n    my ($A,$C,$G,$T,@M)=@_;\n    my ($Jb,$Yb) = @M;\n    my $I = A.I;\n    my $wtf = {};\n    wtf.same = 1;\n    $wtf->{$_} = {} for qw'new diff gone';\n    \n    for (sort keys %$Jb) {\n        if (!exists $Yb->{$_}) {\n            wtf.new->{$_} = $Jb->{$_};\n            wtf.same = 0;\n        } \n        elsif ($Yb->{$_} ne $Jb->{$_}) {\n            wtf.diff->{$_} = $Jb->{$_};\n            wtf.same = 0;\n        }\n        else {\n            wtf.sami++;\n            wtf.still->{$_} = $Jb->{$_};\n        }\n        wtf.tot++;\n    }\n    for (grep { !exists $Jb->{$_} } sort keys %$Yb) {\n        wtf.gone->{$_} = $Yb->{$_};\n        wtf.same = 0;\n    }\n    $wtf;\n};\n"
      sc: 
        acgt: Jb,Yb
        args: A,C,G,T,Jb,Yb
        code: I 1
        dige: f4b8a34e7993
        gro: Modems/Pha
        l: "#c diff J"
      t: wtfch
      "y": 
        cv: '0.3'
        cvt: 0.3	C.t
        p: qq/Modems/Modems/Pha/Pha
J: 
  "0.6211": 
    J_6211: 
      c: 
        el: 1
        s: "A.I.J_6211 = sub {\n    my ($A,$C,$G,$T,$s) = @_;\n    my $I = A.I;\n    my $c = C.c;\n    my $J = C.c.J;\n    return if exists C.c.pi;\n    \n    if (A.ztime < 9) {\n        if (A.jr&bol) {\n            sayre \"STOPPING \".ki($C) for 1..3;\n            # TODO stop\n        }\n        A.bangdesk.aft.unblocknine = A.jr&bol,9;\n    }\n    A.bangdesk.bang.bang_ts = sub {\n        A.jr&bang_ts,hitime\n    };\n    \n    C.c.pin = J.name;\n};\n"
      sc: 
        acgt: s
        act: 1
        args: A,C,G,T,s
        code: J 6211
        dige: 4335f418be7b
        gk: J
        gro: Jiterbug
        nk: c
        v: cJ
      t: J_6211
      "y": 
        cv: '0.6211'
        cvt: 0.6211	C.t
        p: qq/Jiterbug/Jiterbug
  "0.6212": 
    J_6212: 
      c: 
        el: 1
        s: "A.I.J_6212 = sub {\n    my ($A,$C,$G,$T,$s) = @_;\n    my $I = A.I;\n    my $c = C.c;\n    my $J = C.c.J;\n    return unless exists C.c.pi;\n    \n    die'csnod' if $C ne J.C;\n    J.cv = (C.c.gp && C.c.gp.cv) || C.c.cv || 0.6;\n    my $path = C.sc.pi||die'nopi';\n    if (J.A.d > 9) {\n        $path = 'text';\n        warn \"J.name J.A.d limit to text\";\n    }\n    C.c.pin = \"pi/$path\";\n};\n"
      sc: 
        acgt: s
        act: 1
        args: A,C,G,T,s
        code: J 6212
        dige: 4114c7a0b224
        gk: J
        gro: Jiterbug
        nk: c
        v: cJ
      t: J_6212
      "y": 
        cv: '0.6212'
        cvt: 0.6212	C.t
        p: qq/Jiterbug/Jiterbug
  "0.631": 
    J_631: 
      c: 
        el: 1
        s: "A.I.J_631 = sub {\n    my ($A,$C,$G,$T,$s) = @_;\n    my $I = A.I;\n    my $c = C.c;\n    my $J = C.c.J;\n    A.coi = I.d&pha,$J,'ako';\n};\n"
      sc: 
        acgt: s
        act: 1
        args: A,C,G,T,s
        code: J 631
        dige: 7e2ae73257d8
        gk: J
        gro: Jiterbug
        nk: c
        v: cJ
      t: J_631
      "y": 
        cv: '0.631'
        cvt: 0.631	C.t
        p: qq/Jiterbug/Jiterbug
  "0.632": 
    J_632: 
      c: 
        el: 1
        s: "A.I.J_632 = sub {\n    my ($A,$C,$G,$T,$s) = @_;\n    my $I = A.I;\n    my $c = C.c;\n    my $J = C.c.J;\n    return unless exists C.sc.pi;\n    \n    map { # telephone winch, propaganda (top-er levels receiving stuff)\n         J.A->{$_} = J.Jiter.A->{$_}\n         if J.Jiter && J.Jiter.A->{$_};\n    } qw'ljm ljmo';\n    \n    A.time = sub {\n        my($JJ,$q) = @_;\n        $J eq $JJ || die \"wtfJure\";\n        # wanna A.t&T,2,0 us to difference streams\n        # they could be xot maps or code to run\n        # then all over things \n    \n        if ($q == 2) {\n            A.ico = I.d&pha,$J,'ico';\n            A.ico.qui = 1;\n            I.d&as,A.ico,A.coi;\n            my $wtf = I.d&exactl,A.ico;\n    \n            if (wtf.last && !wtf.same) {\n                my $uf = join \"\\n\", map{\"$_: \".wdump(1,$wtf->{$_})}\n                    grep {keys %{$wtf->{$_}}} qw'new diff gone';\n                saybl \"T.alk  2222  $uf\";\n            }\n    \n            Rw eighthnot $J\n             ? do { A.ico.wtf.same = 0; }\n             : wtf.same && return 0;\n    \n            # for jamcs screenfly\n            J.A.ljm = [];\n            J.A.ljmo = \"fr  J.name\";\n            return 1;\n        }\n    \n        warn \"T.alk other $q\";\n        if ($q == 8) {\n            # until J.most coord attention evaporates\n            # as in pulling on a list\n        }\n        A.ztime >= $q;\n    };\n};\n"
      sc: 
        acgt: s
        act: 1
        args: A,C,G,T,s
        code: J 632
        dige: 112694f7fcf1
        gk: J
        gro: Juperfi
        nk: c
        v: cJ
      t: J_632
      "y": 
        cv: '0.632'
        cvt: 0.632	C.t
        p: qq/Juperfi/Juperfi
  "0.66": 
    J_66: 
      c: 
        el: 1
        s: "A.I.J_66 = sub {\n    my ($A,$C,$G,$T,$s) = @_;\n    my $I = A.I;\n    my $c = C.c;\n    my $J = C.c.J;\n    my $M = [];\n    my $y = {o=>$M};\n    my $ar = {%{C.c}};\n    #sayre \"no ars\" if !exists ar.s;\n    ar.s = '' if !exists ar.s;\n    ar.u = ar.s;\n    ar.pin = C.c.pin || die \"nopin\";\n    \n    Rw ar.pin + $A $C $G $T $J $M $y;\n    # set our C.c.s to [that], noise probe case, maybe\n    if (@$M) {\n        n z=>$y=>{}\n    }\n    # T may cause big recoil of Mo/J, miss pha closures:\n};\n"
      sc: 
        acgt: s
        act: 1
        args: A,C,G,T,s
        code: J 66
        dige: 03253a892b31
        gk: J
        gro: Jiterbug
        nk: c
        v: cJ
      t: J_66
      "y": 
        cv: '0.66'
        cvt: 0.66	C.t
        p: qq/Jiterbug/Jiterbug
  "0.672": 
    J_672: 
      c: 
        el: 1
        s: "A.I.J_672 = sub {\n    my ($A,$C,$G,$T,$s) = @_;\n    my $I = A.I;\n    my $c = C.c;\n    my $J = C.c.J;\n    return unless A.ico && A.ico.wtf.same;\n    # first the superstilled\n    # anything T_D can arrange through time...\n    # wants to join G subtly vis T and so....\n    # should be no M in the first bit\n    # it is just pinpricks of consciousness keeping it alive, like mtime\n    # be nicer to do with an I that can T out of this whole change res patch\n    my $cut = @{A.ico.ord};\n    my @cc = @{A.coi.ord};\n    if (@cc > $cut) {\n        warn\"J.name entered stuff after 2!\".wdump [@cc, \n        '                 =============', @{A.ico.ord}];\n    }\n    I.d&bandon,A.coi;\n    if (my $ljm = J.A.ljm) {\n        for my $s (@$ljm) {\n            s.noR=1;\n            I.d&jamsc,$s;\n        }\n    }\n    sayre \"SKIP T.alk\";# if J.V || J.most.J.V;\n    T.whack = 1; # exit A.t&J\n    T.same = 1; # exit Mo, T.not but not, kind of unlet ztime6->7\n};\n"
      sc: 
        acgt: s
        act: 1
        args: A,C,G,T,s
        code: J 672
        dige: cb37460c3b48
        gk: J
        gro: Juperfi
        nk: c
        v: cJ
      t: J_672
      "y": 
        cv: '0.672'
        cvt: 0.672	C.t
        p: qq/Juperfi/Juperfi
  "0.677": 
    J_677: 
      c: 
        el: 1
        s: "A.I.J_677 = sub {\n    my ($A,$C,$G,$T,$s) = @_;\n    my $I = A.I;\n    my $c = C.c;\n    my $J = C.c.J;\n    if (J.name eq 'Oth') {\n        sayyl \"Leaving J.name open pha...\";\n        I.d&end,A.coi;\n        return;\n    }\n    A.coi.qui = 1;\n    my $wt = I.d&exactl,A.coi;\n    if (wt.same) {\n        if (++J.A.wch > 4) {\n            J.A.wch = 0;\n            # ^ rate to avoid v see J 632 eighthnot\n        }\n        else {\n           sayre \"SAME T.alk\";# if J.V || J.most.J.V;\n           T.same = 1;\n        }\n    }\n};\n"
      sc: 
        acgt: s
        act: 1
        args: A,C,G,T,s
        code: J 677
        dige: a9abeb61d36d
        gk: J
        gro: Jiterbug
        nk: c
        v: cJ
      t: J_677
      "y": 
        cv: '0.677'
        cvt: 0.677	C.t
        p: qq/Jiterbug/Jiterbug
Mo: 
  "0.431": 
    J_431: 
      c: 
        el: 1
        s: "A.I.J_431 = sub {\n    my ($A,$C,$G,$T,$s) = @_;\n    my $I = A.I;\n    my $c = C.c;\n    my $J = C.c.J;\n    my $f = A.jr&J;\n    my $j = C.sc.J;\n    ref $j && ref $f && ($j eq $f || die \".sc J dif $f $j\");\n    # should T.at so vis, substrate insecting\n    C.c.J = T.at.J = $f if $f && ref $f && !f.dead;\n};\n"
      sc: 
        acgt: s
        act: 1
        args: A,C,G,T,s
        code: Mo 431
        dige: b8f548dd2c5c
        gk: J
        gro: Joot
        nk: c
        v: cJ
      t: J_431
      "y": 
        cv: '0.431'
        cvt: 0.431	C.t
        p: qq/Joot/Joot
  "0.432": 
    X_432: 
      c: 
        el: 1
        s: "A.I.X_432 = sub {\n    my ($A,$C,$G,$T,$s) = @_;\n    my $I = A.I;\n    my $c = C.c;\n    my $X = C.c.X;\n    my $J = C.sc.J;\n    sayre \"DELING J.name\".ki$C;\n    $J || die \"X no J\";\n    ref $J || die \"Nofound $J  C.t   C.y.cv\";\n    $X eq $J || die \"noovewr X  C.c.X ne $J\";\n    A.jr&J,$J,9;\n    J.dead = 1;\n    # SNat bail, we have balin by now so hole in space this time\n    T.not = 1;\n};\n"
      sc: 
        acgt: s
        act: 1
        args: A,C,G,T,s
        code: Mo 432
        dige: 95e934da5296
        gk: X
        gro: Joot
        nk: c
        v: cX
      t: X_432
      "y": 
        cv: '0.432'
        cvt: 0.432	C.t
        p: qq/Joot/Joot
  "0.433": 
    J_433: 
      c: 
        el: 1
        s: "A.I.J_433 = sub {\n    my ($A,$C,$G,$T,$s) = @_;\n    my $I = A.I;\n    my $c = C.c;\n    my $J = C.c.J;\n    return if ref $J;\n    $J = Rw Jto $name:J;\n    ref $J || die 'watt'.$J;\n    if (exists C.c.pi) {\n        J.Jiter = A.J; # erse rev\n        J.most->{$_} = A.J.most->{$_} for keys %{A.J.most||{}};\n    }\n    # til the I train shows up:\n    J.V = J.most.J.inV || 1 if A.J.V == 2 || J.most.J.inV;\n    J.A.Indo = 2;\n    #C.c.s ||= 'Wildy';\n    sayyl \"J33   Made J.name\" unless J.Jiter;\n    T.at.J = $J;\n    A.jr&J,$J; # sc, c, and on sphere\n    die \"noovewr   C.c.J ne $J\" if ref C.c.J && C.c.J ne $J;\n};\n"
      sc: 
        acgt: s
        act: 1
        args: A,C,G,T,s
        code: Mo 433
        dige: f3c7099f6ecb
        gk: J
        gro: Joot
        nk: c
        v: cJ
      t: J_433
      "y": 
        cv: '0.433'
        cvt: 0.433	C.t
        p: qq/Joot/Joot
  "0.6": 
    J_6: 
      c: 
        el: 1
        s: "A.I.J_6 = sub {\n    my ($A,$C,$G,$T,$s) = @_;\n    my $I = A.I;\n    my $c = C.c;\n    my $J = C.c.J;\n        $T->{alk} = \"$A->{talk}  TT  $A->{ztime}\";\n        $A->{time}->($J, 6) || return do {\n            say \"SKive! $T->{alk}\" if $A->{J}->{V};\n            $T->{nose} = 1;\n        };\n        sayyl \"J6 ! $T->{alk}\";\n        $A->{Subtle}->{J} = 1;\n        $A->{t}->(\"J\",9,1);\n};\n"
      sc: 
        acgt: s
        act: 1
        args: A,C,G,T,s
        code: Mo 6
        dige: a74dabffeb61
        gk: J
        gro: Jumps
        nk: c
        v: cJ
      t: J_6
      "y": 
        cv: '0.6'
        cvt: 0.6	C.t
        p: qq/Jumps/Jumps
  "0.7": 
    J_7: 
      c: 
        el: 1
        s: "A.I.J_7 = sub {\n    my ($A,$C,$G,$T,$s) = @_;\n    my $I = A.I;\n    my $c = C.c;\n    my $J = C.c.J;\n        return sayre\"nose $T->{alk}\" if $T->{nose};\n        return sayre \"same $T->{alk}\" if $T->{same};\n        $J->{most}->{eo} = 'Sev' if $J->{A}->{II}->{Sev};\n        say \"oJ77 77 $T->{alk}     -> $J->{most}->{eo}\" unless $J->{yt}->{quiet} || $C->{sc}->{pi};\n        $G->{w}->(\"$J->{most}->{eo}\", {J => $J, A => $A}, $G);\n};\n"
      sc: 
        acgt: s
        act: 1
        args: A,C,G,T,s
        code: Mo 7
        dige: 83283028177c
        gk: J
        gro: Jumps
        nk: c
        v: cJ
      t: J_7
      "y": 
        cv: '0.7'
        cvt: 0.7	C.t
        p: qq/Jumps/Jumps
Sev: 
  "0.2": 
    JYV_2: 
      c: 
        el: 1
        s: "A.I.JYV_2 = sub {\n    my ($A,$C,$G,$T,$s) = @_;\n    my $I = A.I;\n    my $c = C.c;\n    my $Y = C.c.Y;\n    my $J = C.c.J;\n    my $V = C.c.V;\n    for my $K ('Y','V') {\n        my $name = C.c->{$K};\n        $name || die \"No $K\";\n        C.c->{$K} = I.d&Elj,$J,$name;\n    }\n};\n"
      sc: 
        acgt: s
        act: 1
        args: A,C,G,T,s
        code: Sev 2
        dige: 74b861812f5b
        gk: 'Y'
        gro: Yuni
        nk: c
        rg: J,V
        v: cY
      t: JYV_2
      "y": 
        cv: '0.2'
        cvt: 0.2	C.t
        p: qq/Yuni/Yuni
  "0.21": 
    dElvis_21: 
      c: 
        el: 1
        s: "A.I.dElvis_21 = sub {\n    my ($A,$C,$G,$T,$s) = @_;\n    my $I = A.I;\n    my $c = C.c;\n    my $Y = C.c.Y;\n    my $J = C.c.J;\n    my $V = C.c.V;\n    I.d&Elvis,$J,$Y;\n    #Rw Elvis $J $Y;\n    \n    V.os = [];\n    A.mo.retu && die \"J.name's  V.name: Already is  A.mo.retu.name\";\n    A.mo.retu = $V;\n};\n"
      sc: 
        acgt: s
        act: 1
        args: A,C,G,T,s
        code: Sev 21
        dige: 831bfd1dfbed
        gk: 'Y'
        gro: Yuni
        nk: c
        rg: J,V
        v: cY
      t: dElvis_21
      "y": 
        cv: '0.21'
        cvt: 0.21	C.t
        p: qq/Yuni/Yuni
  "0.22": 
    root_22: 
      c: 
        el: 1
        s: "A.I.root_22 = sub {\n    my ($A,$C,$G,$T,$s) = @_;\n    my $I = A.I;\n    my $c = C.c;\n    my $Y = C.c.Y;\n    my $J = C.c.J;\n    my $V = C.c.V;\n    my $rC = Y.tv->{\"0.9\\t/\"}\n        || Y.tv->{\"0.9\\t\".J.name}\n        || Y.tv->{\"0.9\\t\".J.uname}\n          || die \" noroot J.name: showing 0.9s: \"\n            .wdump [map{ki $_}values %{Y.v->{0.9}}];\n    rC.c.root = 1;\n    my $N = [grep { $_ ne $rC } @{Y.vs}];\n    push @$N, $rC;\n    # T.Z.$incv = 1||$setAcv makes A,Celf, \n    # A.mo.re array others (yarN) which may Acquire\n    push @{A.mo.re->{0.22}||=[]}, map{\n        my $CC = I.d&hup,$_;\n        # all spreads out to play Y/V\n        I.d&xot,$CC,{c=>C.c};\n        [undef,$CC]\n    }@$N;\n    T.not = 1; # or more 78ism\n};\n"
      sc: 
        acgt: s
        act: 1
        args: A,C,G,T,s
        code: Sev 22
        dige: 478535a0bf3c
        gk: 'Y'
        gro: Yuni
        nk: c
        rg: J,V
        v: cY
      t: root_22
      "y": 
        cv: '0.22'
        cvt: 0.22	C.t
        p: qq/Yuni/Yuni
  "0.23": 
    Y_23: 
      c: 
        el: 1
        s: "A.I.Y_23 = sub {\n    my ($A,$C,$G,$T,$s) = @_;\n    my $I = A.I;\n    my $c = C.c;\n    my $Y = C.c.Y;\n    my $J = C.c.J;\n    my $V = C.c.V;\n    C.y.k = C.y.cv.\"\\t\".C.t;\n    push @{V.os}, C.y.k unless C.c.root;\n    # how happening to thingk\n    # must ,,,, A.t to gain perception (not mid ex but should)\n    # but yeah add things as lines rejoin\n    A.Iso.O = 1; # also ex O as I (whoever we are)\n    A.Subtle.S = 1; # only-S ex slips through time unwide\n};\n"
      sc: 
        acgt: s
        act: 1
        args: A,C,G,T,s
        code: Sev 23
        dige: 45108e25a4cf
        gk: 'Y'
        gro: Yuni
        nk: c
        rg: J,V
        v: cY
      t: Y_23
      "y": 
        cv: '0.23'
        cvt: 0.23	C.t
        p: qq/Yuni/Yuni
  "0.231": 
    Y_231: 
      c: 
        el: 1
        s: "A.I.Y_231 = sub {\n    my ($A,$C,$G,$T,$s) = @_;\n    my $I = A.I;\n    my $c = C.c;\n    my $Y = C.c.Y;\n    my $J = C.c.J;\n    my $V = C.c.V;\n    return if C.c.root;\n    T.to = 0;\n    A.t&S,6,2;\n    T.not = 1 if !delete T.to;\n};\n"
      sc: 
        acgt: s
        act: 1
        args: A,C,G,T,s
        code: Sev 231
        dige: 8a667da8779f
        gk: 'Y'
        gro: Yuni
        nk: c
        rg: J,V
        v: cY
      t: Y_231
      "y": 
        cv: '0.231'
        cvt: 0.231	C.t
        p: qq/Yuni/Yuni
  "0.3": 
    Y_3: 
      c: 
        el: 1
        s: "A.I.Y_3 = sub {\n    my ($A,$C,$G,$T,$s) = @_;\n    my $I = A.I;\n    my $c = C.c;\n    my $Y = C.c.Y;\n    my $J = C.c.J;\n    my $V = C.c.V;\n    my $k = C.y.k;\n    C.y.lv = {k=>$k,C=>$C};\n    C.y.at = {};\n    C.y.ta = V.ta->{$k};\n    C.y.vl = V.lv->{$k};\n    if (C.c.root) { # / continues from 3 when everything's 6\n        T.Z->{0.6} = 0.3;\n        T.not = 1;\n    }\n};\n"
      sc: 
        acgt: s
        act: 1
        args: A,C,G,T,s
        code: Sev 3
        dige: cbff00921d90
        gk: 'Y'
        gro: Yuni
        nk: c
        rg: J,V,yk
        v: cY
      t: Y_3
      "y": 
        cv: '0.3'
        cvt: 0.3	C.t
        p: qq/Yuni/Yuni
  "0.42": 
    mkTd_42: 
      c: 
        el: 1
        s: "A.I.mkTd_42 = sub {\n    my ($A,$C,$G,$T,$s) = @_;\n    my $I = A.I;\n    my $c = C.c;\n    my $Y = C.c.Y;\n    my $J = C.c.J;\n    my $V = C.c.V;\n    my $k = C.y.k;\n    my $at = C.y.at;\n    my $ta = C.y.ta;\n    my $lv = C.y.lv;\n    my $vl = C.y.vl;\n    for my $nk (qw't y c sc V') {\n        my $v = $at->{$nk};\n        my $o = $ta->{$nk};\n        I.d&heq,$v,$o && next;\n        my $d;\n        d.v = $v;\n        d.o = $o;\n        if (ref $v eq 'HASH') {\n            my $wt = Rw wtfch $Jb:v $Yb:o;\n            for my $wk (qw'gone diff new still') {\n                for my $gk (sort keys %{$wt->{$wk}}) {\n                    my $dd = {};\n                    dd.v = $at->{$nk}->{$gk};\n                    dd.o = $ta->{$nk}->{$gk};\n                    d.T.d->{$gk} && die \"C.t: $nk,$gk ($v) rep.\";\n                    d.T.d->{$gk} =\n                        dd.T.d->{$wk} = $dd;\n                }\n            }\n        }\n        else {\n            my $wk = !$vl ? \"new\"\n                : !exists $at->{$nk} ? \"gone\"\n                : \"diff\";\n            my $dd = {%$d};\n            d.T.d.s =\n                dd.T.d->{$wk} = $dd;\n        }\n        T.d->{$nk} = $d;\n    }\n};\n"
      sc: 
        acgt: s
        act: 1
        args: A,C,G,T,s
        code: Sev 42
        dige: f77aa396964a
        gk: 'Y'
        gro: Yod
        nk: c
        rg: J,V,yk,yat,yta,ylv,yvl
        v: cY
      t: mkTd_42
      "y": 
        cv: '0.42'
        cvt: 0.42	C.t
        p: qq/Yod/Yod
  "0.48": 
    doTd_48: 
      c: 
        el: 1
        s: "A.I.doTd_48 = sub {\n    my ($A,$C,$G,$T,$s) = @_;\n    my $I = A.I;\n    my $c = C.c;\n    my $Y = C.c.Y;\n    my $J = C.c.J;\n    my $V = C.c.V;\n    my $k = C.y.k;\n    my $at = C.y.at;\n    my $ta = C.y.ta;\n    my $lv = C.y.lv;\n    my $vl = C.y.vl;\n    # pick T bones, dot Is\n    # a 9 for the Td (ill 8) consciousness rendezvou\n    for my $nk (sort keys %{T.d}) {\n        my $d = T.d->{$nk};\n        for my $gk (sort keys %{d.T.d}) {\n            my $dd = d.T.d->{$gk};\n            if (dd.T.m) {\n                #say \"Answers  $nk $gk: \".wdump 4, $dd;\n            }\n            elsif (dd.T.q) {\n                #say \"probly $nk $gk\";\n            }\n            else {\n                sayre \"Unclear $nk $gk:  \". ki $dd;\n            }\n        }\n    }\n    delete T.d;\n};\n"
      sc: 
        acgt: s
        act: 1
        args: A,C,G,T,s
        code: Sev 48
        dige: 099aa40486cd
        gk: 'Y'
        gro: Yod
        nk: c
        rg: J,V,yk,yat,yta,ylv,yvl
        v: cY
      t: doTd_48
      "y": 
        cv: '0.48'
        cvt: 0.48	C.t
        p: qq/Yod/Yod
  "0.49": 
    Y_49: 
      c: 
        el: 1
        s: "A.I.Y_49 = sub {\n    my ($A,$C,$G,$T,$s) = @_;\n    my $I = A.I;\n    my $c = C.c;\n    my $Y = C.c.Y;\n    my $J = C.c.J;\n    my $V = C.c.V;\n    my $k = C.y.k;\n    my $at = C.y.at;\n    V.ta->{$k} = I.d&hup,$at;\n    V.tv->{$k} = I.d&hup,$C;\n};\n"
      sc: 
        acgt: s
        act: 1
        args: A,C,G,T,s
        code: Sev 49
        dige: e2043d4e9a48
        gk: 'Y'
        gro: Yuni
        nk: c
        rg: J,V,yk,yat
        v: cY
      t: Y_49
      "y": 
        cv: '0.49'
        cvt: 0.49	C.t
        p: qq/Yuni/Yuni
  "0.58": 
    Y_58: 
      c: 
        el: 1
        s: "A.I.Y_58 = sub {\n    my ($A,$C,$G,$T,$s) = @_;\n    my $I = A.I;\n    my $c = C.c;\n    my $Y = C.c.Y;\n    my $J = C.c.J;\n    my $V = C.c.V;\n    my $k = C.y.k;\n    my $lv = C.y.lv;\n    my $vl = C.y.vl;\n    V.lv->{$k} = $lv;\n    if (C.c.root) {\n        V.rl = $vl;\n        V.rv = $lv;\n        Rw TNews $J $talk:A.talk $rl:V.rl $rv:V.rv\n            if J.V;\n    }\n};\n"
      sc: 
        acgt: s
        act: 1
        args: A,C,G,T,s
        code: Sev 58
        dige: 8d87a19e3583
        gk: 'Y'
        gro: Yuni
        nk: c
        rg: J,V,yk,ylv,yvl
        v: cY
      t: Y_58
      "y": 
        cv: '0.58'
        cvt: 0.58	C.t
        p: qq/Yuni/Yuni
