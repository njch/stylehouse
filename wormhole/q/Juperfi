--- 
Ii: J_632 vers:HASH + J_672 vers:HASH
J: 
  "0.632": 
    J_632: 
      c: 
        s: "A.I.J_632 = sub {\nmy ($A,$C,$G,$T,$s,@Me) = @_;\nmy $I = A.I;\nmy $c = C.c;\nmy $J = C.c.J;\n#return 1 unless exists C.sc.pi;\n\nmap { # telephone winch, propaganda (top-er levels receiving stuff)\n     J.A->{$_} = J.Jiter.A->{$_}\n     if J.Jiter && J.Jiter.A->{$_};\n} qw'ljm ljmo';\n\nA.time = sub {\n    my($JJ,$q) = @_;\n    $J eq $JJ || die \"wtfJure  J.name   vs JJ.name\";\n    # wanna A.t&T,2,0 us to difference streams\n    # they could be xot maps or code to run\n    # then all over things \n    \n    if ($q == 2) {\n        my $sc = Rw Jamroot $J $C:J.C $y:J.oy if J.oy.at;\n        \n        A.ico = I.d&pha,$J,'ico';\n        A.ico.qui = 1;\n        I.d&as,A.ico,A.coi;\n        my $wtf = I.d&exactl,A.ico;\n        say \"Jump32: \". wdump 3, $wtf;\n        \n        if (wtf.last && !wtf.same) {\n            my $uf = join \"\\n\", map{\"$_: \".wdump(1,$wtf->{$_})}\n                grep {keys %{$wtf->{$_}}} qw'new diff gone';\n            saybl \"T.alk  2222  $uf\";\n        }\n        \n        my $iM = 1 if sc.osci && J.mo.J.act;\n        my $stick = !J.mo.J.act && !$iM && # travel part\n            Rw eighthnot $J;\n        if (!$stick) { # am sticking\n            my ($o,$O) = (J.oy,J.Oy);\n            for (grep{$o->{$_} ne $O->{$_}} \n                grep{!ref $o->{$_}} keys %$o) {\n                $stick = 1; # unless y.? nonref changed, or wider spacer\n                saybl \"J.name unstuck due to ychange: $_:\"\n                    .\" $o->{$_} ne $O->{$_}\";\n            }\n        }\n        # rhythm^\n        if ($stick) {\n            A.ico.wtf.same = 0;\n        }\n        elsif (wtf.same) {\n            T.iM = $iM if $iM;\n            return 0;\n        }\n        \n        # for the lift, osc should Jiter ne A.J and pd it\n        J.A.ljm = [];\n        J.A.ljmo = \"fr  J.name\";\n        return 1;\n    }\n    \n    warn \"T.alk other $q\";\n    if ($q == 8) {\n        # until J.most coord attention evaporates\n        # as in pulling on a list\n    }\n    A.ztime >= $q;\n};\n};"
      sc: 
        acgt: s
        act: 1
        args: A,C,G,T,s
        code: J
        dige: f785a635c1b7
        gk: J
        nk: c
        of: J
        v: cJ
      t: J_632
      "y": 
        cv: '0.632'
  "0.672": 
    J_672: 
      c: 
        s: "A.I.J_672 = sub {\nmy ($A,$C,$G,$T,$s,@Me) = @_;\nmy $I = A.I;\nmy $c = C.c;\nmy $J = C.c.J;\nreturn unless A.ico && A.ico.wtf.same;\nmy $cut = @{A.ico.ord};\nmy @cc = @{A.coi.ord};\nif (@cc > $cut) {\n    warn\"J.name entered stuff after 2!\".wdump [@cc, \n    '                 =============', @{A.ico.ord}];\n}\nI.d&bandon,A.coi;\nif (my $ljm = J.A.ljm) {\n    for my $s (@$ljm) {\n        s.noR=1;\n        I.d&jamsc,$s;\n    }\n}\nsayre \"SKIP T.alk\";# if J.V || J.most.J.V;\nT.whack = 1; # exit A.t&J\nT.same = 1; # exit Mo, T.not but not, kind of unlet ztime6->7\n};"
      sc: 
        acgt: s
        act: 1
        args: A,C,G,T,s
        code: J
        dige: 00368ebcb8c2
        gk: J
        nk: c
        of: J
        v: cJ
      t: J_672
      "y": 
        cv: '0.672'
