--- 
Ii: yo_ vers:HASH + yon_ vers:HASH
Mo: 
  "0.21": 
    yo_: 
      c: 
        s: "A.I.yo_ = sub {\nmy ($A,$C,$G,$T,$s,@Me) = @_;\nmy $I = A.I;\nmy $y = C.y;\nmy $o = C.y.o;\n$o = C.y.o = {M=>$o} if ref $o eq 'ARRAY';\no.M ||= [$C];\n# 4d jelly slower-downer\n# so we should acquire many A.t&\n# this is an EC into our C's T.oM, as s.M now\n# stackable A with stitchable others interleaved in time\n# 6 FLIES\no.M = [grep{defined}map{\n    my $d;\n    ref $_ || die \"oM nonhashi \".wdump 2, o.M;\n    d.t = _.t;\n    d.y = {%{_.y}};\n    d.c = {%{_.c}};\n    delete d.y.cv if y.ecv;\n    # allow any cv to wander from yarNgrid:\n    #y.cvil = 1 if defined d.y.cv;\n    d.sc = {%{_.sc||{}}};\n    # TRansituio, soul spread\n    if (o.ou) {\n        # inside our, change slightly how we see\n        # spread compound\n        d.c.pi = o.ou;\n        d.c.s = $_;\n    }\n    d.sc.oJ = o.oJ if o.oJ;\n    # travel agent ^\n    # traveli\n    Rw C14 $I $A $C:d;\n    #\n    A.J.V && say \"AH A.J.name  ::: d.t   \".ki d.sc;\n    keys %$d ? $d : undef\n}@{o.M}];\n};"
      sc: 
        acgt: s
        act: 1
        args: A,C,G,T,s
        code: Mo
        dige: 13e36e6b6035
        gk: o
        nk: 'y'
        of: Mo
        v: yo
      t: yo_
      "y": 
        cv: '0.21'
  "0.22": 
    yon_: 
      c: 
        s: "A.I.yon_ = sub {\nmy ($A,$C,$G,$T,$s,@Me) = @_;\nmy $I = A.I;\nmy $y = C.y;\nmy $o = C.y.o;\nmy $J = A.J;\nmy $Jy = J.C.y; # pi's sea\n# surface tesion, lum\nif (my $lt = C.y.limn) {\n    Jy.spc || die \"no space ! J.name - C.t keep more numbers\";\n    my $rl = int(9 * $lt * Jy.spc);\n    my $was = @{o.M};\n    C.y.rowlisp = $rl;\n    C.y.rowas = $was;\n    C.y.Jyspc = Jy.spc;\n    if ($was > $rl) {\n        my @um = @{o.M};\n        @um = @um[0..$rl-1];\n        @{o.M} = @um;\n        # space mod\n        my $s = $was;\n        n limo=>0.7,\"$was>$rl\",'%fs:7,hs:7487';\n    }\n}\nC.y.bal = o.M || die\"nomo\";\n# unless y unlimited...until\no.J = J.most.J if $Jy && Jy.o && Jy.spc > 0.1;\ndelete o.J if y.clos;\nmy $shut = $Jy && Jy.o && !o.J;\nC.y.over = (Jy.o && Jy.over && Jy.over || 0) + 0.06 if y.o.J;\n#sayre \"Jyspace: spc:  J.d.y.spc  or aspace: Jy.aspace\" if $Jy;\n# divvy space inside parent's share most J or in 3-4 of the pi\nmy $sl = Jy.spc * 0.01;\n$sl = 0.02 if $sl < 0.02;\nC.y.in ||= $shut ? 0.3 : $Jy ? Jy.cv + $sl : 0.1;\nC.y.out ||= $shut ? 0.4 : $Jy ? Jy.ov - $sl : 0.9;\nC.y.lum = y.lumfa if y.lumfa;\n};"
      sc: 
        acgt: s
        act: 1
        args: A,C,G,T,s
        code: Mo
        dige: 95e1a3198c2b
        gk: o
        nk: 'y'
        of: Mo
        v: yo
      t: yon_
      "y": 
        cv: '0.22'
