--- 
I: 
  "0.1": 
    jamsc: 
      c: 
        s: "A.I.jamsc = sub {\nmy ($A,$C,$G,$T,$s,@Me) = @_;\nmy $I = A.I;\nmy $ar = $s;\nmy $sc = ar.sc || {};\nmy $J = ar.J || die \"jamsc noj\".ki$s;\nar.C = ar.d if ar.d;\nmy $t = defined ar.t ? ar.t\n    : ar.j ? ar.j.l\n    : ar.C ? ar.C.t : die'not';\nmy $cv = defined ar.cv ? ar.cv\n    : ar.j ? ar.j.cv\n    : ar.C ? ar.C.cv || ar.C.y.cv : die'cvoy';\n\nif (ar.oJ && ar.oJ ne ar.J && !ar.noR) {\n    my $J = ar.oJ;\n    if (my $ljm = J.A.ljm) {\n        my $Me = \"ar.oJ.ind ar.J.name \"\n        .\" J.A.ljmo <<< J.name  sends:\"\n        .\" $t\\t$cv  $ljm\";\n        sayyl $Me if J.V || ar.J.V;\n        push @$ljm, {%$ar};\n    }\n}\n\nmy @fobz;\npush @fobz, [$cv,$t,undef,ar.s] if exists ar.s;\npush @fobz, [$cv,$t,$_,$sc->{$_}] for keys %$sc;\nmy @tobz = map {\n    my ($cv,$t,$s,$v) = @$_;\n    my $r;\n    if (J.tt) { # FUTU\n        $r = $cv.\"\\t\".$t.\"\\t\".$s;\n    }\n    else {\n        my $s = $s;\n        $s = '%'.$s if $s;\n        $r = $t.$s.\"\\t\".$cv;\n    }\n    if ($s) {\n        ar.C.sc->{$s} = $v;\n    }\n    [$r,$v]\n} @fobz;\n\nfor (@tobz) {\n    my ($r,$v) = @$_;\n    J.bz->($r,$v);\n}\n};"
      sc: 
        acgt: s
        args: A,C,G,T,s
        code: I
        dige: e10b659b1e49
        l: "#c"
        of: I
      t: jamsc
      "y": 
        cv: '0.1'
    rJ: 
      c: 
        s: "A.I.rJ = sub {\nmy ($A,$C,$G,$T,@M)=@_;\nmy ($r,$J,@Me) = @M;\nmy $I = A.I;\nmy $j;\nmy $sing;\nif (J.tt) {\n    $sing = 'J_tt';\n    (j.cv,j.t,j.style) = $r =~ /^(.*?)\\t(.*)\\t(.*?)$/;\n    if (!defined j.cv) {\n        sayre \"Hind $r  \" for 1..5;\n        (j.t,j.style,j.cv) = $r =~ /^(.+?)(?:%(.+))?\\s+(.+?)$/;\n    }\n}\nelse {\n    (j.t,j.style,j.cv) = $r =~ /^(.+?)(?:%(.+))?\\s+(.+?)$/;\n}\ndefined j.cv || die \"$sing no $r    \".ki $j;\nj.s = J.bb->{$r} if $J;\nj.nos = 1 if $J && !exists J.bb->{$r};\n$j;\n};"
      sc: 
        acgt: r,J
        args: A,C,G,T,r,J
        code: I
        dige: c21993cdde6e
        l: "#c"
        of: I
      t: rJ
      "y": 
        cv: '0.1'
Ii: jamsc vers:HASH + rJ vers:HASH
