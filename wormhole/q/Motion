--- 
I: 
  "0.1": 
    NM: 
      c: 
        s: "A.I.NM = sub {\nmy ($A,$C,$G,$T,@M)=@_;\nmy ($J,@Me) = @M;\nmy $I = A.I;\nmy $M = [];\nmy $N = [@Me];\nMn($N);\nreturn $M;\n};"
      sc: 
        acgt: J
        args: A,C,G,T,J
        code: I
        dige: 81935b609e73
        of: I
      t: NM
      "y": 
        cv: '0.1'
    Tz: 
      c: 
        s: "A.I.Tz = sub {\nmy ($A,$C,$G,$T,$s,@Me) = @_;\nmy $I = A.I;\nmy ($lo) = sort keys %$s;\nmy $v = $s->{$lo};\nT.incv = $v if $v ne '1';\n$v = [ I.d&sano , undef ];\npush @{A.mo.re->{$lo}||=[]}, $v;\n@{T.oM} = ();\n};"
      sc: 
        acgt: s
        args: A,C,G,T,s
        code: I
        dige: f8c6258af864
        of: I
      t: Tz
      "y": 
        cv: '0.1'
    ar: 
      c: 
        s: "A.I.ar = sub {\nmy ($A,$C,$G,$T,$s,@Me) = @_;\nmy $I = A.I;\nmy $ar;\nar.A=$A;ar.G=$G;ar.C=$C;ar.T=$T;ar.I=$I;\n$ar;\n};"
      sc: 
        acgt: s
        args: A,C,G,T,s
        code: I
        dige: 165ec51606e1
        of: I
      t: ar
      "y": 
        cv: '0.1'
    flywheels: 
      c: 
        s: "A.I.flywheels = sub {\nmy ($A,$C,$G,$T,$s,@Me) = @_;\nmy $I = A.I;\nfor my $k (sort keys %{A.fl||return}) {\n    my $v = A.fl->{$k};\n    $k = $2 if $k =~ /^(\\d+) (.+)$/;\n    Rw ym/$k $I $J:A.J $A $C $v $G $T;\n}\n};"
      sc: 
        acgt: s
        args: A,C,G,T,s
        code: I
        dige: 91d687815272
        of: I
      t: flywheels
      "y": 
        cv: '0.1'
    more: 
      c: 
        s: "A.I.more = sub {\nmy ($A,$C,$G,$T,$s,@Me) = @_;\nmy $I = A.I;\nmy ($lo) = sort keys %$s;\nif ($lo) {\n    my $ay = delete $s->{$lo};\n    my @N = map { {AZ=>{$lo=>$_}} } @$ay;\n    push @{A.mo.N}, @N;\n    saybl \"Looping \".@N.\" to $lo\" if A.J.V > 1;\n}\n};"
      sc: 
        acgt: s
        args: A,C,G,T,s
        code: I
        dige: 773fb5fe6514
        of: I
      t: more
      "y": 
        cv: '0.1'
    moy: 
      c: 
        s: "A.I.moy = sub {\nmy ($A,$C,$G,$T,$s,@Me) = @_;\nmy $I = A.I;\n# groups, spread the moise over A\nmy $i = A.mo.y->{$s}||die\"no$s\";\nmy $is = $i->{C.y.p}; # things in our C's pool\n{is=>$is,N=>[map{$is->{$_}}sort keys %$is]};\n};"
      sc: 
        acgt: s
        args: A,C,G,T,s
        code: I
        dige: 9894eb3b48fd
        of: I
      t: moy
      "y": 
        cv: '0.1'
    oseverato: 
      c: 
        s: "A.I.oseverato = sub {\nmy ($A,$C,$G,$T,$s,@Me) = @_;\nmy $I = A.I;\nA.T.d = T.d if T.d;\nif (my $z = delete T.Z) {\n    I.d&Tz,$z;\n}\n!@{A.mo.N} && A.mo.re &&\n    I.d&more,A.mo.re;\nif (my $y = delete T.y) {\n    I.d&mar,T.y;\n}\n};"
      sc: 
        acgt: s
        args: A,C,G,T,s
        code: I
        dige: ad99942695a2
        of: I
      t: oseverato
      "y": 
        cv: '0.1'
    sano: 
      c: 
        s: "A.I.sano = sub {\nmy ($A,$C,$G,$T,$s,@Me) = @_;\nmy $I = A.I;\nA.C = $C;\nA.T = $T;\nreturn$A\n};"
      sc: 
        acgt: s
        args: A,C,G,T,s
        code: I
        dige: 768000c91a15
        of: I
      t: sano
      "y": 
        cv: '0.1'
    z: 
      c: 
        s: "A.I.z = sub {\nmy ($A,$C,$G,$T,$s,@Me) = @_;\nmy $I = A.I;\nI.d&oseverato;\npush @{A.M}, @{T.oM};\ndelete T.not;\n1\n};"
      sc: 
        acgt: s
        args: A,C,G,T,s
        code: I
        dige: aac5b6b6d05e
        of: I
      t: z
      "y": 
        cv: '0.1'
  "0.71": 
    CoM: 
      c: 
        s: "A.I.CoM = sub {\nmy ($A,$C,$G,$T,$s,@Me) = @_;\nmy $I = A.I;\npush @{T.oM}, $C unless T.Z;\n};"
      sc: 
        acgt: s
        act: 1
        args: A,C,G,T,s
        code: I
        dige: c801cbee70c2
        of: I
      t: CoM
      "y": 
        cv: '0.71'
Ii: CoM vers:HASH + NM vers:HASH + Tz vers:HASH + ar vers:HASH + flywheels vers:HASH + more vers:HASH + moy vers:HASH + oseverato vers:HASH + sano vers:HASH + z vers:HASH
