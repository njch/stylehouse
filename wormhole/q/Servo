--- 
I: 
  "0.1": 
    AZu: 
      c: 
        s: "A.I.AZu = sub {\nmy ($A,$C,$G,$T,$s,@Me) = @_;\nmy $I = A.I;\ndie 'amany' if keys %$s > 1;\nmy ($cv,$ac) = %$s;\nmy ($AA,$CC) = ref $ac eq 'ARRAY' ? @$ac : ($ac,ac.C);\n$AA || $CC || die \"AZ NO A or C: \".wdump 3, $s;\n$AA && $CC && die \"AZ toomuch A or C: \".wdump 3, $s;\nmy $cov;\nif ($AA) {\n    $A = $AA;\n    my $Te = A.T;\n    $cov = delete Te.incv;\n    A.cv = $cov || $cv;\n    unshift @{A.mo.N}, $A;\n    return T.whack = T.isnot = 1;\n}\nelse {\n    A.C = $CC;\n}\nA.cv = $cov || $cv;\nT.whack = 1;\n};"
      sc: 
        acgt: s
        args: A,C,G,T,s
        code: I
        dige: b9b209c46e93
        l: Motion/oseverato
        of: I
      t: AZu
      "y": 
        cv: '0.1'
    ECu: 
      c: 
        s: "A.I.ECu = sub {\nmy ($A,$C,$G,$T,$s,@Me) = @_;\nmy $I = A.I;\nref $s eq 'ARRAY' || die;\nmy ($N,$c) = @$s;\n$N = [{MZ=>A.fl}, {MZ=>{'3 doex'=>$c}}, @$N];\n# and In could feel our light cone\nRw In $J:A.J $M:T.oM $N;\n# ^but instead push to A.N and A.No, the sister strand Whare Y Whare\n# and A walks through t&Y, d&Whare(6)\n# turns via n&ACGT\n# the time beams mapped... a W concat couldol\nT.not = 1;\n};"
      sc: 
        acgt: s
        args: A,C,G,T,s
        code: I
        dige: b669ca6a4ef1
        l: Motion
        of: I
      t: ECu
      "y": 
        cv: '0.1'
    EZu: 
      c: 
        s: "A.I.EZu = sub {\nmy ($A,$C,$G,$T,$s,@Me) = @_;\nmy $I = A.I;\nmy $Z = I.d&iZu,$s;\nwarn \"About EZ\";\nfor my $k (sort keys %$Z) {\n    my $N = $Z->{$k};\n    $N = [ map { [$_] } split \"\\n\",$N ] if !ref $N;\n    Rw In $M:T.oM $N;\n}\nT.not = 1;\n};"
      sc: 
        acgt: s
        args: A,C,G,T,s
        code: I
        dige: 9b484f39fd3c
        l: Motion
        of: I
      t: EZu
      "y": 
        cv: '0.1'
    MZu: 
      c: 
        s: "A.I.MZu = sub {\nmy ($A,$C,$G,$T,$s,@Me) = @_;\nmy $I = A.I;\nmy $uM = sub {\n    my ($k,$v) = @_;\n    if (defined $v && $v eq '0') {\n        delete A.fl->{$k}\n    }\n    else {\n        A.fl->{$k} = $v || 1;\n    }\n};\nref $s eq 'HASH' ?\n    map{ $uM->($_,$s->{$_}) } keys %$s\n:   map{\n        /^(.+?)(?::(.+))?$/ || die;\n        $uM->($1,$2);\n    } split /\\s+/, $s;\nT.not = 1;\n};"
      sc: 
        acgt: s
        args: A,C,G,T,s
        code: I
        dige: 65edd566f8ec
        of: I
      t: MZu
      "y": 
        cv: '0.1'
    WZu: 
      c: 
        s: "A.I.WZu = sub {\nmy ($A,$C,$G,$T,$s,@Me) = @_;\nmy $I = A.I;\nmy $Z = I.d&iZu,$s;\nwarn \"About WZ\";\nfor my $k (sort keys %$Z) {\n    my $s = $Z->{$k};\n    die wdump $s if ref $s ne 'ARRAY';\n    unshift @{A.N}, @$s;\n}\nT.not = 1;\n};"
      sc: 
        acgt: s
        args: A,C,G,T,s
        code: I
        dige: 088bc643504e
        l: Motion
        of: I
      t: WZu
      "y": 
        cv: '0.1'
    iZu: 
      c: 
        s: "A.I.iZu = sub {\nmy ($A,$C,$G,$T,$s,@Me) = @_;\nmy $I = A.I;\nmy $way = $s =~ s/^\\/// ? 'fund' : 'muck';\nmy $Z = Rw $way - $p:s $dclone=1;\n};"
      sc: 
        acgt: s
        args: A,C,G,T,s
        code: I
        dige: c7775099e1d2
        of: I
      t: iZu
      "y": 
        cv: '0.1'
    servehash: 
      c: 
        s: "A.I.servehash = sub {\nmy ($A,$C,$G,$T,$s,@Me) = @_;\nmy $I = A.I;\ns.AZ ? I.d&AZu,s.AZ\n    : s.MZ ? I.d&MZu,s.MZ\n    : s.EZ ? I.d&EZu,s.EZ\n    : s.WZ ? I.d&WZu,s.WZ\n    : s.EC ? I.d&ECu,s.EC\n    : s.Elvis ? I.d&Elvisu,s.Elvis\n    : die 'hash: '.wdump($s);\n};"
      sc: 
        acgt: s
        args: A,C,G,T,s
        code: I
        dige: 8c17605be4d7
        of: I
      t: servehash
      "y": 
        cv: '0.1'
Ii: AZu vers:HASH + ECu vers:HASH + EZu vers:HASH + MZu vers:HASH + WZu vers:HASH + iZu vers:HASH + servehash vers:HASH
