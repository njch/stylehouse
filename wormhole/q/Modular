--- 
I: 
  "0.1": 
    tlM: 
      c: 
        from: Rings
        s: "A.I.tlM = sub {\nmy ($A,$C,$G,$T,$s,@Me) = @_;\nmy $I = A.I;\nmy $os = $s;\n$s = s.M if ref $s eq 'HASH';\nref $s eq 'ARRAY' || return \"S not N/M: \".wdump[$os];\nRw ZNews $N:s;\n};"
      sc: 
        acgt: s
        args: A,C,G,T,s
        code: I
        dige: c91d40efa4a8
        nov: 1
        of: I
      t: tlM
      "y": 
        cv: '0.1'
Ii: Rings vers:HASH + Space vers:HASH + Spaci vers:HASH + Wrinkles vers:HASH + bal vers:HASH + lum vers:HASH
Mo: 
  "0.201": 
    bals_201: 
      c: 
        from: Wrinkles
        s: "A.I.bals_201 = sub {\nmy ($A,$C,$G,$T,$s,@Me) = @_;\nmy $I = A.I;\nmy $c = C.c;\nmy $bals = C.c.bals;\n# a non-s\nmy $N = C.c.bals;\n$N = [ map { [$_] } split \"\\n\",$N ] if !ref $N;\nmy $y = C.y || die\"noy\";\ny.o && return sayre \"bals y o already\".wdump[ki $C, $y, I.d&tlM,y.o ];\ny.bal && return sayre \"bals y bal already\".wdump[ki $C, $y, I.d&tlM,y.bal ];\ny.bal = [];\n# have some minions to od thi:\nA.oA || die \"wanting to s bab, no oA\";\nRw In $J:A.J $M:y.bal $N;\n};"
      sc: 
        acgt: s
        act: 1
        args: A,C,G,T,s
        code: Mo
        dige: f8129affbbad
        gk: bals
        nk: c
        of: Mo
        v: cbals
      t: bals_201
      "y": 
        cv: '0.201'
  "0.21": 
    yo_: 
      c: 
        from: Space
        s: "A.I.yo_ = sub {\nmy ($A,$C,$G,$T,$s,@Me) = @_;\nmy $I = A.I;\nmy $y = C.y;\nmy $o = C.y.o;\n$o = C.y.o = {M=>$o} if ref $o eq 'ARRAY';\no.M ||= [$C];\n# 4d jelly slower-downer\n# so we should acquire many A.t&\n# this is an EC into our C's T.oM, as s.M now\n# stackable A with stitchable others interleaved in time\n# 6 FLIES\no.M = [grep{defined}map{\n    my $d;\n    ref $_ || die \"oM nonhashi \".wdump 2, o.M;\n    d.t = _.t;\n    d.y = {%{_.y}};\n    d.c = {%{_.c}};\n    delete d.y.cv if y.ecv;\n    # allow any cv to wander from yarNgrid:\n    #y.cvil = 1 if defined d.y.cv;\n    d.sc = {%{_.sc||{}}};\n    # TRansituio, soul spread\n    if (o.ou) {\n        # inside our, change slightly how we see\n        # spread compound\n        d.c.pi = o.ou;\n        d.c.s = $_;\n    }\n    d.sc.oJ = o.oJ if o.oJ;\n    # travel agent ^\n    # traveli\n    Rw C14 $I $A $C:d;\n    #\n    A.J.V && say \"AH A.J.name  ::: d.t   \".ki d.sc;\n    keys %$d ? $d : undef\n}@{o.M}];\n};"
      sc: 
        acgt: s
        act: 1
        args: A,C,G,T,s
        code: Mo
        dige: 13e36e6b6035
        gk: o
        nk: 'y'
        of: Mo
        v: yo
      t: yo_
      "y": 
        cv: '0.21'
  "0.22": 
    yon_: 
      c: 
        from: Space
        s: "A.I.yon_ = sub {\nmy ($A,$C,$G,$T,$s,@Me) = @_;\nmy $I = A.I;\nmy $y = C.y;\nmy $o = C.y.o;\nmy $J = A.J;\nmy $Jy = J.C.y; # pi's sea\n# surface tesion, lum\nif (my $lt = C.y.limn) {\n    Jy.spc || die \"no space ! J.name - C.t keep more numbers\";\n    my $rl = int(9 * $lt * Jy.spc);\n    my $was = @{o.M};\n    C.y.rowlisp = $rl;\n    C.y.rowas = $was;\n    C.y.Jyspc = Jy.spc;\n    if ($was > $rl) {\n        my @um = @{o.M};\n        @um = @um[0..$rl-1];\n        @{o.M} = @um;\n        # space mod\n        my $s = $was;\n        n limo=>0.7,\"$was>$rl\",'%fs:7,hs:7487';\n    }\n}\nC.y.bal = o.M || die\"nomo\";\n# unless y unlimited...until\no.J = J.most.J if $Jy && Jy.o && Jy.spc > 0.1;\ndelete o.J if y.clos;\nmy $shut = $Jy && Jy.o && !o.J;\nC.y.over = (Jy.o && Jy.over && Jy.over || 0) + 0.06 if y.o.J;\n#sayre \"Jyspace: spc:  J.d.y.spc  or aspace: Jy.aspace\" if $Jy;\n# divvy space inside parent's share most J or in 3-4 of the pi\nmy $sl = Jy.spc * 0.01;\n$sl = 0.02 if $sl < 0.02;\nC.y.in ||= $shut ? 0.3 : $Jy ? Jy.cv + $sl : 0.1;\nC.y.out ||= $shut ? 0.4 : $Jy ? Jy.ov - $sl : 0.9;\nC.y.lum = y.lumfa if y.lumfa;\n};"
      sc: 
        acgt: s
        act: 1
        args: A,C,G,T,s
        code: Mo
        dige: 95e1a3198c2b
        gk: o
        nk: 'y'
        of: Mo
        v: yo
      t: yon_
      "y": 
        cv: '0.22'
  "0.223": 
    bal_0223: 
      c: 
        from: bal
        s: "A.I.bal_0223 = sub {\nmy ($A,$C,$G,$T,$s,@Me) = @_;\nmy $I = A.I;\nmy $y = C.y;\nmy $bal = C.y.bal;\ny.thi = @$bal;\n};"
      sc: 
        acgt: s
        act: 1
        args: A,C,G,T,s
        code: Mo
        dige: 6f384294c128
        gk: bal
        nk: 'y'
        of: Mo
        v: ybal
      t: bal_0223
      "y": 
        cv: '0.223'
  "0.23": 
    yin_023: 
      c: 
        from: Spaci
        s: "A.I.yin_023 = sub {\nmy ($A,$C,$G,$T,$s,@Me) = @_;\nmy $I = A.I;\nmy $y = C.y;\ny.cv ||= 0.1 if !defined y.cv && !defined y.in;\ny.in = y.cv if defined y.cv;\ny.in ||= 0.1;\ny.out = y.in + y.space if defined y.space;\ny.out ||= 0.9;\ny.thi ||= 1;\nif (my $mk = y.ert) {\n    $mk += y.ert while y.thi > $mk;\n    y.thi = $mk;\n}\ny.space = y.out - y.in;\ny.space *= -1 unless y.space > 0;\ny.aspace = y.space / y.thi;\n};"
      sc: 
        acgt: s
        act: 1
        args: A,C,G,T,s
        code: Mo
        dige: 09bfa8f4b59f
        nk: 'y'
        of: Mo
        v: 'y'
      t: yin_023
      "y": 
        cv: '0.23'
  "0.233": 
    lum_0233: 
      c: 
        from: lum
        s: "A.I.lum_0233 = sub {\nmy ($A,$C,$G,$T,$s,@Me) = @_;\nmy $I = A.I;\nmy $y = C.y;\nmy $lum = C.y.lum;\nmy $bal = C.y.bal;\nmy $um = {};\n(um.l,um.r) = split ',', $lum;\n$um->{$_} =\n    $um->{$_} =~ /^(?:(\\d+)-)??(?:(\\d)+)(?:-(\\d)+)?$/\n    ? {i=>$1,um=>$2,o=>$3}\n    : die \"notunder: \".wdump 2, $um\n    for grep{defined $um->{$_}} keys %$um;\nsaybl \"Lum C.t: \". wdump 2, $um;\num.l.um ||= 3;\nmy $lumhalvesby = (um.l.um / 2) / (um.r.um || 3);\nmy $i = 0;\nfor (@$bal) {\n    _.y.thy+=um.l.um;\n    $i++;\n    if ($i > um.l.o) {\n        um.l.um -= $lumhalvesby if um.l.um > 0.1;\n    }\n}\n};"
      sc: 
        acgt: s
        act: 1
        args: A,C,G,T,s
        code: Mo
        dige: 2d41d806321b
        gk: lum
        nk: 'y'
        of: Mo
        rg: bal
        v: ylum
      t: lum_0233
      "y": 
        cv: '0.233'
  "0.241": 
    bal_0241: 
      c: 
        from: bal
        s: "A.I.bal_0241 = sub {\nmy ($A,$C,$G,$T,$s,@Me) = @_;\nmy $I = A.I;\nmy $y = C.y;\nmy $bal = C.y.bal;\nmy $total = sum(map { y.thy||1 } @$bal) || 1;\nmy $over = @$bal || 1;\ny.u.muav = $over / $total;\n};"
      sc: 
        acgt: s
        act: 1
        args: A,C,G,T,s
        code: Mo
        dige: fdf2000554e0
        gk: bal
        nk: 'y'
        of: Mo
        v: ybal
      t: bal_0241
      "y": 
        cv: '0.241'
  "0.26": 
    yarN_026: 
      c: 
        from: Spaci
        s: "A.I.yarN_026 = sub {\nmy ($A,$C,$G,$T,$s,@Me) = @_;\nmy $I = A.I;\nmy $y = C.y;\nref $y eq 'HASH' || die \"Notash: \".wdump 2, $C;\n!defined y.u || ref y.u eq 'HASH' || die \"Nou : y.u \".wdump 2, $y;\ny.u.v = defined y.cv ? y.cv\n    : defined y.in ? y.in\n    : die \"no yiny\".ki$y;\ny.thi || die \"Whythi\".ki$C;\ndie \":idify\" if $y ne C.y;\nmy @lot = map {\n    my $C = eval { I.d&xot,{},$C };\n    C.y.i = $_-1;\n    $@ && die \"Tpp \".wdump 2, $C;\n    $C\n} 1..y.thi;\nif (@lot > 1) {\n    push @{A.mo.re->{0.29}||=[]}, map{[undef,$_]}@lot;\n    T.not = 1;\n}\nelse {\n    my ($CC) = @lot;\n    ref $CC eq 'HASH' || die \"not one? $CC\";\n    %$C = %$CC;\n}\n};"
      sc: 
        acgt: s
        act: 1
        args: A,C,G,T,s
        code: Mo
        dige: 8cd2d2451b2c
        nk: 'y'
        of: Mo
        v: 'y'
      t: yarN_026
      "y": 
        cv: '0.26'
  "0.3": 
    yinvout_03: 
      c: 
        from: Spaci
        s: "A.I.yinvout_03 = sub {\nmy ($A,$C,$G,$T,$s,@Me) = @_;\nmy $I = A.I;\nmy $y = C.y;\ny.mu = 1;\n};"
      sc: 
        acgt: s
        act: 1
        args: A,C,G,T,s
        code: Mo
        dige: ad46585553f0
        nk: 'y'
        of: Mo
        v: 'y'
      t: yinvout_03
      "y": 
        cv: '0.3'
  "0.301": 
    bal_0301: 
      c: 
        from: bal
        s: "A.I.bal_0301 = sub {\nmy ($A,$C,$G,$T,$s,@Me) = @_;\nmy $I = A.I;\nmy $y = C.y;\nmy $bal = C.y.bal;\nmy $CC = $bal->[y.i];\nreturn T.not = 1 if ref $CC ne 'HASH';\n$CC ||= {};\nI.d&xot,$C,$CC;\n};"
      sc: 
        acgt: s
        act: 1
        args: A,C,G,T,s
        code: Mo
        dige: 4abc5e4585e9
        gk: bal
        nk: 'y'
        of: Mo
        v: ybal
      t: bal_0301
      "y": 
        cv: '0.301'
  "0.337": 
    bal_0337: 
      c: 
        from: bal
        s: "A.I.bal_0337 = sub {\nmy ($A,$C,$G,$T,$s,@Me) = @_;\nmy $I = A.I;\nmy $y = C.y;\nmy $bal = C.y.bal;\ny.mu = y.thy if exists y.thy;\ny.mu = y.mu * y.u.muav if y.u.muav;\n#\nsay \"A.J.C.t  /  T.t ist y.mu  among y.u.muav\"\n    if A.J.V && y.u.muav != 1;\n};"
      sc: 
        acgt: s
        act: 1
        args: A,C,G,T,s
        code: Mo
        dige: 961c52ddca78
        gk: bal
        nk: 'y'
        of: Mo
        v: ybal
      t: bal_0337
      "y": 
        cv: '0.337'
  "0.34": 
    black_034: 
      c: 
        from: Spaci
        s: "A.I.black_034 = sub {\nmy ($A,$C,$G,$T,$s,@Me) = @_;\nmy $I = A.I;\nmy $y = C.y;\nmy $was = y.u.v;\ndefined $was || die\"noAv\".ki$C;\n# in:\ny.cv = 0+sprintf '%.6f', y.u.v unless y.cvil && defined y.cv;\ny.pcv = 0+sprintf '%.6f', y.i / C.y.thi;\n# over:\nmy $in = y.aspace * y.mu;\ny.u.v += $in;\n# out: \ny.ov = sprintf '%.6f', y.u.v;\ny.spc = y.ov - y.cv;\n#\nsayyl \"Bend: C.t   $was += $in       y.aspace * y.mu       muav:y.u.muav\"\n    if A.J.V && y.u.muav && y.u.muav != 1;\n};"
      sc: 
        acgt: s
        act: 1
        args: A,C,G,T,s
        code: Mo
        dige: 780c2d1c9cc0
        nk: 'y'
        of: Mo
        v: 'y'
      t: black_034
      "y": 
        cv: '0.34'
  "0.37": 
    ent_037: 
      c: 
        from: Spaci
        s: "A.I.ent_037 = sub {\nmy ($A,$C,$G,$T,$s,@Me) = @_;\nmy $I = A.I;\nmy $y = C.y;\n$y->{$_} = 0+sprintf('%.6f',$y->{$_}) for qw'cv ov aspace spc';\nC.sc.yspc = y.spc if C.sc.nspc;\nC.sc.ml = (C.y.over * 40).\"%\" if y.over;\n};"
      sc: 
        acgt: s
        act: 1
        args: A,C,G,T,s
        code: Mo
        dige: e5e45151c9a6
        nk: 'y'
        of: Mo
        v: 'y'
      t: ent_037
      "y": 
        cv: '0.37'
    lum_037: 
      c: 
        from: lum
        s: "A.I.lum_037 = sub {\nmy ($A,$C,$G,$T,$s,@Me) = @_;\nmy $I = A.I;\nmy $y = C.y;\nmy $lum = C.y.lum;\nmy $spc = C.y.spc;\n# feel effects of... f eel\nmy $upt = 0;\n$spc = $upt if $spc < $upt;\n# t-rewirey formulae:\nmy $fs = ($spc / 0.02) * 4;\nC.sc.fs = $fs;# if $fs < 9;\nC.y.spc = $spc;\n};"
      sc: 
        acgt: s
        act: 1
        args: A,C,G,T,s
        code: Mo
        dige: 9f7d2692b241
        gk: lum
        nk: 'y'
        of: Mo
        rg: spc
        v: ylum
      t: lum_037
      "y": 
        cv: '0.37'
  "0.42": 
    id_42: 
      c: 
        from: Wrinkles
        s: "A.I.id_42 = sub {\nmy ($A,$C,$G,$T,$s,@Me) = @_;\nmy $I = A.I;\nmy $c = C.c;\nmy $id = C.c.id;\nC.sc.id = $id;\n};"
      sc: 
        acgt: s
        act: 1
        args: A,C,G,T,s
        code: Mo
        dige: 978d6868350b
        gk: id
        nk: c
        of: Mo
        v: cid
      t: id_42
      "y": 
        cv: '0.42'
    idly_42: 
      c: 
        from: Wrinkles
        s: "A.I.idly_42 = sub {\nmy ($A,$C,$G,$T,$s,@Me) = @_;\nmy $I = A.I;\nmy $c = C.c;\nmy $idly = C.c.idly;\nC.sc.id = mkuid();\n};"
      sc: 
        acgt: s
        act: 1
        args: A,C,G,T,s
        code: Mo
        dige: 2e6df5bb59f8
        gk: idly
        nk: c
        of: Mo
        v: cidly
      t: idly_42
      "y": 
        cv: '0.42'
    pwar_42: 
      c: 
        from: Wrinkles
        s: "A.I.pwar_42 = sub {\nmy ($A,$C,$G,$T,$s,@Me) = @_;\nmy $I = A.I;\nmy $c = C.c;\nmy $pwar = C.c.pwar;\nC.sc.pwar = $pwar;\n};"
      sc: 
        acgt: s
        act: 1
        args: A,C,G,T,s
        code: Mo
        dige: 0863a0af13cb
        gk: pwar
        nk: c
        of: Mo
        v: cpwar
      t: pwar_42
      "y": 
        cv: '0.42'
    pwth_42: 
      c: 
        from: Wrinkles
        s: "A.I.pwth_42 = sub {\nmy ($A,$C,$G,$T,$s,@Me) = @_;\nmy $I = A.I;\nmy $c = C.c;\nmy $pwth = C.c.pwth;\n# 8case, to way\n$pwth =~ s/^(?!!)/!/s;\nC.c.path = $pwth;\n};"
      sc: 
        acgt: s
        act: 1
        args: A,C,G,T,s
        code: Mo
        dige: 19fac008cf29
        gk: pwth
        nk: c
        of: Mo
        v: cpwth
      t: pwth_42
      "y": 
        cv: '0.42'
  "0.421": 
    path_421: 
      c: 
        from: Wrinkles
        s: "A.I.path_421 = sub {\nmy ($A,$C,$G,$T,$s,@Me) = @_;\nmy $I = A.I;\nmy $c = C.c;\nmy $path = C.c.path;\n# install sc path, wants idlyness (indexedness)\nC.sc.path = $path;\nC.sc.idly = 1 if !C.c.fo;\n};"
      sc: 
        acgt: s
        act: 1
        args: A,C,G,T,s
        code: Mo
        dige: c863eeeded28
        gk: path
        nk: c
        of: Mo
        v: cpath
      t: path_421
      "y": 
        cv: '0.421'
  "0.77": 
    pin_077: 
      c: 
        from: Spaci
        s: "A.I.pin_077 = sub {\nmy ($A,$C,$G,$T,$s,@Me) = @_;\nmy $I = A.I;\nmy $y = C.y;\nreturn if delete T.oke;\nmy $oJ = A.J;\nmy $J = C.y.o && C.y.o.J || $oJ;\nmy $ar = {};\nar.s = C.c.s if exists C.c.s;\nRw jamsc + $J $oJ $C $sc:C.sc;\nsayyl \"Hamsc! A.talk: C.t C.y.cv     \".ki(1,{c=>C.c,sc=>C.sc})\n    if A.J.V;\n};"
      sc: 
        acgt: s
        act: 1
        args: A,C,G,T,s
        code: Mo
        dige: ab93cceef46a
        nk: 'y'
        of: Mo
        v: 'y'
      t: pin_077
      "y": 
        cv: '0.77'
