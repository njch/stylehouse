--- 
Ii: J_3212 0.3212 ARRAY 0:HASH
Sev: 
  "0.3212": 
    J_3212: 
      c: 
        s: "A.I.J_3212 = sub {\nmy ($A,$C,$G,$T,$s,@Me) = @_;\nmy $I = A.I;\nmy $c = C.c;\nmy $J = C.c.J;\nmy $Y = C.c.Y;\nmy $lv = C.y.lv;\nmy $vl = C.y.vl;\n    # eat, rob, art\n    return sayre \"$J->{name} is not mo: $J->{mo}->{J}->{name} but is trying to have curve\"\n        if $J ne $J->{mo}->{J};\n    my $host;\n    if ($C->{c}->{root}) {\n        $host = $C->{sc}->{anch} || 'TeCurve';\n        return sayre \"topleve $C->{t} is self\" if $host eq $C->{t};\n        return saygr \"top $C->{t} is blank anch, $C->{sc}->{geo}\" if $host eq '1';\n        my ($cur) = map {$_->{nj}}\n        $J->{n}->($host =>$C=>'');\n        my $wat = $cur->{El}->{Duv}->{ids}->{$C->{sc}->{id}};\n        $C->{sc}->{geo} = $wat->{sc}->{geo} || die \n        \"not foundcurve $A->{J}->{name} fo $J->{name} fo $C->{t} ion $host: \".wdump [\n            $cur,\n            (IDD=>map{ki $_} values %{$cur->{El}->{Duv}->{ids}}),\n            $cur->{El}->{Duv}->{tv}\n        ];\n    }\n    else {\n        $host = 'Claw';\n        my $st;\n        $st = $Y->{stackurv} ||= do {\n            $st->{J} = $G->{w}->(\"findupi\", {I => $I, J => $J, m => [\"curv\"]}, $G);\n            $st->{l} = 'self curv';\n            $st->{J} ||= do {\n                $st->{l} = \"$host curv\";\n                $G->{w}->(\"findupi\", {I => $I, J => $host, m => [\"curv\"]}, $G);\n            };\n            $st\n        };\n        my $cJ = $st->{J};\n        $host = \"$st->{l}\";\n        $G->{w}->(\"curre\", {I => $I, J => $cJ, Y => $cJ->{El}->{Pre}, V => $cJ->{El}->{Duv}, C => $C}, $G);\n    }\n    saybl \"$host: $C->{y}->{cv}       $C->{t}   found  $C->{sc}->{geo}\" if $J->{V};\n    # might wanna crawl\n};"
      sc: 
        acgt: s
        act: 1
        args: A,C,G,T,s
        code: Sev
        dige: 68d5c693b1d6
        gk: J
        nk: c
        rg: J,Y,ylv,yvl
        v: cJ
      t: J_3212
      "y": 
        cv: '0.3212'
