--- 
Art: 
  "0.5": 
    code_5: 
      c: 
        s: "A.I.code_5 = sub {\n    my ($A,$C,$G,$T,$s,@Me) = @_;\n    my $I = A.I;\n    my $sc = C.sc;\n    my $code = C.sc.code;\n    my $J = C.sc.J;\n    my $V = C.sc.V;\n    my $k = C.y.k;\n    my $at = C.y.at;\n    my $ta = C.y.ta;\n    my $lv = C.y.lv;\n    my $vl = C.y.vl;\n    lv.op.sc.code = 1;\n    my $v = {};\n    Rw ym/conoi $A $C:at $G $T $v;\n    lv.X = $v;\n};"
      sc: 
        acgt: s
        act: 1
        args: A,C,G,T,s
        code: Art
        dige: 31a5448ca1d5
        gk: code
        nk: sc
        nov: 1
        nv: sccode
        rg: J,V,yk,yat,yta,ylv,yvl
        v: sccode
      t: code_5
      "y": 
        cv: '0.5'
  "0.7": 
    J_7: 
      c: 
        from: odeo
        s: "A.I.J_7 = sub {\n    my ($A,$C,$G,$T,$s,@Me) = @_;\n    my $I = A.I;\n    my $sc = C.sc;\n    my $J = C.sc.J;\n    my $V = C.sc.V;\n    my $k = C.y.k;\n    my $at = C.y.at;\n    my $ta = C.y.ta;\n    my $lv = C.y.lv;\n    my $vl = C.y.vl;\n    return sayre \"BanJ\" if C.c.root;\n    my $rv = lv.do.Duv || die \"Noduv\";\n    rv.X || sayre \"A.J.name  Not Xceiving C.t  (C.sc.J.name)\";\n    lv.X ||= rv.X;\n    #lv.do->{V.name} = $rv;\n};"
      sc: 
        acgt: s
        act: 1
        args: A,C,G,T,s
        code: Art
        dige: 638b81740835
        gk: J
        nk: sc
        nov: 1
        nv: scJ
        rg: J,V,yk,yat,yta,ylv,yvl
        v: scJ
      t: J_7
      "y": 
        cv: '0.7'
    X_7: 
      c: 
        from: odeo
        s: "A.I.X_7 = sub {\n    my ($A,$C,$G,$T,$s,@Me) = @_;\n    my $I = A.I;\n    my $sc = C.sc;\n    my $X = C.sc.X;\n    my $J = C.sc.J;\n    my $V = C.sc.V;\n    my $k = C.y.k;\n    my $at = C.y.at;\n    my $ta = C.y.ta;\n    my $lv = C.y.lv;\n    my $vl = C.y.vl;\n    lv.X = $X;\n    at.sc.notX = Rw sumX $X:lv.X;\n};"
      sc: 
        acgt: s
        act: 1
        args: A,C,G,T,s
        code: Art
        dige: 74ec423f6da2
        gk: X
        nk: sc
        nov: 1
        nv: scX
        rg: J,V,yk,yat,yta,ylv,yvl
        v: scX
      t: X_7
      "y": 
        cv: '0.7'
    root_7: 
      c: 
        from: odeo
        s: "A.I.root_7 = sub {\n    my ($A,$C,$G,$T,$s,@Me) = @_;\n    my $I = A.I;\n    my $c = C.c;\n    my $root = C.c.root;\n    my $J = C.c.J;\n    my $V = C.c.V;\n    my $k = C.y.k;\n    my $at = C.y.at;\n    my $ta = C.y.ta;\n    my $lv = C.y.lv;\n    my $vl = C.y.vl;\n    lv.X ||= vl.X || {My=>\"self\"}; # disappears\n    my $src = [];\n    for my $k (@{C.c.V.os}) {\n        my $kv = lv.do->{$k} || die \"nondo $k\";\n        kv.X || next;\n        my $D = kv.C;\n        D.sc.noXup && sayyl(\"tent: C.t (J.at.isle)   D.sc.J.C.t (D.sc.J.at.isle)\")\n            && next;\n    \n        if (kv.X.Ii && !C.sc.invis) { # has spII before, Ii clues versions of things\n            my $N = [];\n            Rw sumX $X:kv.X $N;\n            my $for = D.t || die \"Nofor \".ki $D;\n            _.c.from = join '/', grep{defined} $for, _.c.from for @$N;\n        }\n        my $ib = \"D.t D.y.cv kv.i\";\n    \n        push @$src, [$ib,kv.X];\n    }\n    Rw spII $A $II:lv.X $src;\n    lv.X.My eq 'self' && die \"Didndt get any C.sc.isle off J.name: \".wdump C.c.V.os;\n};"
      sc: 
        acgt: s
        act: 1
        args: A,C,G,T,s
        code: Art
        dige: b1e310f1a559
        gk: root
        nk: c
        nov: 1
        nv: croot
        rg: J,V,yk,yat,yta,ylv,yvl
        v: croot
      t: root_7
      "y": 
        cv: '0.7'
    try_7: 
      c: 
        from: odeo
        s: "A.I.try_7 = sub {\n    my ($A,$C,$G,$T,$s,@Me) = @_;\n    my $I = A.I;\n    my $sc = C.sc;\n    my $try = C.sc.try;\n    my $J = C.sc.J;\n    my $V = C.sc.V;\n    my $k = C.y.k;\n    my $at = C.y.at;\n    my $ta = C.y.ta;\n    my $lv = C.y.lv;\n    my $vl = C.y.vl;\n    die \"Try use A.J.name\";\n    my $isle = C.c.Y.root;\n    my $isl = isle.sc.isle;\n    return sayre \"no isle on isle.t\" if !$isl;\n    my $f = \"w/$isl/$try\";\n    if (-f $f) {\n        lv.X = LoadFile($f);\n        at.sc.f = $f;\n        at.sc.notX = Rw sumX $X:lv.X;\n    }\n};"
      sc: 
        acgt: s
        act: 1
        args: A,C,G,T,s
        code: Art
        dige: 6d91458b8695
        gk: try
        nk: sc
        nov: 1
        nv: sctry
        rg: J,V,yk,yat,yta,ylv,yvl
        v: sctry
      t: try_7
      "y": 
        cv: '0.7'
  "0.701": 
    coil_701: 
      c: 
        from: odeo
        s: "A.I.coil_701 = sub {\n    my ($A,$C,$G,$T,$s,@Me) = @_;\n    my $I = A.I;\n    my $sc = C.sc;\n    my $coil = C.sc.coil;\n    my $J = C.sc.J;\n    my $V = C.sc.V;\n    my $k = C.y.k;\n    my $at = C.y.at;\n    my $ta = C.y.ta;\n    my $lv = C.y.lv;\n    my $vl = C.y.vl;\n    my $N = [];\n    my $X = lv.X || die \"no X on J.name for isl\";\n    sayyl \"C.t: coils: \". Rw sumX $X $N;\n    for $D (grep { _.sc.tldo }@$N) {\n        Rw D.sc.tldo $D $N;\n    }\n};"
      sc: 
        acgt: s
        act: 1
        args: A,C,G,T,s
        code: Art
        dige: b7016951a7c9
        gk: coil
        nk: sc
        nov: 1
        nv: sccoil
        rg: J,V,yk,yat,yta,ylv,yvl
        v: sccoil
      t: coil_701
      "y": 
        cv: '0.701'
Ii: odeo 0.3 ARRAY 0:HASH + code_5 0.5 ARRAY 0:HASH
em: 
  "0.3": 
    isle_3: 
      c: 
        from: odeo
        s: "A.I.isle_3 = sub {\n    my ($A,$C,$G,$T,$s,@Me) = @_;\n    my $I = A.I;\n    my $sc = C.sc;\n    my $isle = C.sc.isle;\n    my $J = C.sc.J;\n    my $V = C.sc.V;\n    my $k = C.y.k;\n    my $at = C.y.at;\n    my $ta = C.y.ta;\n    my $lv = C.y.lv;\n    my $vl = C.y.vl;\n    my $X = C.y.lv.X || die \"no X on J.name for isl $isle\";\n    $X = {} if $isle eq 'top';\n    Rw down $f=$isle/C.t $s:X;\n};"
      sc: 
        acgt: s
        act: 1
        args: A,C,G,T,s
        code: em
        dige: 4573836da5ad
        gk: isle
        nk: sc
        nov: 1
        nv: scisle
        rg: J,V,yk,yat,yta,ylv,yvl
        v: scisle
      t: isle_3
      "y": 
        cv: '0.3'
    jsl_3: 
      c: 
        from: odeo
        s: "A.I.jsl_3 = sub {\n    my ($A,$C,$G,$T,$s,@Me) = @_;\n    my $I = A.I;\n    my $sc = C.sc;\n    my $jsl = C.sc.jsl;\n    my $J = C.c.J;\n    my $em = C.c.em;\n    $jsl = \"js\" if $jsl eq '1';\n    $jsl eq 'js' || die \"No regoc $jsl langoup\";\n    my $X = C.y.lv.X || die \"no X on J.name for isl $jsl\";\n    my $N = [];\n    sayyl \"jsl $jsl: \". Rw sumX $X $N;\n    my $S = Rw humms $J $N spots;\n    my $l = em.lines = [];\n    push @$l, map{\" a\\.e(\".sjson($_).\");\"} @{S.z};\n    push @$l, Rw JSpots $II:S.X;\n    C.c.os = 1 if !grep {/\\S/} @{S.z};\n    C.sc.Wc = 1;\n};"
      sc: 
        acgt: s
        act: 1
        args: A,C,G,T,s
        cg: J,em
        code: em
        dige: 1e5507fdf525
        gk: jsl
        nk: sc
        nov: 1
        nv: scjsl
        rg: J,em
        v: scjsl
      t: jsl_3
      "y": 
        cv: '0.3'
